const chai = require('chai');
const expect = chai.expect;
const config = require('../config.js');
chai.use(require('chai-like'));

let obnizA;
let checkBoard;

describe('8-ble', function () {
  this.timeout(120000 * (config.json.long_timeout || 1));
  before(async function () {
    await config.waitForConenct();
    obnizA = config.obnizA;
    checkBoard = config.checkBoard;
    if (checkBoard.ble && checkBoard.ble.extended === true) {
      // ok
    } else {
      this.skip();
    }
    await checkBoard.ble.initWait();
    await obnizA.ble.initWait();
  });

  it('ad ', async () => {
    checkBoard.ble.extendedAdvertisement.setMode('broadcast');
    checkBoard.ble.extendedAdvertisement.setAdvData({
      localName: 'test_obniz',
      serviceData: [
        {
          uuid: 0x1234,
          data: [
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
            0x45,
          ],
        },
        {
          uuid: 0x2534,
          data: [
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x65,
            0x65,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x65,
            0x55,
            0x55,
            0x65,
            0x65,
            0x55,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x65,
            0x65,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x65,
            0x55,
            0x55,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x65,
            0x65,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x65,
            0x55,
            0x55,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x65,
            0x65,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x65,
            0x55,
            0x55,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x55,
          ],
        },
        {
          uuid: 0x3544,
          data: [
            0x55,
            0x55,
            0x55,
            0x55,
            0x55,
            0x65,
            0x65,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x65,
            0x55,
            0x55,
            0x65,
            0x65,
            0x55,
            0x55,
            0x55,
            0x55,
          ],
        },
      ],
    });
    await checkBoard.ble.extendedAdvertisement.startWait(
      'PHY_Coded',
      'PHY_Coded'
    );
    console.log('Advertise Start');

    const target = { localName: 'test_obniz' };
    const setting = {
      usePhy1m: false,
      usePhyCoded: true,
    };

    const p = new Promise((resolve) => {
      obnizA.ble.scan.onfind = async (peripheral) => {
        resolve(peripheral);
      };
    });

    await obnizA.ble.scan.startWait(target, setting);
    console.log('Scan Start');

    const data = await p;

    await obnizA.ble.scan.endWait();
    await checkBoard.ble.advertisement.endWait();
    checkBoard.ble.peripheral.end();

    expect(data.adv_data).like([
      11,
      9,
      116,
      101,
      115,
      116,
      95,
      111,
      98,
      110,
      105,
      122,
      255,
      22,
      52,
      18,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      69,
      90,
      22,
      52,
      37,
      85,
      85,
      85,
      85,
      85,
      101,
      101,
      101,
      101,
      85,
      85,
      85,
      101,
      85,
      85,
      101,
      101,
      85,
      101,
      101,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      101,
      101,
      101,
      101,
      85,
      85,
      85,
      101,
      85,
      85,
      101,
      101,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      101,
      101,
      101,
      101,
      85,
      85,
      85,
      101,
      85,
      85,
      101,
      101,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      85,
      101,
      101,
      101,
      101,
      85,
      85,
      85,
      101,
      85,
      85,
      101,
      101,
      85,
      85,
      85,
      85,
      24,
      22,
      68,
      53,
      85,
      85,
      85,
      85,
      85,
      101,
      101,
      101,
      101,
      85,
      85,
      85,
      101,
      85,
      85,
      101,
      101,
      85,
      85,
      85,
      85,
    ]);
  });
});
