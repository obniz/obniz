{"version":3,"sources":["../src/obniz/libs/webpackReplace/packagejson-loader.ts"],"names":[],"mappings":";;AAAA,mBAAwB,MAAW;IAEjC,aAAa;IACb,MAAM,IAAI,GAAQ,IAAI,CAAC;IACvB,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IACD,IAAI;QACF,MAAM,GAAG,GAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,MAAM,GAAQ,EAAE,CAAC;QAEvB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACvB,SAAS;aACV;YACD,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KAChD;IAAC,OAAO,GAAG,EAAE;QACX,IAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAvBD,4BAuBC","file":"packagejson-loader.js","sourcesContent":["export default function(source: any): any {\n\n  // @ts-ignore\n  const self: any = this;\n  if (self.cacheable) {\n    self.cacheable();\n  }\n  try {\n    const src: any = JSON.parse(source);\n    const output: any = {};\n\n    for (const key of Object.keys(src)) {\n      if (key.startsWith(\"_\")) {\n        continue;\n      }\n      output[key] = src[key];\n    }\n\n    return JSON.stringify(output, undefined, \"\\t\");\n  } catch (err) {\n    (self as any).emitError(err);\n    return null;\n  }\n}\n"]}