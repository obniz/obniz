{"version":3,"sources":["../src/obniz/libs/wscommand/WSSchema.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,GAAG,QAAQ,KAAK,CAAC,CAAC;AAgD5B,eAAe,GAAG,CAAC","file":"WSSchema.d.ts","sourcesContent":["import tv4 = require(\"tv4\");\nimport {ValidationError} from \"tv4\";\n\ntv4.defineError(\"UNIQUE_KEYS\", 10001, \"{uniqueKeys} are must be unique value.\");\n\n// @ts-ignore\ntv4.defineKeyword(\"uniqueKeys\", (data: any, value: any, schema: tv4.JsonSchema): string | ValidationError | null => {\n  if (!Array.isArray(value)) {\n    return null;\n  }\n  const targets: any = [];\n  for (const key of value) {\n    if (data[key] !== null && data[key] !== undefined) {\n      targets.push(data[key]);\n    }\n  }\n  const duplicated: any = targets.filter((x: any, i: any, self: any) => {\n    return self.indexOf(x) !== self.lastIndexOf(x);\n  });\n  if (duplicated.length > 0) {\n    return {\n      code: tv4.errorCodes.UNIQUE_KEYS,\n      message: {uniqueKeys: value.join(\",\")},\n    };\n  }\n  return null;\n});\n\nconst wsSchema: any = [];\nimport replaceContext from \"../webpackReplace/require-context\";\n\n// @ts-ignore\nrequire.context = replaceContext;\n\n// @ts-ignore\nif (require.context && require.context.setBaseDir) {\n\n  // @ts-ignore\n  require.context.setBaseDir(__dirname);\n}\nconst context: any = require.context(\"../../../json_schema\", true, /\\.yml$/);\nfor (const path of context.keys()) {\n  const oneSchema: any = context(path);\n  wsSchema.push(oneSchema);\n}\n\nwsSchema.map(tv4.addSchema);\n\nexport default tv4;\n"]}