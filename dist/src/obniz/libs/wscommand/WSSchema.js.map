{"version":3,"sources":["../src/obniz/libs/wscommand/WSSchema.ts"],"names":[],"mappings":";;;;;AAAA,2BAA4B;AAG5B,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,wCAAwC,CAAC,CAAC;AAEhF,aAAa;AACb,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAS,EAAE,KAAU,EAAE,MAAsB,EAAmC,EAAE;IACjH,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACzB,OAAO,IAAI,CAAC;KACb;IACD,MAAM,OAAO,GAAQ,EAAE,CAAC;IACxB,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;QACvB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YACjD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACzB;KACF;IACD,MAAM,UAAU,GAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,IAAS,EAAE,EAAE;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IACH,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,OAAO;YACL,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,WAAW;YAChC,OAAO,EAAE,EAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;SACvC,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC,CAAC;AAEH,MAAM,QAAQ,GAAQ,EAAE,CAAC;AACzB,wFAA+D;AAE/D,aAAa;AACb,OAAO,CAAC,OAAO,GAAG,yBAAc,CAAC;AAEjC,aAAa;AACb,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE;IAEjD,aAAa;IACb,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;CACvC;AACD,MAAM,OAAO,GAAQ,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC7E,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE;IACjC,MAAM,SAAS,GAAQ,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;CAC1B;AAED,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAE5B,kBAAe,GAAG,CAAC","file":"WSSchema.js","sourcesContent":["import tv4 = require(\"tv4\");\nimport {ValidationError} from \"tv4\";\n\ntv4.defineError(\"UNIQUE_KEYS\", 10001, \"{uniqueKeys} are must be unique value.\");\n\n// @ts-ignore\ntv4.defineKeyword(\"uniqueKeys\", (data: any, value: any, schema: tv4.JsonSchema): string | ValidationError | null => {\n  if (!Array.isArray(value)) {\n    return null;\n  }\n  const targets: any = [];\n  for (const key of value) {\n    if (data[key] !== null && data[key] !== undefined) {\n      targets.push(data[key]);\n    }\n  }\n  const duplicated: any = targets.filter((x: any, i: any, self: any) => {\n    return self.indexOf(x) !== self.lastIndexOf(x);\n  });\n  if (duplicated.length > 0) {\n    return {\n      code: tv4.errorCodes.UNIQUE_KEYS,\n      message: {uniqueKeys: value.join(\",\")},\n    };\n  }\n  return null;\n});\n\nconst wsSchema: any = [];\nimport replaceContext from \"../webpackReplace/require-context\";\n\n// @ts-ignore\nrequire.context = replaceContext;\n\n// @ts-ignore\nif (require.context && require.context.setBaseDir) {\n\n  // @ts-ignore\n  require.context.setBaseDir(__dirname);\n}\nconst context: any = require.context(\"../../../json_schema\", true, /\\.yml$/);\nfor (const path of context.keys()) {\n  const oneSchema: any = context(path);\n  wsSchema.push(oneSchema);\n}\n\nwsSchema.map(tv4.addSchema);\n\nexport default tv4;\n"]}