{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandSPI.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,aAAa,CAAC;AAEpC,cAAM,YAAa,SAAQ,SAAS;IAC3B,MAAM,EAAE,GAAG,CAAC;IACZ,YAAY,EAAE,GAAG,CAAC;IAClB,cAAc,EAAE,GAAG,CAAC;IACpB,iBAAiB,EAAE,GAAG,CAAC;IACvB,aAAa,EAAE,GAAG,CAAC;IACnB,SAAS,EAAE,GAAG,CAAC;IACf,WAAW,EAAE,GAAG,CAAC;IACjB,qBAAqB,EAAE,GAAG,CAAC;IAC3B,sBAAsB,EAAE,GAAG,CAAC;;IAc5B,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;IA4CnC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;IAK/B,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;IAW9B,aAAa,CAAC,IAAI,EAAE,GAAG;IAwBvB,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;CAgBhE;AAED,eAAe,YAAY,CAAC","file":"WSCommandSPI.d.ts","sourcesContent":["import WSCommand from \"./WSCommand\";\n\nclass WSCommandSPI extends WSCommand {\n  public module: any;\n  public _CommandInit: any;\n  public _CommandDeinit: any;\n  public _CommandWriteRead: any;\n  public _CommandWrite: any;\n  public ioNotUsed: any;\n  public sendCommand: any;\n  public validateCommandSchema: any;\n  public WSCommandNotFoundError: any;\n\n  constructor() {\n    super();\n    this.module = 5;\n\n    this._CommandInit = 0;\n    this._CommandDeinit = 1;\n    this._CommandWriteRead = 2;\n    this._CommandWrite = 3;\n  }\n\n  // Commands\n\n  public initMaster(params: any, module: any) {\n    const mode: any = 0; // master mode\n\n    let clk: any = params.clk;\n    let mosi: any = params.mosi;\n    let miso: any = params.miso;\n    let cs: any = params.cs;\n\n    const clock: any = params.clock;\n\n    if (clk === null && mosi === null && miso === null) {\n      throw new Error(\"spi: master mode require one of clk/mosi/miso\");\n    }\n\n    if (clk === null) {\n      clk = this.ioNotUsed;\n    }\n    if (mosi === null) {\n      mosi = this.ioNotUsed;\n    }\n    if (miso === null) {\n      miso = this.ioNotUsed;\n    }\n    if (cs === null) {\n      cs = this.ioNotUsed;\n    }\n\n    const buf: any = new Uint8Array(11);\n    buf[0] = module;\n    buf[1] = mode;\n    buf[2] = clk;\n    buf[3] = mosi;\n    buf[4] = miso;\n    buf[5] = this.ioNotUsed; // wp\n    buf[6] = this.ioNotUsed; // hd\n    buf[7] = clock >> (3 * 8);\n    buf[8] = clock >> (2 * 8);\n    buf[9] = clock >> (1 * 8);\n    buf[10] = clock;\n    buf[11] = cs;\n\n    this.sendCommand(this._CommandInit, buf);\n  }\n\n  public deinit(params: any, module: any) {\n    const buf: any = new Uint8Array([module]);\n    this.sendCommand(this._CommandDeinit, buf);\n  }\n\n  public write(params: any, module: any) {\n    const buf: any = new Uint8Array(1 + params.data.length);\n    buf[0] = module;\n    buf.set(params.data, 1);\n    if (params.read) {\n      this.sendCommand(this._CommandWriteRead, buf);\n    } else {\n      this.sendCommand(this._CommandWrite, buf);\n    }\n  }\n\n  public parseFromJson(json: any) {\n    for (let i = 0; i < 2; i++) {\n      const module: any = json[\"spi\" + i];\n      if (module === undefined) {\n        continue;\n      }\n\n      const schemaData: any = [\n        {uri: \"/request/spi/init_master\", onValid: this.initMaster},\n        {uri: \"/request/spi/write\", onValid: this.write},\n        {uri: \"/request/spi/deinit\", onValid: this.deinit},\n      ];\n      const res: any = this.validateCommandSchema(schemaData, module, \"spi\" + i, i);\n\n      if (res.valid === 0) {\n        if (res.invalidButLike.length > 0) {\n          throw new Error(res.invalidButLike[0].message);\n        } else {\n          throw new this.WSCommandNotFoundError(`[spi${i}]unknown command`);\n        }\n      }\n    }\n  }\n\n  public notifyFromBinary(objToSend: any, func: any, payload: any) {\n    if (func === this._CommandWriteRead && payload.byteLength > 1) {\n      const module_index: any = payload[0];\n      // var received = payload.slice(1);\n\n      const arr: any = new Array(payload.byteLength - 1);\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = payload[i + 1];\n      }\n      objToSend[\"spi\" + module_index] = {\n        data: arr,\n      };\n    } else {\n      super.notifyFromBinary(objToSend, func, payload);\n    }\n  }\n}\n\nexport default WSCommandSPI;\n"]}