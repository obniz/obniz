{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandLogicAnalyzer.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AAEpC,MAAM,sBAAuB,SAAQ,mBAAS;IAS5C;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,WAAW;IAEJ,IAAI,CAAC,MAAW;QACrB,MAAM,EAAE,GAAQ,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,YAAY,GAAQ,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QACjD,MAAM,YAAY,GAAQ,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEjD,MAAM,UAAU,GAAQ,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvD,MAAM,UAAU,GAAQ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QAC/C,MAAM,GAAG,GAAQ,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;QACtB,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;QACtB,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;QACrB,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEM,MAAM,CAAC,MAAW;QACvB,MAAM,GAAG,GAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAEM,aAAa,CAAC,IAAS;QAC5B,MAAM,MAAM,GAAQ,IAAI,CAAC,cAAc,CAAC;QACxC,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO;SACR;QACD,MAAM,UAAU,GAAQ;YACtB,EAAC,GAAG,EAAE,6BAA6B,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAC;YACxD,EAAC,GAAG,EAAE,+BAA+B,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAC;SAC7D,CAAC;QACF,MAAM,GAAG,GAAQ,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAElF,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;YACnB,IAAI,GAAG,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAChD;iBAAM;gBACL,MAAM,IAAI,IAAI,CAAC,sBAAsB,CACnC,iCAAiC,CAClC,CAAC;aACH;SACF;IACH,CAAC;IAEM,gBAAgB,CAAC,SAAc,EAAE,IAAS,EAAE,OAAY;QAC7D,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC9B,MAAM,GAAG,GAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YACnD,IAAI,MAAM,GAAQ,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,IAAI,GAAQ,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;oBAChC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,EAAE,CAAC;iBACV;aACF;YACD,SAAS,CAAC,cAAc,GAAG;gBACzB,IAAI,EAAE,GAAG;aACV,CAAC;SACH;aAAM;YACL,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAClD;IACH,CAAC;CACF;AAED,kBAAe,sBAAsB,CAAC","file":"WSCommandLogicAnalyzer.js","sourcesContent":["import WSCommand from \"./WSCommand\";\r\n\r\nclass WSCommandLogicAnalyzer extends WSCommand {\r\n  public module: any;\r\n  public _CommandInit: any;\r\n  public _CommandDeinit: any;\r\n  public _CommandRecv: any;\r\n  public sendCommand: any;\r\n  public validateCommandSchema: any;\r\n  public WSCommandNotFoundError: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.module = 10;\r\n\r\n    this._CommandInit = 0;\r\n    this._CommandDeinit = 1;\r\n    this._CommandRecv = 2;\r\n  }\r\n\r\n  // Commands\r\n\r\n  public init(params: any) {\r\n    const io: any = params.io[0];\r\n    const intervalUsec: any = params.interval * 1000;\r\n    const durationUsec: any = params.duration * 1000;\r\n\r\n    const matchValue: any = parseInt(params.trigger.value);\r\n    const matchCount: any = params.trigger.samples;\r\n    const buf: any = new Uint8Array(12);\r\n    buf[0] = 1;\r\n    buf[1] = io;\r\n    buf[2] = intervalUsec >> (8 * 3);\r\n    buf[3] = intervalUsec >> (8 * 2);\r\n    buf[4] = intervalUsec >> (8 * 1);\r\n    buf[5] = intervalUsec;\r\n    buf[6] = durationUsec >> (8 * 3);\r\n    buf[7] = durationUsec >> (8 * 2);\r\n    buf[8] = durationUsec >> (8 * 1);\r\n    buf[9] = durationUsec;\r\n    buf[10] = matchValue;\r\n    buf[11] = matchCount;\r\n    this.sendCommand(this._CommandInit, buf);\r\n  }\r\n\r\n  public deinit(params: any) {\r\n    const buf: any = new Uint8Array(0);\r\n    this.sendCommand(this._CommandDeinit, buf);\r\n  }\r\n\r\n  public parseFromJson(json: any) {\r\n    const module: any = json.logic_analyzer;\r\n    if (module === undefined) {\r\n      return;\r\n    }\r\n    const schemaData: any = [\r\n      {uri: \"/request/logicAnalyzer/init\", onValid: this.init},\r\n      {uri: \"/request/logicAnalyzer/deinit\", onValid: this.deinit},\r\n    ];\r\n    const res: any = this.validateCommandSchema(schemaData, module, \"logic_analyzer\");\r\n\r\n    if (res.valid === 0) {\r\n      if (res.invalidButLike.length > 0) {\r\n        throw new Error(res.invalidButLike[0].message);\r\n      } else {\r\n        throw new this.WSCommandNotFoundError(\r\n          `[logic_analyzer]unknown command`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public notifyFromBinary(objToSend: any, func: any, payload: any) {\r\n    if (func === this._CommandRecv) {\r\n      const arr: any = new Array(payload.byteLength * 8);\r\n      let offset: any = 0;\r\n      for (let i = 0; i < payload.byteLength; i++) {\r\n        const byte: any = payload[i];\r\n        for (let bit = 0; bit < 8; bit++) {\r\n          arr[offset] = byte & (0x80 >>> bit) ? 1 : 0;\r\n          offset++;\r\n        }\r\n      }\r\n      objToSend.logic_analyzer = {\r\n        data: arr,\r\n      };\r\n    } else {\r\n      super.notifyFromBinary(objToSend, func, payload);\r\n    }\r\n  }\r\n}\r\n\r\nexport default WSCommandLogicAnalyzer;\r\n"]}