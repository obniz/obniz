{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandIO.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,aAAa,CAAC;AA2BpC,cAAM,WAAY,SAAQ,SAAS;IAC1B,MAAM,EAAE,GAAG,CAAC;IACZ,cAAc,EAAE,GAAG,CAAC;IACpB,mBAAmB,EAAE,GAAG,CAAC;IACzB,kBAAkB,EAAE,GAAG,CAAC;IACxB,kBAAkB,EAAE,GAAG,CAAC;IACxB,wBAAwB,EAAE,GAAG,CAAC;IAC9B,WAAW,EAAE,GAAG,CAAC;IACjB,WAAW,EAAE,GAAG,CAAC;IACjB,qBAAqB,EAAE,GAAG,CAAC;IAC3B,sBAAsB,EAAE,GAAG,CAAC;IAC5B,qBAAqB,EAAE,GAAG,CAAC;IAC3B,cAAc,EAAE,GAAG,CAAC;IACpB,YAAY,EAAE,GAAG,CAAC;;IAgBlB,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAK1B,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAKjC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAK1B,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAQhC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAe/B,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAiB7B,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAK3B,aAAa,CAAC,IAAI,EAAE,GAAG;IA4BvB,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;CA2ChE;AAED,eAAe,WAAW,CAAC","file":"WSCommandIO.d.ts","sourcesContent":["import WSCommand from \"./WSCommand\";\n\nconst COMMAND_IO_ERRORS_IO_TOO_HEAVY_WHEN_HIGH: any = 1;\nconst COMMAND_IO_ERRORS_IO_TOO_HEAVY_WHEN_LOW: any = 2;\nconst COMMAND_IO_ERRORS_IO_TOO_LOW: any = 3;\nconst COMMAND_IO_ERRORS_IO_TOO_HIGH: any = 4;\nconst COMMAND_IO_ERRORS_IO_FORCE_RELEASED: any = 0xf0;\n\nconst COMMAND_IO_ERROR_MESSAGES: any = {\n  0: \"unknown error\",\n  1: \"heavy output. output voltage is too low when driving high\",\n  2: \"heavy output. output voltage is too high when driving low\",\n  3: \"output voltage is too low when driving high. io state has changed output to input\",\n  4: \"output voltage is too high when driving low. io state has changed output to input\",\n};\n\nconst COMMAND_IO_MUTEX_NAMES: any = {\n  1: \"io.input\",\n  2: \"io.output\",\n  3: \"pwm\",\n  4: \"uart\",\n  5: \"i2c\",\n  6: \"spi\",\n  7: \"LogicAnalyzer\",\n  8: \"Measure\",\n};\n\nclass WSCommandIO extends WSCommand {\n  public module: any;\n  public _CommandOutput: any;\n  public _CommandInputStream: any;\n  public _CommandInputOnece: any;\n  public _CommandOutputType: any;\n  public _CommandPullResisterType: any;\n  public _CommandEnd: any;\n  public sendCommand: any;\n  public validateCommandSchema: any;\n  public WSCommandNotFoundError: any;\n  public COMMAND_FUNC_ID_ERROR: any;\n  public envelopWarning: any;\n  public envelopError: any;\n\n  constructor() {\n    super();\n    this.module = 2;\n\n    this._CommandOutput = 0;\n    this._CommandInputStream = 1;\n    this._CommandInputOnece = 2;\n    this._CommandOutputType = 3;\n    this._CommandPullResisterType = 4;\n    this._CommandEnd = 5;\n  }\n\n  // Commands\n\n  public output(value: any, id: any) {\n    const buf: any = new Uint8Array([id, value]);\n    this.sendCommand(this._CommandOutput, buf);\n  }\n\n  public outputDetail(params: any, id: any) {\n    const buf: any = new Uint8Array([id, params.value]);\n    this.sendCommand(this._CommandOutput, buf);\n  }\n\n  public input(params: any, id: any) {\n    const buf: any = new Uint8Array([id]);\n    this.sendCommand(this._CommandInputOnece, buf);\n  }\n\n  public inputDetail(params: any, id: any) {\n    const buf: any = new Uint8Array([id]);\n    this.sendCommand(\n      params.stream ? this._CommandInputStream : this._CommandInputOnece,\n      buf,\n    );\n  }\n\n  public outputType(params: any, id: any) {\n    const buf: any = new Uint8Array(2);\n    buf[0] = id;\n    if (params.output_type === \"push-pull5v\") {\n      buf[1] = 0;\n    } else if (params.output_type === \"push-pull3v\") {\n      buf[1] = 2;\n    } else if (params.output_type === \"open-drain\") {\n      buf[1] = 3;\n    } else {\n      return \"io unknown outputtype: \" + params.output_type;\n    }\n    this.sendCommand(this._CommandOutputType, buf);\n  }\n\n  public pullType(params: any, id: any) {\n    const buf: any = new Uint8Array(2);\n    buf[0] = id;\n    if (params.pull_type === \"float\") {\n      buf[1] = 0;\n    } else if (params.pull_type === \"pull-up3v\") {\n      buf[1] = 1;\n    } else if (params.pull_type === \"pull-down\") {\n      buf[1] = 2;\n    } else if (params.pull_type === \"pull-up5v\") {\n      buf[1] = 3;\n    } else {\n      return \"io unknown pull_type: \" + params.pull_type;\n    }\n    this.sendCommand(this._CommandPullResisterType, buf);\n  }\n\n  public deinit(params: any, id: any) {\n    const buf: any = new Uint8Array([id]);\n    this.sendCommand(this._CommandEnd, buf);\n  }\n\n  public parseFromJson(json: any) {\n    for (let i = 0; i < 40; i++) {\n      const module: any = json[\"io\" + i];\n      if (module === undefined) {\n        continue;\n      }\n\n      const schemaData: any = [\n        {uri: \"/request/io/input\", onValid: this.input},\n        {uri: \"/request/io/input_detail\", onValid: this.inputDetail},\n        {uri: \"/request/io/output\", onValid: this.output},\n        {uri: \"/request/io/output_detail\", onValid: this.outputDetail},\n        {uri: \"/request/io/output_type\", onValid: this.outputType},\n        {uri: \"/request/io/pull_type\", onValid: this.pullType},\n        {uri: \"/request/io/deinit\", onValid: this.deinit},\n      ];\n      const res: any = this.validateCommandSchema(schemaData, module, \"io\" + i, i);\n\n      if (res.valid === 0) {\n        if (res.invalidButLike.length > 0) {\n          throw new Error(res.invalidButLike[0].message);\n        } else {\n          throw new this.WSCommandNotFoundError(`[io${i}]unknown command`);\n        }\n      }\n    }\n  }\n\n  public notifyFromBinary(objToSend: any, func: any, payload: any) {\n    if (func === this._CommandInputStream || func === this._CommandInputOnece) {\n      for (let i = 0; i < payload.byteLength; i += 2) {\n        objToSend[\"io\" + payload[i]] = payload[i + 1] > 0;\n      }\n    } else if (func === this.COMMAND_FUNC_ID_ERROR && payload.byteLength >= 4) {\n      // const esperr = payload[0];\n      const err: any = payload[1];\n      // const ref_func_id = payload[2];\n      const module_index: any = payload[3];\n\n      if (\n        err === COMMAND_IO_ERRORS_IO_TOO_HEAVY_WHEN_HIGH ||\n        err === COMMAND_IO_ERRORS_IO_TOO_HEAVY_WHEN_LOW\n      ) {\n        this.envelopWarning(objToSend, `io${module_index}`, {\n          message: COMMAND_IO_ERROR_MESSAGES[err],\n        });\n      } else if (\n        err === COMMAND_IO_ERRORS_IO_TOO_LOW ||\n        err === COMMAND_IO_ERRORS_IO_TOO_HIGH\n      ) {\n        this.envelopError(objToSend, `io${module_index}`, {\n          message: COMMAND_IO_ERROR_MESSAGES[err],\n        });\n      } else if (\n        err === COMMAND_IO_ERRORS_IO_FORCE_RELEASED &&\n        payload.byteLength >= 6\n      ) {\n        const oldMutexOwner: any = payload[4];\n        const newMutexOwner: any = payload[5];\n        this.envelopWarning(objToSend, \"debug\", {\n          message: `io${module_index} binded \"${\n            COMMAND_IO_MUTEX_NAMES[oldMutexOwner]\n          }\" was stopped. \"${\n            COMMAND_IO_MUTEX_NAMES[newMutexOwner]\n          }\" have started using this io.`,\n        });\n      }\n    } else {\n      super.notifyFromBinary(objToSend, func, payload);\n    }\n  }\n}\n\nexport default WSCommandIO;\n"]}