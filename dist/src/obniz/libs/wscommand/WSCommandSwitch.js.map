{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandSwitch.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AAEpC,MAAM,eAAgB,SAAQ,mBAAS;IAQrC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,WAAW;IAEJ,GAAG,CAAC,MAAW;QACpB,MAAM,GAAG,GAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAEM,aAAa,CAAC,IAAS;QAC5B,MAAM,MAAM,GAAQ,IAAI,CAAC,MAAM,CAAC;QAChC,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO;SACR;QACD,MAAM,UAAU,GAAQ,CAAC,EAAC,GAAG,EAAE,qBAAqB,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC1E,MAAM,GAAG,GAAQ,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE1E,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;YACnB,IAAI,GAAG,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAChD;iBAAM;gBACL,MAAM,IAAI,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;aAClE;SACF;IACH,CAAC;IAEM,gBAAgB,CAAC,SAAc,EAAE,IAAS,EAAE,OAAY;QAC7D,IACE,CAAC,IAAI,KAAK,IAAI,CAAC,aAAa,IAAI,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC;YAClE,OAAO,CAAC,UAAU,KAAK,CAAC,EACxB;YACA,MAAM,KAAK,GAAQ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,MAAM,GAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YACtD,SAAS,CAAC,MAAM,GAAG;gBACjB,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;aACrB,CAAC;YACF,IAAI,IAAI,KAAK,IAAI,CAAC,aAAa,EAAE;gBAC/B,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;aACjC;SACF;aAAM;YACL,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SAClD;IACH,CAAC;CACF;AAED,kBAAe,eAAe,CAAC","file":"WSCommandSwitch.js","sourcesContent":["import WSCommand from \"./WSCommand\";\n\nclass WSCommandSwitch extends WSCommand {\n  public module: any;\n  public _CommandNotifyValue: any;\n  public _CommandOnece: any;\n  public sendCommand: any;\n  public validateCommandSchema: any;\n  public WSCommandNotFoundError: any;\n\n  constructor() {\n    super();\n    this.module = 9;\n\n    this._CommandNotifyValue = 0;\n    this._CommandOnece = 1;\n  }\n\n  // Commands\n\n  public get(params: any) {\n    const buf: any = new Uint8Array(0);\n    this.sendCommand(this._CommandOnece, buf);\n  }\n\n  public parseFromJson(json: any) {\n    const module: any = json.switch;\n    if (module === undefined) {\n      return;\n    }\n    const schemaData: any = [{uri: \"/request/switch/get\", onValid: this.get}];\n    const res: any = this.validateCommandSchema(schemaData, module, \"switch\");\n\n    if (res.valid === 0) {\n      if (res.invalidButLike.length > 0) {\n        throw new Error(res.invalidButLike[0].message);\n      } else {\n        throw new this.WSCommandNotFoundError(`[switch]unknown command`);\n      }\n    }\n  }\n\n  public notifyFromBinary(objToSend: any, func: any, payload: any) {\n    if (\n      (func === this._CommandOnece || func === this._CommandNotifyValue) &&\n      payload.byteLength === 1\n    ) {\n      const state: any = parseInt(payload[0]);\n      const states: any = [\"none\", \"push\", \"left\", \"right\"];\n      objToSend.switch = {\n        state: states[state],\n      };\n      if (func === this._CommandOnece) {\n        objToSend.switch.action = \"get\";\n      }\n    } else {\n      super.notifyFromBinary(objToSend, func, payload);\n    }\n  }\n}\n\nexport default WSCommandSwitch;\n"]}