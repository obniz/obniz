{"version":3,"sources":["../src/obniz/libs/wscommand/WSCommandPWM.ts"],"names":[],"mappings":"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","file":"WSCommandPWM.js","sourcesContent":["import WSCommand from \"./WSCommand\";\r\n\r\nclass WSCommandPWM extends WSCommand {\r\n  public module: any;\r\n  public ModuleNum: any;\r\n  public _CommandInit: any;\r\n  public _CommandDeinit: any;\r\n  public _CommandSetFreq: any;\r\n  public _CommandSetDuty: any;\r\n  public _CommandAMModulate: any;\r\n  public pwms: any;\r\n  public sendCommand: any;\r\n  public validateCommandSchema: any;\r\n  public WSCommandNotFoundError: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.module = 3;\r\n    this.ModuleNum = 6;\r\n    this.resetInternalStatus();\r\n\r\n    this._CommandInit = 0;\r\n    this._CommandDeinit = 1;\r\n    this._CommandSetFreq = 2;\r\n    this._CommandSetDuty = 3;\r\n    this._CommandAMModulate = 4;\r\n  }\r\n\r\n  public resetInternalStatus() {\r\n    this.pwms = [];\r\n    for (let i = 0; i < this.ModuleNum; i++) {\r\n      this.pwms.push({});\r\n    }\r\n  }\r\n\r\n  // Commands\r\n\r\n  public init(params: any, module: any) {\r\n    const buf: any = new Uint8Array(2);\r\n    buf[0] = module;\r\n    buf[1] = params.io;\r\n    this.pwms[module].io = params.io;\r\n    this.sendCommand(this._CommandInit, buf);\r\n  }\r\n\r\n  public deinit(params: any, module: any) {\r\n    const buf: any = new Uint8Array(1);\r\n    buf[0] = module;\r\n    this.pwms[module] = {};\r\n    this.sendCommand(this._CommandDeinit, buf);\r\n  }\r\n\r\n  public freq(params: any, module: any) {\r\n    const buf: any = new Uint8Array(5);\r\n    buf[0] = module;\r\n    buf[1] = params.freq >> (8 * 3);\r\n    buf[2] = params.freq >> (8 * 2);\r\n    buf[3] = params.freq >> (8 * 1);\r\n    buf[4] = params.freq;\r\n    this.pwms[module].freq = params.freq;\r\n    this.sendCommand(this._CommandSetFreq, buf);\r\n  }\r\n\r\n  public pulse(params: any, module: any) {\r\n    const buf: any = new Uint8Array(5);\r\n    const pulseUSec: any = params.pulse * 1000;\r\n    buf[0] = module;\r\n    buf[1] = pulseUSec >> (8 * 3);\r\n    buf[2] = pulseUSec >> (8 * 2);\r\n    buf[3] = pulseUSec >> (8 * 1);\r\n    buf[4] = pulseUSec;\r\n    this.pwms[module].pulseUSec = pulseUSec;\r\n    this.sendCommand(this._CommandSetDuty, buf);\r\n  }\r\n\r\n  public amModulate(params: any, module: any) {\r\n    const bitLength: any = params.modulate.data.length;\r\n    const byteLength: any = Math.floor((bitLength + 7) / 8);\r\n    const buf: any = new Uint8Array(5 + byteLength);\r\n    const symbol_length_usec: any = params.modulate.symbol_length * 1000;\r\n    buf[0] = module;\r\n    buf[1] = symbol_length_usec >> (8 * 3);\r\n    buf[2] = symbol_length_usec >> (8 * 2);\r\n    buf[3] = symbol_length_usec >> (8 * 1);\r\n    buf[4] = symbol_length_usec;\r\n    let bitIndex: any = 0;\r\n    for (let byte = 0; byte < byteLength; byte++) {\r\n      buf[5 + byte] = 0;\r\n      for (let bit = 0; bit < 8; bit++) {\r\n        if (params.modulate.data[bitIndex++]) {\r\n          buf[5 + byte] |= 0x80 >>> bit;\r\n        }\r\n      }\r\n    }\r\n    this.sendCommand(this._CommandAMModulate, buf);\r\n  }\r\n\r\n  public parseFromJson(json: any) {\r\n    for (let i = 0; i < this.ModuleNum; i++) {\r\n      const module: any = json[\"pwm\" + i];\r\n      if (module === undefined) {\r\n        continue;\r\n      }\r\n\r\n      const schemaData: any = [\r\n        {uri: \"/request/pwm/init\", onValid: this.init},\r\n        {uri: \"/request/pwm/freq\", onValid: this.freq},\r\n        {uri: \"/request/pwm/pulse\", onValid: this.pulse},\r\n        {uri: \"/request/pwm/modulate\", onValid: this.amModulate},\r\n        {uri: \"/request/pwm/deinit\", onValid: this.deinit},\r\n      ];\r\n      const res: any = this.validateCommandSchema(schemaData, module, \"pwm\" + i, i);\r\n\r\n      if (res.valid === 0) {\r\n        if (res.invalidButLike.length > 0) {\r\n          throw new Error(res.invalidButLike[0].message);\r\n        } else {\r\n          throw new this.WSCommandNotFoundError(`[pwm${i}]unknown command`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default WSCommandPWM;\r\n"]}