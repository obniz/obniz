{"version":3,"sources":["../src/obniz/libs/utils/util.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAS;IA+Db,YAAY,KAAU;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IA/DM,MAAM,CAAC,UAAU,CAAC,MAAW,EAAE,IAAS;QAC7C,IAAI,aAAa,GAAQ,EAAE,CAAC;QAC5B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,OAAO,aAAa,CAAC;SACtB;QACD,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aAChC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACnC,MAAM,CAAC,CAAC,GAAQ,EAAE,GAAG,EAAE,EAAE;YACxB,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;QAET,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,aAAa,CAAC,MAAW,EAAE,IAAS;QAChD,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;QAED,KAAK,MAAM,KAAK,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,EAAE;gBAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAAC,IAAS;QACtC,IAAI,MAAM,GAAQ,IAAI,CAAC;QACvB,IAAI;YACF,MAAM,aAAa,GAAQ,OAAO,CAAC,gBAAgB,CAAC,CAAC,aAAa,CAAC;YACnE,IAAI,aAAa,EAAE;gBACjB,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC7D;SACF;QAAC,OAAO,CAAC,EAAE;YACV,uBAAuB;SACxB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAAC,GAAQ;QACrC,MAAM,GAAG,GAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,GAAW,EAAE,GAAW,EAAE,aAAqB,EAAE,QAAgB;QAC1F,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,GAAG,aAAa,kCAAkC,QAAQ,mBAAmB,GAAG,OAAO,aAAa,OAAO,GAAG,IAAI,CAAC,CAAC;SACrI;IACH,CAAC;IAWM,mBAAmB,CAAC,KAAU,EAAE,MAAW;QAChD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI;gBACF,MAAM,EAAC,YAAY,EAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9C;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,KAAK,CACb,6EAA6E,CAC9E,CAAC;aACH;SACF;aAAM;YACL,MAAM,MAAM,GAAQ,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACtB,MAAM,CAAC,KAAa,CAAC,wBAAwB,CAAC,GAAG,MAAM,CAAC;YACzD,MAAM,IAAI,GAAQ,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAEzB,MAAM,GAAG,GAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzC,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;CACF;AAED,kBAAe,SAAS,CAAC","file":"util.js","sourcesContent":["class ObnizUtil {\r\n\r\n  public static _keyFilter(params: any, keys: any) {\r\n    let filterdParams: any = {};\r\n    if (typeof params !== \"object\") {\r\n      return filterdParams;\r\n    }\r\n    filterdParams = Object.keys(params)\r\n      .filter((key) => keys.includes(key))\r\n      .reduce((obj: any, key) => {\r\n        obj[key] = params[key];\r\n        return obj;\r\n      }, {});\r\n\r\n    return filterdParams;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {String} key name of not found.\r\n   */\r\n  public static _requiredKeys(params: any, keys: any) {\r\n    if (typeof params !== \"object\") {\r\n      return keys[0];\r\n    }\r\n\r\n    for (const index in keys) {\r\n      if (!(keys[index] in params)) {\r\n        return keys[index];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static dataArray2string(data: any) {\r\n    let string: any = null;\r\n    try {\r\n      const StringDecoder: any = require(\"string_decoder\").StringDecoder;\r\n      if (StringDecoder) {\r\n        string = new StringDecoder(\"utf8\").write(Buffer.from(data));\r\n      }\r\n    } catch (e) {\r\n      // this.obniz.error(e);\r\n    }\r\n    return string;\r\n  }\r\n\r\n  public static string2dataArray(str: any) {\r\n    const buf: any = Buffer.from(str);\r\n    return [...buf];\r\n  }\r\n\r\n  public static assertNumber(min: number, max: number, variable_name: string, variable: number) {\r\n    if (!(min <= variable && variable <= max)) {\r\n      throw new Error(`${variable_name} is out of range.Input value : ${variable} .value range [ ${min} <= ${variable_name} <= ${max} ]`);\r\n    }\r\n  }\r\n\r\n  public obniz: any;\r\n  public width: any;\r\n  public height: any;\r\n  public createCanvas: any;\r\n\r\n  constructor(obniz: any) {\r\n    this.obniz = obniz;\r\n  }\r\n\r\n  public createCanvasContext(width: any, height: any) {\r\n    if (this.obniz.isNode) {\r\n      try {\r\n        const {createCanvas} = require(\"canvas\");\r\n        return createCanvas(this.width, this.height);\r\n      } catch (e) {\r\n        throw new Error(\r\n          \"obniz.js require node-canvas to draw rich contents. see more detail on docs\",\r\n        );\r\n      }\r\n    } else {\r\n      const canvas: any = document.createElement(\"canvas\");\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      (canvas.style as any)[\"-webkit-font-smoothing\"] = \"none\";\r\n      const body: any = document.getElementsByTagName(\"body\")[0];\r\n      body.appendChild(canvas);\r\n\r\n      const ctx: any = canvas.getContext(\"2d\");\r\n      return ctx;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ObnizUtil;\r\n"]}