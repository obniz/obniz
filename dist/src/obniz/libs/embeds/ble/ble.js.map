{"version":3,"sources":["../src/obniz/libs/embeds/ble/ble.ts"],"names":[],"mappings":"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","file":"ble.js","sourcesContent":["import BleAdvertisement from \"./bleAdvertisement\";\r\nimport BleCharacteristic from \"./bleCharacteristic\";\r\nimport BleDescriptor from \"./bleDescriptor\";\r\nimport BlePeripheral from \"./blePeripheral\";\r\nimport BleRemotePeripheral from \"./bleRemotePeripheral\";\r\nimport BleScan from \"./bleScan\";\r\nimport BleSecurity from \"./bleSecurity\";\r\nimport BleService from \"./bleService\";\r\n\r\nclass ObnizBLE {\r\n\r\n  public static _dataArray2uuidHex(data: any, reverse: any) {\r\n    let uuid: any = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      uuid.push((\"00\" + data[i].toString(16).toLowerCase()).slice(-2));\r\n    }\r\n    if (reverse) {\r\n      uuid = uuid.reverse();\r\n    }\r\n    let str: any = uuid.join(\"\");\r\n    if (uuid.length >= 16) {\r\n      str =\r\n        str.slice(0, 8) +\r\n        \"-\" +\r\n        str.slice(8, 12) +\r\n        \"-\" +\r\n        str.slice(12, 16) +\r\n        \"-\" +\r\n        str.slice(16, 20) +\r\n        \"-\" +\r\n        str.slice(20);\r\n    }\r\n    return str;\r\n  }\r\n\r\n  public Obniz: any;\r\n  public remotePeripherals: any;\r\n  public service: any;\r\n  public characteristic: any;\r\n  public descriptor: any;\r\n  public peripheral: any;\r\n  public scanTarget: any;\r\n  public advertisement: any;\r\n  public scan: any;\r\n  public security: any;\r\n\r\n  constructor(Obniz: any) {\r\n    this.Obniz = Obniz;\r\n    this.remotePeripherals = [];\r\n\r\n    this.service = BleService;\r\n    this.characteristic = BleCharacteristic;\r\n    this.descriptor = BleDescriptor;\r\n    this.peripheral = new BlePeripheral(Obniz);\r\n\r\n    this.scanTarget = null;\r\n\r\n    this.advertisement = new BleAdvertisement(Obniz);\r\n    this.scan = new BleScan(Obniz);\r\n    this.security = new BleSecurity(Obniz);\r\n    this._reset();\r\n  }\r\n\r\n  // dummy\r\n  public async initWait() {\r\n  }\r\n\r\n  public _reset() {\r\n  }\r\n\r\n  public directConnect(uuid: any, addressType: any) {\r\n    throw new Error(\r\n      \"directConnect cannot use obnizOS < 3.0.0. Please update obnizOS\",\r\n    );\r\n  }\r\n\r\n  public async directConnectWait(uuid: any, addressType: any) {\r\n    throw new Error(\r\n      \"directConnectWait cannot use obnizOS < 3.0.0. Please update obnizOS\",\r\n    );\r\n  }\r\n\r\n  public findPeripheral(address: any) {\r\n    for (const key in this.remotePeripherals) {\r\n      if (this.remotePeripherals[key].address === address) {\r\n        return this.remotePeripherals[key];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public notified(obj: any) {\r\n    if (obj.scan_result) {\r\n      let val: any = this.findPeripheral(obj.scan_result.address);\r\n      if (!val) {\r\n        val = new BleRemotePeripheral(this.Obniz, obj.scan_result.address);\r\n        this.remotePeripherals.push(val);\r\n      }\r\n      val.discoverdOnRemote = true;\r\n      val.setParams(obj.scan_result);\r\n\r\n      this.scan.notifyFromServer(\"onfind\", val);\r\n    }\r\n\r\n    if (obj.scan_result_finish) {\r\n      this.scan.notifyFromServer(\"onfinish\");\r\n    }\r\n\r\n    const remotePeripheralCallbackFunc: any = (val: any, func: any, type: any) => {\r\n      let target: any = null;\r\n      if (val === undefined) {\r\n        return;\r\n      }\r\n      const p: any = this.findPeripheral(val.address);\r\n      if (!p) {\r\n        return;\r\n      }\r\n      if (type === \"peripheral\") {\r\n        target = p;\r\n      } else if (type === \"service\") {\r\n        target = p.findService(val);\r\n      } else if (type === \"characteristic\") {\r\n        target = p.findCharacteristic(val);\r\n      } else if (type === \"descriptor\") {\r\n        target = p.findDescriptor(val);\r\n      }\r\n      if (!target) {\r\n        return;\r\n      }\r\n      func(val, target);\r\n    };\r\n\r\n    const paramList: any = {\r\n      status_update: {name: \"statusupdate\", obj: \"peripheral\"},\r\n      get_service_result: {name: \"discover\", obj: \"peripheral\"},\r\n      get_service_result_finish: {\r\n        name: \"discoverfinished\",\r\n        obj: \"peripheral\",\r\n      },\r\n      get_characteristic_result: {name: \"discover\", obj: \"service\"},\r\n      get_characteristic_result_finish: {\r\n        name: \"discoverfinished\",\r\n        obj: \"service\",\r\n      },\r\n      write_characteristic_result: {name: \"onwrite\", obj: \"characteristic\"},\r\n      read_characteristic_result: {name: \"onread\", obj: \"characteristic\"},\r\n      register_notify_characteristic_result: {\r\n        name: \"onregisternotify\",\r\n        obj: \"characteristic\",\r\n      },\r\n      // for typo\r\n      register_nofity_characteristic_result: {\r\n        name: \"onregisternotify\",\r\n        obj: \"characteristic\",\r\n      },\r\n      unregister_notify_characteristic_result: {\r\n        name: \"onunregisternotify\",\r\n        obj: \"characteristic\",\r\n      },\r\n      // for typo\r\n      unregister_nofity_characteristic_result: {\r\n        name: \"onunregisternotify\",\r\n        obj: \"characteristic\",\r\n      },\r\n      notify_characteristic: {name: \"onnotify\", obj: \"characteristic\"},\r\n      // for typo\r\n      nofity_characteristic: {name: \"onnotify\", obj: \"characteristic\"},\r\n      get_descriptor_result: {name: \"discover\", obj: \"characteristic\"},\r\n      get_descriptor_result_finish: {\r\n        name: \"discoverfinished\",\r\n        obj: \"characteristic\",\r\n      },\r\n      write_descriptor_result: {name: \"onwrite\", obj: \"descriptor\"},\r\n      read_descriptor_result: {name: \"onread\", obj: \"descriptor\"},\r\n    };\r\n\r\n    for (const paramListKey in paramList) {\r\n      remotePeripheralCallbackFunc(\r\n        obj[paramListKey],\r\n        (val: any, bleobj: any) => {\r\n          bleobj.notifyFromServer(paramList[paramListKey].name, val);\r\n        },\r\n        paramList[paramListKey].obj,\r\n      );\r\n    }\r\n\r\n    const callbackFunc: any = (val: any, func: any, type: any) => {\r\n      let target: any = null;\r\n      if (val === undefined) {\r\n        return;\r\n      }\r\n      if (type === \"peripheral\") {\r\n        target = this.peripheral;\r\n      } else if (type === \"service\") {\r\n        target = this.peripheral.getService(val);\r\n      } else if (type === \"characteristic\") {\r\n        target = this.peripheral.findCharacteristic(val);\r\n      } else if (type === \"descriptor\") {\r\n        target = this.peripheral.findDescriptor(val);\r\n      }\r\n      if (!target) {\r\n        return;\r\n      }\r\n      func(val, target);\r\n    };\r\n\r\n    if (obj.peripheral) {\r\n      callbackFunc(\r\n        obj.peripheral.connection_status,\r\n        (val: any) => {\r\n          this.peripheral.onconnectionupdates(val);\r\n        },\r\n        \"peripheral\",\r\n      );\r\n\r\n      const centralParamList: any = {\r\n        read_characteristic_result: {name: \"onread\", obj: \"characteristic\"},\r\n        write_characteristic_result: {name: \"onwrite\", obj: \"characteristic\"},\r\n        notify_read_characteristic: {\r\n          name: \"onreadfromremote\",\r\n          obj: \"characteristic\",\r\n        },\r\n        notify_write_characteristic: {\r\n          name: \"onwritefromremote\",\r\n          obj: \"characteristic\",\r\n        },\r\n        read_descriptor_result: {name: \"onread\", obj: \"descriptor\"},\r\n        write_descriptor_result: {name: \"onwrite\", obj: \"descriptor\"},\r\n        notify_read_descriptor: {name: \"onreadfromremote\", obj: \"descriptor\"},\r\n        notify_write_descriptor: {\r\n          name: \"onwritefromremote\",\r\n          obj: \"descriptor\",\r\n        },\r\n      };\r\n\r\n      for (const key in centralParamList) {\r\n        callbackFunc(\r\n          obj.peripheral[key],\r\n          (val: any, bleobj: any) => {\r\n            bleobj.notifyFromServer(centralParamList[key].name, val);\r\n          },\r\n          centralParamList[key].obj,\r\n        );\r\n      }\r\n    }\r\n\r\n    if (obj.error) {\r\n      const params: any = obj.error;\r\n      let handled: any = false;\r\n      let peripheral: any;\r\n      let target: any;\r\n      if (!params.address) {\r\n        peripheral = this.peripheral;\r\n      } else {\r\n        peripheral = this.findPeripheral(params.address);\r\n      }\r\n\r\n      if (peripheral) {\r\n        if (\r\n          params.service_uuid &&\r\n          params.characteristic_uuid &&\r\n          params.descriptor_uuid\r\n        ) {\r\n          target = peripheral.findDescriptor(params);\r\n        } else if (params.service_uuid && params.characteristic_uuid) {\r\n          target = peripheral.findCharacteristic(params);\r\n        } else if (params.service_uuid) {\r\n          target = peripheral.findService(params);\r\n        }\r\n        if (target) {\r\n          target.notifyFromServer(\"onerror\", params);\r\n          handled = true;\r\n        } else {\r\n          peripheral.onerror(params);\r\n          handled = true;\r\n        }\r\n      }\r\n\r\n      if ([35, 36, 37, 38, 39].includes(params.function_code)) {\r\n        this.security.onerror(params);\r\n        handled = true;\r\n      }\r\n      if (!handled) {\r\n        this.Obniz.error(\r\n          `ble ${params.message} service=${\r\n            params.service_uuid\r\n          } characteristic_uuid=${params.characteristic_uuid} descriptor_uuid=${\r\n            params.descriptor_uuid\r\n          }`,\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ObnizBLE;\r\n"]}