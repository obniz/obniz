{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleRemoteDescriptor.ts"],"names":[],"mappings":"AACA,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AAEtE,cAAM,mBAAoB,SAAQ,0BAA0B;IACnD,cAAc,EAAE,GAAG,CAAC;IACpB,IAAI,EAAE,GAAG,CAAC;gBAEL,MAAM,EAAE,GAAG;IAIvB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAEM,IAAI;IAcJ,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG;CAkB3C;AAED,eAAe,mBAAmB,CAAC","file":"bleRemoteDescriptor.d.ts","sourcesContent":["import BleHelper from \"./bleHelper\";\r\nimport BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\r\n\r\nclass BleRemoteDescriptor extends BleRemoteAttributeAbstract {\r\n  public characteristic: any;\r\n  public uuid: any;\r\n\r\n  constructor(params: any) {\r\n    super(params);\r\n  }\r\n\r\n  get parentName(): string | null {\r\n    return \"characteristic\";\r\n  }\r\n\r\n  public read() {\r\n    const obj: any = {\r\n      ble: {\r\n        read_descriptor: {\r\n          address: this.characteristic.service.peripheral.address,\r\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\r\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\r\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\r\n        },\r\n      },\r\n    };\r\n    this.characteristic.service.peripheral.Obniz.send(obj);\r\n  }\r\n\r\n  public write(array: any, needResponse: any) {\r\n    if (needResponse === undefined) {\r\n      needResponse = true;\r\n    }\r\n    const obj: any = {\r\n      ble: {\r\n        write_descriptor: {\r\n          address: this.characteristic.service.peripheral.address,\r\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\r\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\r\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\r\n          data: array,\r\n          needResponse,\r\n        },\r\n      },\r\n    };\r\n    this.characteristic.service.peripheral.Obniz.send(obj);\r\n  }\r\n}\r\n\r\nexport default BleRemoteDescriptor;\r\n"]}