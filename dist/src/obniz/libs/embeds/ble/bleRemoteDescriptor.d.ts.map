{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleRemoteDescriptor.ts"],"names":[],"mappings":"AACA,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AAEtE,cAAM,mBAAoB,SAAQ,0BAA0B;IACnD,cAAc,EAAE,GAAG,CAAC;IACpB,IAAI,EAAE,GAAG,CAAC;gBAEL,MAAM,EAAE,GAAG;IAIvB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAEM,IAAI;IAcJ,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG;CAkB3C;AAED,eAAe,mBAAmB,CAAC","file":"bleRemoteDescriptor.d.ts","sourcesContent":["import BleHelper from \"./bleHelper\";\nimport BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\n\nclass BleRemoteDescriptor extends BleRemoteAttributeAbstract {\n  public characteristic: any;\n  public uuid: any;\n\n  constructor(params: any) {\n    super(params);\n  }\n\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  public read() {\n    const obj: any = {\n      ble: {\n        read_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n\n  public write(array: any, needResponse: any) {\n    if (needResponse === undefined) {\n      needResponse = true;\n    }\n    const obj: any = {\n      ble: {\n        write_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n          data: array,\n          needResponse,\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n}\n\nexport default BleRemoteDescriptor;\n"]}