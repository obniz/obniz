{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleScan.ts"],"names":[],"mappings":"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","file":"bleScan.js","sourcesContent":["import emitter = require(\"eventemitter3\");\r\nimport BleHelper from \"./bleHelper\";\r\n\r\nclass BleScan {\r\n  public scanTarget: any;\r\n  public Obniz: any;\r\n  public emitter: any;\r\n  public scanedPeripherals: any;\r\n\r\n  constructor(Obniz: any) {\r\n    this.scanTarget = null;\r\n    this.Obniz = Obniz;\r\n    this.emitter = new emitter();\r\n\r\n    this.scanedPeripherals = [];\r\n  }\r\n\r\n  public start(target: any, settings: any) {\r\n    const obj: any = {};\r\n    obj.ble = {};\r\n    obj.ble.scan = {\r\n      //    \"targetUuid\" : settings && settings.targetUuid ? settings.targetUuid : null,\r\n      //    \"interval\" : settings && settings.interval ? settings.interval : 30,\r\n      duration: settings && settings.duration ? settings.duration : 30,\r\n    };\r\n    if (settings && settings.duplicate) {\r\n      throw new Error(\r\n        `duplicate property can only be used with obnizOS3 or later`,\r\n      );\r\n    }\r\n\r\n    this.scanTarget = target;\r\n    if (\r\n      this.scanTarget &&\r\n      this.scanTarget.uuids &&\r\n      Array.isArray(this.scanTarget.uuids)\r\n    ) {\r\n      this.scanTarget.uuids = this.scanTarget.uuids.map ((elm: any ) => {\r\n        return BleHelper.uuidFilter(elm);\r\n      });\r\n    }\r\n    this.scanedPeripherals = [];\r\n    this.Obniz.send(obj);\r\n  }\r\n\r\n  public startOneWait(target: any, settings: any) {\r\n    let state: any = 0;\r\n\r\n    return new Promise ((resolve: any ) => {\r\n      this.emitter.once(\"onfind\", (param: any ) => {\r\n        if (state === 0) {\r\n          state = 1;\r\n          this.end();\r\n          resolve(param);\r\n        }\r\n      });\r\n\r\n      this.emitter.once(\"onfinish\", () => {\r\n        if (state === 0) {\r\n          state = 1;\r\n          resolve(null);\r\n        }\r\n      });\r\n\r\n      this.start(target, settings);\r\n    });\r\n  }\r\n\r\n  public startAllWait(target: any, settings: any) {\r\n    return new Promise ((resolve: any ) => {\r\n      this.emitter.once(\"onfinish\", () => {\r\n        resolve(this.scanedPeripherals);\r\n      });\r\n\r\n      this.start(target, settings);\r\n    });\r\n  }\r\n\r\n  public end() {\r\n    const obj: any = {};\r\n    obj.ble = {};\r\n    obj.ble.scan = null;\r\n    this.Obniz.send(obj);\r\n  }\r\n\r\n  public isTarget(peripheral: any) {\r\n    if (\r\n      this.scanTarget &&\r\n      this.scanTarget.localName &&\r\n      peripheral.localName !== this.scanTarget.localName\r\n    ) {\r\n      return false;\r\n    }\r\n    if (this.scanTarget && this.scanTarget.uuids) {\r\n      const uuids: any = peripheral.advertisementServiceUuids().map ((e: any ) => {\r\n        return BleHelper.uuidFilter(e);\r\n      });\r\n      for (const uuid of this.scanTarget.uuids) {\r\n        if (!uuids.includes(uuid)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public onfinish(scanedPeripherals: any) {\r\n  } // dummy\r\n  public onfind(params: any) {\r\n  } // dummy\r\n\r\n  public notifyFromServer(notifyName: any, params: any) {\r\n    switch (notifyName) {\r\n      case \"onfind\": {\r\n        if (this.isTarget(params)) {\r\n          this.scanedPeripherals.push(params);\r\n          this.emitter.emit(notifyName, params);\r\n          this.onfind(params);\r\n        }\r\n        break;\r\n      }\r\n      case \"onfinish\": {\r\n        this.emitter.emit(notifyName, this.scanedPeripherals);\r\n        this.onfinish(this.scanedPeripherals);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BleScan;\r\n"]}