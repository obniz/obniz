{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleRemoteDescriptor.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AACpC,8FAAsE;AAEtE,MAAM,mBAAoB,SAAQ,oCAA0B;IAI1D,YAAY,MAAW;QACrB,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEM,IAAI;QACT,MAAM,GAAG,GAAQ;YACf,GAAG,EAAE;gBACH,eAAe,EAAE;oBACf,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO;oBACvD,YAAY,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC;oBACpE,mBAAmB,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACnE,eAAe,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACjD;aACF;SACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK,CAAC,KAAU,EAAE,YAAiB;QACxC,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,YAAY,GAAG,IAAI,CAAC;SACrB;QACD,MAAM,GAAG,GAAQ;YACf,GAAG,EAAE;gBACH,gBAAgB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO;oBACvD,YAAY,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC;oBACpE,mBAAmB,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACnE,eAAe,EAAE,mBAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBAChD,IAAI,EAAE,KAAK;oBACX,YAAY;iBACb;aACF;SACF,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;CACF;AAED,kBAAe,mBAAmB,CAAC","file":"bleRemoteDescriptor.js","sourcesContent":["import BleHelper from \"./bleHelper\";\nimport BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\n\nclass BleRemoteDescriptor extends BleRemoteAttributeAbstract {\n  public characteristic: any;\n  public uuid: any;\n\n  constructor(params: any) {\n    super(params);\n  }\n\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  public read() {\n    const obj: any = {\n      ble: {\n        read_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n\n  public write(array: any, needResponse: any) {\n    if (needResponse === undefined) {\n      needResponse = true;\n    }\n    const obj: any = {\n      ble: {\n        write_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n          data: array,\n          needResponse,\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n}\n\nexport default BleRemoteDescriptor;\n"]}