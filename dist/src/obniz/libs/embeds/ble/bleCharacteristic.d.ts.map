{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleCharacteristic.ts"],"names":[],"mappings":"AAAA,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAI1D,cAAM,iBAAkB,SAAQ,oBAAoB;IAC3C,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,UAAU,EAAE,GAAG,CAAC;IAChB,WAAW,EAAE,GAAG,CAAC;IACjB,QAAQ,EAAE,GAAG,CAAC;IACd,OAAO,EAAE,GAAG,CAAC;IACb,IAAI,EAAE,GAAG,CAAC;gBAEL,GAAG,EAAE,GAAG;IAiBpB,IAAI,UAAU,IAAI,MAAM,CAEvB;IAED,IAAI,aAAa,IAAI,GAAG,CAEvB;IAED,IAAI,YAAY,IAAI,MAAM,CAEzB;IAED,IAAI,WAAW,QAEd;IAEM,MAAM;IAaN,WAAW,CAAC,KAAK,EAAE,GAAG;IAMtB,cAAc,CAAC,KAAK,EAAE,GAAG;IAMzB,aAAa,CAAC,KAAK,EAAE,GAAG;IAMxB,gBAAgB,CAAC,KAAK,EAAE,GAAG;IAM3B,KAAK,CAAC,IAAI,EAAE,GAAG;IAcf,IAAI;IAaJ,MAAM;CAYd;AAED,eAAe,iBAAiB,CAAC","file":"bleCharacteristic.d.ts","sourcesContent":["import BleAttributeAbstract from \"./bleAttributeAbstract\";\r\nimport BleDescriptor from \"./bleDescriptor\";\r\nimport BleHelper from \"./bleHelper\";\r\n\r\nclass BleCharacteristic extends BleAttributeAbstract {\r\n  public addDescriptor: any;\r\n  public addChild: any;\r\n  public getDescriptor: any;\r\n  public getChild: any;\r\n  public properties: any;\r\n  public permissions: any;\r\n  public children: any;\r\n  public service: any;\r\n  public uuid: any;\r\n\r\n  constructor(obj: any) {\r\n    super(obj);\r\n\r\n    this.addDescriptor = this.addChild;\r\n    this.getDescriptor = this.getChild;\r\n\r\n    this.properties = obj.properties || [];\r\n    if (!Array.isArray(this.properties)) {\r\n      this.properties = [this.properties];\r\n    }\r\n\r\n    this.permissions = obj.permissions || [];\r\n    if (!Array.isArray(this.permissions)) {\r\n      this.permissions = [this.permissions];\r\n    }\r\n  }\r\n\r\n  get parentName(): string {\r\n    return \"service\";\r\n  }\r\n\r\n  get childrenClass(): any {\r\n    return BleDescriptor;\r\n  }\r\n\r\n  get childrenName(): string {\r\n    return \"descriptors\";\r\n  }\r\n\r\n  get descriptors() {\r\n    return this.children;\r\n  }\r\n\r\n  public toJSON() {\r\n    const obj: any = super.toJSON();\r\n\r\n    if (this.properties.length > 0) {\r\n      obj.properties = this.properties;\r\n    }\r\n\r\n    if (this.permissions.length > 0) {\r\n      obj.permissions = this.permissions;\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  public addProperty(param: any) {\r\n    if (!this.properties.includes(param)) {\r\n      this.properties.push(param);\r\n    }\r\n  }\r\n\r\n  public removeProperty(param: any) {\r\n    this.properties = this.properties.filter((elm: any) => {\r\n      return elm !== param;\r\n    });\r\n  }\r\n\r\n  public addPermission(param: any) {\r\n    if (!this.permissions.includes(param)) {\r\n      this.permissions.push(param);\r\n    }\r\n  }\r\n\r\n  public removePermission(param: any) {\r\n    this.permissions = this.permissions.filter ((elm: any ) => {\r\n      return elm !== param;\r\n    });\r\n  }\r\n\r\n  public write(data: any) {\r\n    this.service.peripheral.Obniz.send({\r\n      ble: {\r\n        peripheral: {\r\n          write_characteristic: {\r\n            service_uuid: BleHelper.uuidFilter(this.service.uuid),\r\n            characteristic_uuid: BleHelper.uuidFilter(this.uuid),\r\n            data,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  public read() {\r\n    this.service.peripheral.Obniz.send({\r\n      ble: {\r\n        peripheral: {\r\n          read_characteristic: {\r\n            service_uuid: BleHelper.uuidFilter(this.service.uuid),\r\n            characteristic_uuid: BleHelper.uuidFilter(this.uuid),\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  public notify() {\r\n    this.service.peripheral.Obniz.send({\r\n      ble: {\r\n        peripheral: {\r\n          notify_characteristic: {\r\n            service_uuid: BleHelper.uuidFilter(this.service.uuid),\r\n            characteristic_uuid: BleHelper.uuidFilter(this.uuid),\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default BleCharacteristic;\r\n"]}