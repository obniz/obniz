{"version":3,"sources":["../src/obniz/libs/embeds/switch.ts"],"names":[],"mappings":"AACA,aAAK,mBAAmB,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK,IAAI,CAAC;AAErD,cAAM,WAAW;IACR,KAAK,EAAE,GAAG,CAAC;IACX,SAAS,EAAG,mBAAmB,EAAE,CAAC;IAClC,oBAAoB,EAAE,GAAG,CAAC;IAC1B,KAAK,EAAE,GAAG,CAAC;IACX,QAAQ,EAAE,GAAG,CAAC;gBAET,KAAK,EAAE,GAAG;IAKf,MAAM;IAMN,WAAW,CAAC,QAAQ,EAAE,mBAAmB;IAMzC,OAAO;IAUP,SAAS,CAAC,SAAS,EAAE,OAAO;IAa5B,QAAQ,CAAC,GAAG,EAAE,GAAG;CAYzB;AAED,eAAe,WAAW,CAAC","file":"switch.d.ts","sourcesContent":["\r\ntype ObnizSwitchCallback = (result: boolean) => void;\r\n\r\nclass ObnizSwitch {\r\n  public Obniz: any;\r\n  public observers!: ObnizSwitchCallback[];\r\n  public onChangeForStateWait: any;\r\n  public state: any;\r\n  public onchange: any;\r\n\r\n  constructor(Obniz: any) {\r\n    this.Obniz = Obniz;\r\n    this._reset();\r\n  }\r\n\r\n  public _reset() {\r\n    this.observers = [];\r\n    this.onChangeForStateWait = () => {\r\n    };\r\n  }\r\n\r\n  public addObserver(callback: ObnizSwitchCallback) {\r\n    if (callback) {\r\n      this.observers.push(callback);\r\n    }\r\n  }\r\n\r\n  public getWait() {\r\n    const self: any = this;\r\n    return new Promise((resolve: any, reject: any) => {\r\n      const obj: any = {};\r\n      obj.switch = \"get\";\r\n      self.Obniz.send(obj);\r\n      self.addObserver(resolve);\r\n    });\r\n  }\r\n\r\n  public stateWait(isPressed: boolean) {\r\n    const self: any = this;\r\n    return new Promise((resolve: any, reject: any) => {\r\n      self.onChangeForStateWait = (pressed: any) => {\r\n        if (isPressed === pressed) {\r\n          self.onChangeForStateWait = () => {\r\n          };\r\n          resolve();\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  public notified(obj: any) {\r\n    this.state = obj.state;\r\n    if (this.onchange) {\r\n      this.onchange(this.state);\r\n    }\r\n    this.onChangeForStateWait(this.state);\r\n\r\n    const callback: any = this.observers.shift();\r\n    if (callback) {\r\n      callback(this.state);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ObnizSwitch;\r\n"]}