{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleRemoteCharacteristic.ts"],"names":[],"mappings":"AAAA,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AAGtE,cAAM,uBAAwB,SAAQ,0BAA0B;IACvD,UAAU,EAAE,GAAG,CAAC;IAChB,QAAQ,EAAE,GAAG,CAAC;IACd,QAAQ,EAAE,GAAG,CAAC;IACd,QAAQ,EAAE,GAAG,CAAC;IACd,KAAK,EAAE,GAAG,CAAC;IACX,OAAO,EAAE,GAAG,CAAC;IACb,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,oBAAoB,EAAE,GAAG,CAAC;gBAErB,MAAM,EAAE,GAAG;IASvB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAED,IAAI,aAAa,IAAI,GAAG,CAEvB;IAED,IAAI,YAAY,IAAI,MAAM,GAAG,IAAI,CAEhC;IAED,IAAI,WAAW,QAEd;IAEM,aAAa,CAAC,MAAM,EAAE,GAAG;IAIzB,aAAa,CAAC,IAAI,EAAE,GAAG;IAIvB,cAAc,CAAC,QAAQ,EAAE,GAAG;IAU5B,kBAAkB,CAAC,QAAQ,EAAE,GAAG;IAShC,gBAAgB;IAYhB,oBAAoB;IASpB,IAAI;IAQJ,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG;IAanC,gBAAgB;IAQhB,sBAAsB;IAItB,0BAA0B;IAI1B,MAAM;IASN,YAAY;IAIZ,SAAS;IAIT,OAAO;IAIP,QAAQ;IAIR,uBAAuB;IAIvB,WAAW;IAIX,UAAU,CAAC,UAAU,EAAE,GAAG;IAI1B,kBAAkB,CAAC,WAAW,EAAE,GAAG;IAInC,oBAAoB,CAAC,UAAU,EAAE,GAAG;IAGpC,4BAA4B,CAAC,WAAW,EAAE,GAAG;IAG7C,gBAAgB;IAGhB,kBAAkB;IAGlB,QAAQ,CAAC,IAAI,EAAE,GAAG;IAGlB,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;CAiBrD;AAED,eAAe,uBAAuB,CAAC","file":"bleRemoteCharacteristic.d.ts","sourcesContent":["import BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\r\nimport BleRemoteDescriptor from \"./bleRemoteDescriptor\";\r\n\r\nclass BleRemoteCharacteristic extends BleRemoteAttributeAbstract {\r\n  public properties: any;\r\n  public children: any;\r\n  public addChild: any;\r\n  public getChild: any;\r\n  public Obniz: any;\r\n  public service: any;\r\n  public uuid: any;\r\n  public emitter: any;\r\n  public discoverChildrenWait: any;\r\n\r\n  constructor(params: any) {\r\n    super(params);\r\n\r\n    this.properties = params.properties || [];\r\n    if (!Array.isArray(this.properties)) {\r\n      this.properties = [this.properties];\r\n    }\r\n  }\r\n\r\n  get parentName(): string | null {\r\n    return \"service\";\r\n  }\r\n\r\n  get childrenClass(): any {\r\n    return BleRemoteDescriptor;\r\n  }\r\n\r\n  get childrenName(): string | null {\r\n    return \"descriptors\";\r\n  }\r\n\r\n  get descriptors() {\r\n    return this.children;\r\n  }\r\n\r\n  public addDescriptor(params: any) {\r\n    return this.addChild(params);\r\n  }\r\n\r\n  public getDescriptor(uuid: any) {\r\n    return this.getChild(uuid);\r\n  }\r\n\r\n  public registerNotify(callback: any) {\r\n    this.onnotify = callback;\r\n    this.service.peripheral.obnizBle.centralBindings.notify(\r\n      this.service.peripheral.address,\r\n      this.service.uuid,\r\n      this.uuid,\r\n      true,\r\n    );\r\n  }\r\n\r\n  public registerNotifyWait(callback: any) {\r\n    return new Promise ((resolve: any ) => {\r\n      this.emitter.once(\"onregisternotify\", () => {\r\n        resolve();\r\n      });\r\n      this.registerNotify(callback);\r\n    });\r\n  }\r\n\r\n  public unregisterNotify() {\r\n    this.onnotify = () => {\r\n    };\r\n\r\n    this.service.peripheral.obnizBle.centralBindings.notify(\r\n      this.service.peripheral.address,\r\n      this.service.uuid,\r\n      this.uuid,\r\n      false,\r\n    );\r\n  }\r\n\r\n  public unregisterNotifyWait() {\r\n    return new Promise ((resolve: any ) => {\r\n      this.emitter.once(\"onunregisternotify\", () => {\r\n        resolve();\r\n      });\r\n      this.unregisterNotify();\r\n    });\r\n  }\r\n\r\n  public read() {\r\n    this.service.peripheral.obnizBle.centralBindings.read(\r\n      this.service.peripheral.address,\r\n      this.service.uuid,\r\n      this.uuid,\r\n    );\r\n  }\r\n\r\n  public write(array: any, needResponse: any) {\r\n    if (needResponse === undefined) {\r\n      needResponse = true;\r\n    }\r\n    this.service.peripheral.obnizBle.centralBindings.write(\r\n      this.service.peripheral.address,\r\n      this.service.uuid,\r\n      this.uuid,\r\n      Buffer.from(array),\r\n      !needResponse,\r\n    );\r\n  }\r\n\r\n  public discoverChildren() {\r\n    this.service.peripheral.obnizBle.centralBindings.discoverDescriptors(\r\n      this.service.peripheral.address,\r\n      this.service.uuid,\r\n      this.uuid,\r\n    );\r\n  }\r\n\r\n  public discoverAllDescriptors() {\r\n    return this.discoverChildren();\r\n  }\r\n\r\n  public discoverAllDescriptorsWait() {\r\n    return this.discoverChildrenWait();\r\n  }\r\n\r\n  public toJSON() {\r\n    const obj: any = super.toJSON();\r\n\r\n    if (this.properties.length > 0) {\r\n      obj.properties = this.properties;\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  public canBroadcast() {\r\n    return this.properties.includes(\"broadcast\");\r\n  }\r\n\r\n  public canNotify() {\r\n    return this.properties.includes(\"notify\");\r\n  }\r\n\r\n  public canRead() {\r\n    return this.properties.includes(\"read\");\r\n  }\r\n\r\n  public canWrite() {\r\n    return this.properties.includes(\"write\");\r\n  }\r\n\r\n  public canWriteWithoutResponse() {\r\n    return this.properties.includes(\"write_without_response\");\r\n  }\r\n\r\n  public canIndicate() {\r\n    return this.properties.includes(\"indicate\");\r\n  }\r\n\r\n  public ondiscover(descriptor: any) {\r\n    this.ondiscoverdescriptor(descriptor);\r\n  }\r\n\r\n  public ondiscoverfinished(descriptors: any) {\r\n    this.ondiscoverdescriptorfinished(descriptors);\r\n  }\r\n\r\n  public ondiscoverdescriptor(descriptor: any) {\r\n  }\r\n\r\n  public ondiscoverdescriptorfinished(descriptors: any) {\r\n  }\r\n\r\n  public onregisternotify() {\r\n  }\r\n\r\n  public onunregisternotify() {\r\n  }\r\n\r\n  public onnotify(data: any) {\r\n  }\r\n\r\n  public notifyFromServer(notifyName: any, params: any) {\r\n    super.notifyFromServer(notifyName, params);\r\n    switch (notifyName) {\r\n      case \"onregisternotify\": {\r\n        this.onregisternotify();\r\n        break;\r\n      }\r\n      case \"onunregisternotify\": {\r\n        this.onunregisternotify();\r\n        break;\r\n      }\r\n      case \"onnotify\": {\r\n        this.onnotify(params.data || undefined);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BleRemoteCharacteristic;\r\n"]}