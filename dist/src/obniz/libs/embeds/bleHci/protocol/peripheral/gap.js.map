{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/peripheral/gap.ts"],"names":[],"mappings":"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","file":"gap.js","sourcesContent":["// var debug = require('debug')('gap');\r\nconst debug: any = () => {\r\n};\r\n\r\nimport events from \"events\";\r\nimport Hci from \"../hci\";\r\n\r\nconst isLinux: boolean = false;\r\nconst isIntelEdison: boolean = false;\r\nconst isYocto: boolean = false;\r\n\r\nclass Gap extends events.EventEmitter {\r\n  public _hci: any;\r\n  public _advertiseState: any;\r\n\r\n  constructor(hci: any) {\r\n    super();\r\n    this._hci = hci;\r\n\r\n    this._advertiseState = null;\r\n\r\n    this._hci.on(\"error\", this.onHciError.bind(this));\r\n\r\n    this._hci.on(\r\n      \"leAdvertisingParametersSet\",\r\n      this.onHciLeAdvertisingParametersSet.bind(this),\r\n    );\r\n    this._hci.on(\r\n      \"leAdvertisingDataSet\",\r\n      this.onHciLeAdvertisingDataSet.bind(this),\r\n    );\r\n    this._hci.on(\r\n      \"leScanResponseDataSet\",\r\n      this.onHciLeScanResponseDataSet.bind(this),\r\n    );\r\n    this._hci.on(\r\n      \"leAdvertiseEnableSet\",\r\n      this.onHciLeAdvertiseEnableSet.bind(this),\r\n    );\r\n  }\r\n\r\n  public startAdvertising(name: any, serviceUuids: any) {\r\n    debug(\r\n      \"startAdvertising: name = \" +\r\n      name +\r\n      \", serviceUuids = \" +\r\n      JSON.stringify(serviceUuids, null, 2),\r\n    );\r\n\r\n    let advertisementDataLength: any = 3;\r\n    let scanDataLength: any = 0;\r\n\r\n    const serviceUuids16bit: any = [];\r\n    const serviceUuids128bit: any = [];\r\n    let i: any = 0;\r\n\r\n    if (name && name.length) {\r\n      scanDataLength += 2 + name.length;\r\n    }\r\n\r\n    if (serviceUuids && serviceUuids.length) {\r\n      for (i = 0; i < serviceUuids.length; i++) {\r\n        const serviceUuid: any = Buffer.from(\r\n          serviceUuids[i]\r\n            .match(/.{1,2}/g)\r\n            .reverse()\r\n            .join(\"\"),\r\n          \"hex\",\r\n        );\r\n\r\n        if (serviceUuid.length === 2) {\r\n          serviceUuids16bit.push(serviceUuid);\r\n        } else if (serviceUuid.length === 16) {\r\n          serviceUuids128bit.push(serviceUuid);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (serviceUuids16bit.length) {\r\n      advertisementDataLength += 2 + 2 * serviceUuids16bit.length;\r\n    }\r\n\r\n    if (serviceUuids128bit.length) {\r\n      advertisementDataLength += 2 + 16 * serviceUuids128bit.length;\r\n    }\r\n\r\n    const advertisementData: any = Buffer.alloc(advertisementDataLength);\r\n    const scanData: any = Buffer.alloc(scanDataLength);\r\n\r\n    // flags\r\n    advertisementData.writeUInt8(2, 0);\r\n    advertisementData.writeUInt8(0x01, 1);\r\n    advertisementData.writeUInt8(0x06, 2);\r\n\r\n    let advertisementDataOffset: any = 3;\r\n\r\n    if (serviceUuids16bit.length) {\r\n      advertisementData.writeUInt8(\r\n        1 + 2 * serviceUuids16bit.length,\r\n        advertisementDataOffset,\r\n      );\r\n      advertisementDataOffset++;\r\n\r\n      advertisementData.writeUInt8(0x03, advertisementDataOffset);\r\n      advertisementDataOffset++;\r\n\r\n      for (i = 0; i < serviceUuids16bit.length; i++) {\r\n        serviceUuids16bit[i].copy(advertisementData, advertisementDataOffset);\r\n        advertisementDataOffset += serviceUuids16bit[i].length;\r\n      }\r\n    }\r\n\r\n    if (serviceUuids128bit.length) {\r\n      advertisementData.writeUInt8(\r\n        1 + 16 * serviceUuids128bit.length,\r\n        advertisementDataOffset,\r\n      );\r\n      advertisementDataOffset++;\r\n\r\n      advertisementData.writeUInt8(0x06, advertisementDataOffset);\r\n      advertisementDataOffset++;\r\n\r\n      for (i = 0; i < serviceUuids128bit.length; i++) {\r\n        serviceUuids128bit[i].copy(advertisementData, advertisementDataOffset);\r\n        advertisementDataOffset += serviceUuids128bit[i].length;\r\n      }\r\n    }\r\n\r\n    // name\r\n    if (name && name.length) {\r\n      const nameBuffer: any = Buffer.alloc(name);\r\n\r\n      scanData.writeUInt8(1 + nameBuffer.length, 0);\r\n      scanData.writeUInt8(0x08, 1);\r\n      nameBuffer.copy(scanData, 2);\r\n    }\r\n\r\n    this.startAdvertisingWithEIRData(advertisementData, scanData);\r\n  }\r\n\r\n  public startAdvertisingIBeacon(data: any) {\r\n    debug(\"startAdvertisingIBeacon: data = \" + data.toString(\"hex\"));\r\n\r\n    const dataLength: any = data.length;\r\n    const manufacturerDataLength: any = 4 + dataLength;\r\n    const advertisementDataLength: any = 5 + manufacturerDataLength;\r\n    // let scanDataLength = 0;\r\n\r\n    const advertisementData: any = Buffer.alloc(advertisementDataLength);\r\n    const scanData: any = Buffer.alloc(0);\r\n\r\n    // flags\r\n    advertisementData.writeUInt8(2, 0);\r\n    advertisementData.writeUInt8(0x01, 1);\r\n    advertisementData.writeUInt8(0x06, 2);\r\n\r\n    advertisementData.writeUInt8(manufacturerDataLength + 1, 3);\r\n    advertisementData.writeUInt8(0xff, 4);\r\n    advertisementData.writeUInt16LE(0x004c, 5); // Apple Company Identifier LE (16 bit)\r\n    advertisementData.writeUInt8(0x02, 7); // type, 2 => iBeacon\r\n    advertisementData.writeUInt8(dataLength, 8);\r\n\r\n    data.copy(advertisementData, 9);\r\n\r\n    this.startAdvertisingWithEIRData(advertisementData, scanData);\r\n  }\r\n\r\n  public startAdvertisingWithEIRData(advertisementData: any, scanData: any) {\r\n    advertisementData = advertisementData || Buffer.alloc(0);\r\n    scanData = scanData || Buffer.alloc(0);\r\n\r\n    debug(\r\n      \"startAdvertisingWithEIRData: advertisement data = \" +\r\n      advertisementData.toString(\"hex\") +\r\n      \", scan data = \" +\r\n      scanData.toString(\"hex\"),\r\n    );\r\n\r\n    let error: any = null;\r\n\r\n    if (advertisementData.length > 31) {\r\n      error = new Error(\"Advertisement data is over maximum limit of 31 bytes\");\r\n    } else if (scanData.length > 31) {\r\n      error = new Error(\"Scan data is over maximum limit of 31 bytes\");\r\n    }\r\n\r\n    if (error) {\r\n      this.emit(\"advertisingStart\", error);\r\n    } else {\r\n      this._advertiseState = \"starting\";\r\n\r\n      if (isIntelEdison || isYocto) {\r\n        // work around for Intel Edison\r\n        debug(\"skipping first set of scan response and advertisement data\");\r\n      } else {\r\n        this._hci.setScanResponseData(scanData);\r\n        this._hci.setAdvertisingData(advertisementData);\r\n      }\r\n      this._hci.setAdvertiseEnable(true);\r\n      this._hci.setScanResponseData(scanData);\r\n      this._hci.setAdvertisingData(advertisementData);\r\n    }\r\n  }\r\n\r\n  public restartAdvertising() {\r\n    this._advertiseState = \"restarting\";\r\n\r\n    this._hci.setAdvertiseEnable(true);\r\n  }\r\n\r\n  public stopAdvertising() {\r\n    this._advertiseState = \"stopping\";\r\n\r\n    this._hci.setAdvertiseEnable(false);\r\n  }\r\n\r\n  public onHciError(error: any) {\r\n  }\r\n\r\n  public onHciLeAdvertisingParametersSet(status: any) {\r\n  }\r\n\r\n  public onHciLeAdvertisingDataSet(status: any) {\r\n  }\r\n\r\n  public onHciLeScanResponseDataSet(status: any) {\r\n  }\r\n\r\n  public onHciLeAdvertiseEnableSet(status: any) {\r\n    if (this._advertiseState === \"starting\") {\r\n      this._advertiseState = \"started\";\r\n\r\n      let error: any = null;\r\n\r\n      if (status) {\r\n        error = new Error(\r\n          Hci.STATUS_MAPPER[status] || \"Unknown (\" + status + \")\",\r\n        );\r\n      }\r\n\r\n      this.emit(\"advertisingStart\", error);\r\n    } else if (this._advertiseState === \"stopping\") {\r\n      this._advertiseState = \"stopped\";\r\n\r\n      this.emit(\"advertisingStop\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gap;\r\n"]}