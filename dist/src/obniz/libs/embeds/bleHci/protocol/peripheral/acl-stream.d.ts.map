{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/peripheral/acl-stream.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAI5B,cAAM,SAAU,SAAQ,MAAM,CAAC,YAAY;IAClC,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,QAAQ,EAAE,GAAG,CAAC;IACd,IAAI,EAAE,GAAG,CAAC;IACV,SAAS,EAAE,GAAG,CAAC;gBAGpB,GAAG,EAAE,GAAG,EACR,MAAM,EAAE,GAAG,EACX,gBAAgB,EAAE,GAAG,EACrB,YAAY,EAAE,GAAG,EACjB,iBAAiB,EAAE,GAAG,EACtB,aAAa,EAAE,GAAG;IAiBb,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IAIzB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IAQxB,WAAW,CAAC,OAAO,EAAE,GAAG;IAMxB,eAAe;CAGvB;AAED,eAAe,SAAS,CAAC","file":"acl-stream.d.ts","sourcesContent":["import events from \"events\";\n\nimport Smp from \"./smp\";\n\nclass AclStream extends events.EventEmitter {\n  public _hci: any;\n  public _handle: any;\n  public encypted: any;\n  public _smp: any;\n  public encrypted: any;\n\n  constructor(\n    hci: any,\n    handle: any,\n    localAddressType: any,\n    localAddress: any,\n    remoteAddressType: any,\n    remoteAddress: any,\n  ) {\n    super();\n    this._hci = hci;\n    this._handle = handle;\n    this.encypted = false;\n\n    this._smp = new Smp(\n      this,\n      localAddressType,\n      localAddress,\n      remoteAddressType,\n      remoteAddress,\n      this._hci,\n    );\n  }\n\n  public write(cid: any, data: any) {\n    this._hci.queueAclDataPkt(this._handle, cid, data);\n  }\n\n  public push(cid: any, data: any) {\n    if (data) {\n      this.emit(\"data\", cid, data);\n    } else {\n      this.emit(\"end\");\n    }\n  }\n\n  public pushEncrypt(encrypt: any) {\n    this.encrypted = encrypt ? true : false;\n\n    this.emit(\"encryptChange\", this.encrypted);\n  }\n\n  public pushLtkNegReply() {\n    this.emit(\"ltkNegReply\");\n  }\n}\n\nexport default AclStream;\n"]}