{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/peripheral/acl-stream.ts"],"names":[],"mappings":";AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAI5B,cAAM,SAAU,SAAQ,MAAM,CAAC,YAAY;IAClC,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,QAAQ,EAAE,GAAG,CAAC;IACd,IAAI,EAAE,GAAG,CAAC;IACV,SAAS,EAAE,GAAG,CAAC;gBAGpB,GAAG,EAAE,GAAG,EACR,MAAM,EAAE,GAAG,EACX,gBAAgB,EAAE,GAAG,EACrB,YAAY,EAAE,GAAG,EACjB,iBAAiB,EAAE,GAAG,EACtB,aAAa,EAAE,GAAG;IAiBb,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IAIzB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IAQxB,WAAW,CAAC,OAAO,EAAE,GAAG;IAMxB,eAAe;CAGvB;AAED,eAAe,SAAS,CAAC","file":"acl-stream.d.ts","sourcesContent":["import events from \"events\";\r\n\r\nimport Smp from \"./smp\";\r\n\r\nclass AclStream extends events.EventEmitter {\r\n  public _hci: any;\r\n  public _handle: any;\r\n  public encypted: any;\r\n  public _smp: any;\r\n  public encrypted: any;\r\n\r\n  constructor(\r\n    hci: any,\r\n    handle: any,\r\n    localAddressType: any,\r\n    localAddress: any,\r\n    remoteAddressType: any,\r\n    remoteAddress: any,\r\n  ) {\r\n    super();\r\n    this._hci = hci;\r\n    this._handle = handle;\r\n    this.encypted = false;\r\n\r\n    this._smp = new Smp(\r\n      this,\r\n      localAddressType,\r\n      localAddress,\r\n      remoteAddressType,\r\n      remoteAddress,\r\n      this._hci,\r\n    );\r\n  }\r\n\r\n  public write(cid: any, data: any) {\r\n    this._hci.queueAclDataPkt(this._handle, cid, data);\r\n  }\r\n\r\n  public push(cid: any, data: any) {\r\n    if (data) {\r\n      this.emit(\"data\", cid, data);\r\n    } else {\r\n      this.emit(\"end\");\r\n    }\r\n  }\r\n\r\n  public pushEncrypt(encrypt: any) {\r\n    this.encrypted = encrypt ? true : false;\r\n\r\n    this.emit(\"encryptChange\", this.encrypted);\r\n  }\r\n\r\n  public pushLtkNegReply() {\r\n    this.emit(\"ltkNegReply\");\r\n  }\r\n}\r\n\r\nexport default AclStream;\r\n"]}