{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/peripheral/acl-stream.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAE5B,gDAAwB;AAExB,MAAM,SAAU,SAAQ,gBAAM,CAAC,YAAY;IAOzC,YACE,GAAQ,EACR,MAAW,EACX,gBAAqB,EACrB,YAAiB,EACjB,iBAAsB,EACtB,aAAkB;QAElB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAG,CACjB,IAAI,EACJ,gBAAgB,EAChB,YAAY,EACZ,iBAAiB,EACjB,aAAa,EACb,IAAI,CAAC,IAAI,CACV,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,GAAQ,EAAE,IAAS;QAC9B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAEM,IAAI,CAAC,GAAQ,EAAE,IAAS;QAC7B,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClB;IACH,CAAC;IAEM,WAAW,CAAC,OAAY;QAC7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAEM,eAAe;QACpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;CACF;AAED,kBAAe,SAAS,CAAC","file":"acl-stream.js","sourcesContent":["import events from \"events\";\r\n\r\nimport Smp from \"./smp\";\r\n\r\nclass AclStream extends events.EventEmitter {\r\n  public _hci: any;\r\n  public _handle: any;\r\n  public encypted: any;\r\n  public _smp: any;\r\n  public encrypted: any;\r\n\r\n  constructor(\r\n    hci: any,\r\n    handle: any,\r\n    localAddressType: any,\r\n    localAddress: any,\r\n    remoteAddressType: any,\r\n    remoteAddress: any,\r\n  ) {\r\n    super();\r\n    this._hci = hci;\r\n    this._handle = handle;\r\n    this.encypted = false;\r\n\r\n    this._smp = new Smp(\r\n      this,\r\n      localAddressType,\r\n      localAddress,\r\n      remoteAddressType,\r\n      remoteAddress,\r\n      this._hci,\r\n    );\r\n  }\r\n\r\n  public write(cid: any, data: any) {\r\n    this._hci.queueAclDataPkt(this._handle, cid, data);\r\n  }\r\n\r\n  public push(cid: any, data: any) {\r\n    if (data) {\r\n      this.emit(\"data\", cid, data);\r\n    } else {\r\n      this.emit(\"end\");\r\n    }\r\n  }\r\n\r\n  public pushEncrypt(encrypt: any) {\r\n    this.encrypted = encrypt ? true : false;\r\n\r\n    this.emit(\"encryptChange\", this.encrypted);\r\n  }\r\n\r\n  public pushLtkNegReply() {\r\n    this.emit(\"ltkNegReply\");\r\n  }\r\n}\r\n\r\nexport default AclStream;\r\n"]}