{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/bindings.ts"],"names":[],"mappings":"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","file":"bindings.js","sourcesContent":["// var debug = require('debug')('bindings');\r\n\r\nconst events: any = require(\"events\");\r\n\r\nimport Hci from \"../hci\";\r\nimport AclStream from \"./acl-stream\";\r\nimport Gap from \"./gap\";\r\nimport Gatt from \"./gatt\";\r\nimport Signaling from \"./signaling\";\r\n\r\nclass NobleBindings extends events.EventEmitter {\r\n  public _state: any;\r\n  public _addresses: any;\r\n  public _addresseTypes: any;\r\n  public _connectable: any;\r\n  public _pendingConnectionUuid: any;\r\n  public _connectionQueue: any;\r\n  public _handles: any;\r\n  public _gatts: any;\r\n  public _aclStreams: any;\r\n  public _signalings: any;\r\n  public _hci: any;\r\n  public _gap: any;\r\n  public _scanServiceUuids: any;\r\n\r\n  constructor(hciProtocol: any) {\r\n    super();\r\n    this._state = null;\r\n\r\n    this._addresses = {};\r\n    this._addresseTypes = {};\r\n    this._connectable = {};\r\n\r\n    this._pendingConnectionUuid = null;\r\n    this._connectionQueue = [];\r\n\r\n    this._handles = {};\r\n    this._gatts = {};\r\n    this._aclStreams = {};\r\n    this._signalings = {};\r\n\r\n    this._hci = hciProtocol;\r\n    this._gap = new Gap(this._hci);\r\n  }\r\n\r\n  public startScanning(serviceUuids: any, allowDuplicates: any) {\r\n    this._scanServiceUuids = serviceUuids || [];\r\n\r\n    this._gap.startScanning(allowDuplicates);\r\n  }\r\n\r\n  public stopScanning() {\r\n    this._gap.stopScanning();\r\n  }\r\n\r\n  public connect(peripheralUuid: any) {\r\n    const address: any = this._addresses[peripheralUuid];\r\n    const addressType: any = this._addresseTypes[peripheralUuid];\r\n\r\n    if (!this._pendingConnectionUuid) {\r\n      this._pendingConnectionUuid = peripheralUuid;\r\n\r\n      this._hci.createLeConn(address, addressType);\r\n    } else {\r\n      this._connectionQueue.push(peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public disconnect(peripheralUuid: any) {\r\n    this._hci.disconnect(this._handles[peripheralUuid]);\r\n  }\r\n\r\n  public updateRssi(peripheralUuid: any) {\r\n    this._hci.readRssi(this._handles[peripheralUuid]);\r\n  }\r\n\r\n  public init() {\r\n    this._gap.on(\"scanStart\", this.onScanStart.bind(this));\r\n    this._gap.on(\"scanStop\", this.onScanStop.bind(this));\r\n    this._gap.on(\"discover\", this.onDiscover.bind(this));\r\n\r\n    this._hci.on(\"stateChange\", this.onStateChange.bind(this));\r\n    this._hci.on(\"addressChange\", this.onAddressChange.bind(this));\r\n    this._hci.on(\"leConnComplete\", this.onLeConnComplete.bind(this));\r\n    this._hci.on(\r\n      \"leConnUpdateComplete\",\r\n      this.onLeConnUpdateComplete.bind(this),\r\n    );\r\n    this._hci.on(\"rssiRead\", this.onRssiRead.bind(this));\r\n    this._hci.on(\"disconnComplete\", this.onDisconnComplete.bind(this));\r\n    this._hci.on(\"encryptChange\", this.onEncryptChange.bind(this));\r\n    this._hci.on(\"aclDataPkt\", this.onAclDataPkt.bind(this));\r\n  }\r\n\r\n  public onStateChange(state: any) {\r\n    if (this._state === state) {\r\n      return;\r\n    }\r\n    this._state = state;\r\n\r\n    if (state === \"unauthorized\") {\r\n      console.log(\r\n        \"noble warning: adapter state unauthorized, please run as root or with sudo\",\r\n      );\r\n      console.log(\r\n        \"               or see README for information on running without root/sudo:\",\r\n      );\r\n      console.log(\r\n        \"               https://github.com/sandeepmistry/noble#running-on-linux\",\r\n      );\r\n    } else if (state === \"unsupported\") {\r\n      console.log(\r\n        \"noble warning: adapter does not support Bluetooth Low Energy (BLE, Bluetooth Smart).\",\r\n      );\r\n      console.log(\"               Try to run with environment variable:\");\r\n      console.log(\"               [sudo] NOBLE_HCI_DEVICE_ID=x node ...\");\r\n    }\r\n\r\n    this.emit(\"stateChange\", state);\r\n  }\r\n\r\n  public onAddressChange(address: any) {\r\n    this.emit(\"addressChange\", address);\r\n  }\r\n\r\n  public onScanStart(filterDuplicates: any) {\r\n    this.emit(\"scanStart\", filterDuplicates);\r\n  }\r\n\r\n  public onScanStop() {\r\n    this.emit(\"scanStop\");\r\n  }\r\n\r\n  public onDiscover(status: any, address?: any, addressType?: any, connectable?: any, advertisement?: any, rssi?: any) {\r\n    if (this._scanServiceUuids === undefined) {\r\n      return;\r\n    }\r\n\r\n    let serviceUuids: any = advertisement.serviceUuids || [];\r\n    const serviceData: any = advertisement.serviceData || [];\r\n    let hasScanServiceUuids: any = this._scanServiceUuids.length === 0;\r\n\r\n    if (!hasScanServiceUuids) {\r\n      let i: any;\r\n\r\n      serviceUuids = serviceUuids.slice();\r\n\r\n      for (i in serviceData) {\r\n        serviceUuids.push(serviceData[i].uuid);\r\n      }\r\n\r\n      for (i in serviceUuids) {\r\n        hasScanServiceUuids =\r\n          this._scanServiceUuids.indexOf(serviceUuids[i]) !== -1;\r\n\r\n        if (hasScanServiceUuids) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hasScanServiceUuids) {\r\n      const uuid: any = address.split(\":\").join(\"\");\r\n      this._addresses[uuid] = address;\r\n      this._addresseTypes[uuid] = addressType;\r\n      this._connectable[uuid] = connectable;\r\n\r\n      this.emit(\r\n        \"discover\",\r\n        uuid,\r\n        address,\r\n        addressType,\r\n        connectable,\r\n        advertisement,\r\n        rssi,\r\n      );\r\n    }\r\n  }\r\n\r\n  public onLeConnComplete(\r\n    status: any,\r\n    handle?: any,\r\n    role?: any,\r\n    addressType?: any,\r\n    address?: any,\r\n    interval?: any,\r\n    latency?: any,\r\n    supervisionTimeout?: any,\r\n    masterClockAccuracy?: any,\r\n  ) {\r\n    if (role !== 0) {\r\n      // not master, ignore\r\n      return;\r\n    }\r\n\r\n    let uuid: any = null;\r\n\r\n    let error: any = null;\r\n\r\n    if (status === 0) {\r\n      uuid = address\r\n        .split(\":\")\r\n        .join(\"\")\r\n        .toLowerCase();\r\n\r\n      const aclStream: any = new AclStream(\r\n        this._hci,\r\n        handle,\r\n        this._hci.addressType,\r\n        this._hci.address,\r\n        addressType,\r\n        address,\r\n      );\r\n      const gatt: any = new Gatt(address, aclStream);\r\n      const signaling: any = new Signaling(handle, aclStream);\r\n\r\n      this._gatts[uuid] = this._gatts[handle] = gatt;\r\n      this._signalings[uuid] = this._signalings[handle] = signaling;\r\n      this._aclStreams[handle] = aclStream;\r\n      this._handles[uuid] = handle;\r\n      this._handles[handle] = uuid;\r\n\r\n      this._gatts[handle].on(\"mtu\", this.onMtu.bind(this));\r\n      this._gatts[handle].on(\r\n        \"servicesDiscover\",\r\n        this.onServicesDiscovered.bind(this),\r\n      );\r\n      this._gatts[handle].on(\r\n        \"includedServicesDiscover\",\r\n        this.onIncludedServicesDiscovered.bind(this),\r\n      );\r\n      this._gatts[handle].on(\r\n        \"characteristicsDiscover\",\r\n        this.onCharacteristicsDiscovered.bind(this),\r\n      );\r\n      this._gatts[handle].on(\"read\", this.onRead.bind(this));\r\n      this._gatts[handle].on(\"write\", this.onWrite.bind(this));\r\n      this._gatts[handle].on(\"broadcast\", this.onBroadcast.bind(this));\r\n      this._gatts[handle].on(\"notify\", this.onNotify.bind(this));\r\n      this._gatts[handle].on(\"notification\", this.onNotification.bind(this));\r\n      this._gatts[handle].on(\r\n        \"descriptorsDiscover\",\r\n        this.onDescriptorsDiscovered.bind(this),\r\n      );\r\n      this._gatts[handle].on(\"valueRead\", this.onValueRead.bind(this));\r\n      this._gatts[handle].on(\"valueWrite\", this.onValueWrite.bind(this));\r\n      this._gatts[handle].on(\"handleRead\", this.onHandleRead.bind(this));\r\n      this._gatts[handle].on(\"handleWrite\", this.onHandleWrite.bind(this));\r\n      this._gatts[handle].on(\"handleNotify\", this.onHandleNotify.bind(this));\r\n\r\n      this._signalings[handle].on(\r\n        \"connectionParameterUpdateRequest\",\r\n        this.onConnectionParameterUpdateRequest.bind(this),\r\n      );\r\n\r\n      this._gatts[handle].exchangeMtu(256);\r\n    } else {\r\n      uuid = this._pendingConnectionUuid;\r\n      let statusMessage: any = Hci.STATUS_MAPPER[status] || \"HCI Error: Unknown\";\r\n      const errorCode: any = \" (0x\" + status.toString(16) + \")\";\r\n      statusMessage = statusMessage + errorCode;\r\n      error = new Error(statusMessage);\r\n    }\r\n\r\n    this.emit(\"connect\", uuid, error);\r\n\r\n    if (this._connectionQueue.length > 0) {\r\n      const peripheralUuid: any = this._connectionQueue.shift();\r\n\r\n      address = this._addresses[peripheralUuid];\r\n      addressType = this._addresseTypes[peripheralUuid];\r\n\r\n      this._pendingConnectionUuid = peripheralUuid;\r\n\r\n      this._hci.createLeConn(address, addressType);\r\n    } else {\r\n      this._pendingConnectionUuid = null;\r\n    }\r\n  }\r\n\r\n  public onLeConnUpdateComplete(handle: any, interval?: any, latency?: any, supervisionTimeout?: any) {\r\n    // no-op\r\n  }\r\n\r\n  public onDisconnComplete(handle: any, reason?: any) {\r\n    const uuid: any = this._handles[handle];\r\n\r\n    if (uuid) {\r\n      this._aclStreams[handle].push(null, null);\r\n      this._gatts[handle].removeAllListeners();\r\n      this._signalings[handle].removeAllListeners();\r\n\r\n      delete this._gatts[uuid];\r\n      delete this._gatts[handle];\r\n      delete this._signalings[uuid];\r\n      delete this._signalings[handle];\r\n      delete this._aclStreams[handle];\r\n      delete this._handles[uuid];\r\n      delete this._handles[handle];\r\n\r\n      this.emit(\"disconnect\", uuid); // TODO: handle reason?\r\n    } else {\r\n      // maybe disconnect as peripheral\r\n      // console.warn(\r\n      //   'noble warning: unknown handle ' + handle + ' disconnected!'\r\n      // );\r\n    }\r\n  }\r\n\r\n  public onEncryptChange(handle: any, encrypt?: any) {\r\n    const aclStream: any = this._aclStreams[handle];\r\n\r\n    if (aclStream) {\r\n      aclStream.pushEncrypt(encrypt);\r\n    }\r\n  }\r\n\r\n  public onMtu(address: any, mtu?: any) {\r\n  }\r\n\r\n  public onRssiRead(handle: any, rssi?: any) {\r\n    this.emit(\"rssiUpdate\", this._handles[handle], rssi);\r\n  }\r\n\r\n  public onAclDataPkt(handle: any, cid?: any, data?: any) {\r\n    const aclStream: any = this._aclStreams[handle];\r\n\r\n    if (aclStream) {\r\n      aclStream.push(cid, data);\r\n    }\r\n  }\r\n\r\n  public discoverServices(peripheralUuid: any, uuids: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.discoverServices(uuids || []);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onServicesDiscovered(address: any, serviceUuids?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"servicesDiscover\", uuid, serviceUuids);\r\n  }\r\n\r\n  public discoverIncludedServices(peripheralUuid: any, serviceUuid: any, serviceUuids: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.discoverIncludedServices(serviceUuid, serviceUuids || []);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onIncludedServicesDiscovered(address: any, serviceUuid?: any, includedServiceUuids?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\r\n      \"includedServicesDiscover\",\r\n      uuid,\r\n      serviceUuid,\r\n      includedServiceUuids,\r\n    );\r\n  }\r\n\r\n  public discoverCharacteristics(peripheralUuid: any, serviceUuid: any, characteristicUuids: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.discoverCharacteristics(serviceUuid, characteristicUuids || []);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onCharacteristicsDiscovered(address: any, serviceUuid?: any, characteristics?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"characteristicsDiscover\", uuid, serviceUuid, characteristics);\r\n  }\r\n\r\n  public read(peripheralUuid: any, serviceUuid: any, characteristicUuid: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.read(serviceUuid, characteristicUuid);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onRead(address: any, serviceUuid?: any, characteristicUuid?: any, data?: any, isSuccess?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\r\n      \"read\",\r\n      uuid,\r\n      serviceUuid,\r\n      characteristicUuid,\r\n      data,\r\n      false,\r\n      isSuccess,\r\n    );\r\n  }\r\n\r\n  public write(\r\n    peripheralUuid: any,\r\n    serviceUuid: any,\r\n    characteristicUuid: any,\r\n    data: any,\r\n    withoutResponse: any,\r\n  ) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.write(serviceUuid, characteristicUuid, data, withoutResponse);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onWrite(address: any, serviceUuid?: any, characteristicUuid?: any, isSuccess?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"write\", uuid, serviceUuid, characteristicUuid, isSuccess);\r\n  }\r\n\r\n  public broadcast(peripheralUuid: any, serviceUuid: any, characteristicUuid: any, broadcast: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.broadcast(serviceUuid, characteristicUuid, broadcast);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onBroadcast(address: any, serviceUuid?: any, characteristicUuid?: any, state?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"broadcast\", uuid, serviceUuid, characteristicUuid, state);\r\n  }\r\n\r\n  public notify(peripheralUuid: any, serviceUuid: any, characteristicUuid: any, notify: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.notify(serviceUuid, characteristicUuid, notify);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onNotify(address: any, serviceUuid?: any, characteristicUuid?: any, state?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"notify\", uuid, serviceUuid, characteristicUuid, state);\r\n  }\r\n\r\n  public onNotification(address: any, serviceUuid?: any, characteristicUuid?: any, data?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"read\", uuid, serviceUuid, characteristicUuid, data, true, true);\r\n  }\r\n\r\n  public discoverDescriptors(peripheralUuid: any, serviceUuid: any, characteristicUuid: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.discoverDescriptors(serviceUuid, characteristicUuid);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onDescriptorsDiscovered(\r\n    address: any,\r\n    serviceUuid?: any,\r\n    characteristicUuid?: any,\r\n    descriptorUuids?: any,\r\n  ) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\r\n      \"descriptorsDiscover\",\r\n      uuid,\r\n      serviceUuid,\r\n      characteristicUuid,\r\n      descriptorUuids,\r\n    );\r\n  }\r\n\r\n  public readValue(peripheralUuid: any, serviceUuid: any, characteristicUuid: any, descriptorUuid: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.readValue(serviceUuid, characteristicUuid, descriptorUuid);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onValueRead(\r\n    address: any,\r\n    serviceUuid?: any,\r\n    characteristicUuid?: any,\r\n    descriptorUuid?: any,\r\n    data?: any,\r\n    isSuccess?: any,\r\n  ) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\r\n      \"valueRead\",\r\n      uuid,\r\n      serviceUuid,\r\n      characteristicUuid,\r\n      descriptorUuid,\r\n      data,\r\n      isSuccess,\r\n    );\r\n  }\r\n\r\n  public writeValue(\r\n    peripheralUuid: any,\r\n    serviceUuid: any,\r\n    characteristicUuid: any,\r\n    descriptorUuid: any,\r\n    data: any,\r\n  ) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.writeValue(serviceUuid, characteristicUuid, descriptorUuid, data);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onValueWrite(\r\n    address: any,\r\n    serviceUuid?: any,\r\n    characteristicUuid?: any,\r\n    descriptorUuid?: any,\r\n    isSuccess?: any,\r\n  ) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\r\n      \"valueWrite\",\r\n      uuid,\r\n      serviceUuid,\r\n      characteristicUuid,\r\n      descriptorUuid,\r\n      isSuccess,\r\n    );\r\n  }\r\n\r\n  public readHandle(peripheralUuid: any, attHandle: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.readHandle(attHandle);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onHandleRead(address: any, handle?: any, data?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"handleRead\", uuid, handle, data);\r\n  }\r\n\r\n  public writeHandle(peripheralUuid: any, attHandle: any, data: any, withoutResponse: any) {\r\n    const handle: any = this._handles[peripheralUuid];\r\n    const gatt: any = this._gatts[handle];\r\n\r\n    if (gatt) {\r\n      gatt.writeHandle(attHandle, data, withoutResponse);\r\n    } else {\r\n      console.warn(\"noble warning: unknown peripheral \" + peripheralUuid);\r\n    }\r\n  }\r\n\r\n  public onHandleWrite(address: any, handle?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"handleWrite\", uuid, handle);\r\n  }\r\n\r\n  public onHandleNotify(address: any, handle?: any, data?: any) {\r\n    const uuid: any = address\r\n      .split(\":\")\r\n      .join(\"\")\r\n      .toLowerCase();\r\n\r\n    this.emit(\"handleNotify\", uuid, handle, data);\r\n  }\r\n\r\n  public onConnectionParameterUpdateRequest(\r\n    handle: any,\r\n    minInterval?: any,\r\n    maxInterval?: any,\r\n    latency?: any,\r\n    supervisionTimeout?: any,\r\n  ) {\r\n    this._hci.connUpdateLe(\r\n      handle,\r\n      minInterval,\r\n      maxInterval,\r\n      latency,\r\n      supervisionTimeout,\r\n    );\r\n  }\r\n}\r\n\r\nexport default NobleBindings;\r\n"]}