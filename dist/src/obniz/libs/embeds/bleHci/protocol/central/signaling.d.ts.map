{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/signaling.ts"],"names":[],"mappings":";AAIA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAO5B,cAAM,SAAU,SAAQ,MAAM,CAAC,YAAY;IAClC,OAAO,EAAE,GAAG,CAAC;IACb,UAAU,EAAE,GAAG,CAAC;IAChB,qBAAqB,EAAE,GAAG,CAAC;IAC3B,oBAAoB,EAAE,GAAG,CAAC;gBAErB,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG;IAYhC,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG;IAqBpC,cAAc;IAKd,uCAAuC,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;CA6B1E;AAED,eAAe,SAAS,CAAC","file":"signaling.d.ts","sourcesContent":["// let debug = require('debug')('signaling');\nconst debug: any = () => {\n};\n\nimport events from \"events\";\n\nconst CONNECTION_PARAMETER_UPDATE_REQUEST: any = 0x12;\nconst CONNECTION_PARAMETER_UPDATE_RESPONSE: any = 0x13;\n\nconst SIGNALING_CID: any = 0x0005;\n\nclass Signaling extends events.EventEmitter {\n  public _handle: any;\n  public _aclStream: any;\n  public onAclStreamDataBinded: any;\n  public onAclStreamEndBinded: any;\n\n  constructor(handle: any, aclStream: any) {\n    super();\n    this._handle = handle;\n    this._aclStream = aclStream;\n\n    this.onAclStreamDataBinded = this.onAclStreamData.bind(this);\n    this.onAclStreamEndBinded = this.onAclStreamEnd.bind(this);\n\n    this._aclStream.on(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.on(\"end\", this.onAclStreamEndBinded);\n  }\n\n  public onAclStreamData(cid: any, data?: any) {\n    if (cid !== SIGNALING_CID) {\n      return;\n    }\n\n    debug(\"onAclStreamData: \" + data.toString(\"hex\"));\n\n    const code: any = data.readUInt8(0);\n    const identifier: any = data.readUInt8(1);\n    const length: any = data.readUInt16LE(2);\n    const signalingData: any = data.slice(4);\n\n    debug(\"\\tcode = \" + code);\n    debug(\"\\tidentifier = \" + identifier);\n    debug(\"\\tlength = \" + length);\n\n    if (code === CONNECTION_PARAMETER_UPDATE_REQUEST) {\n      this.processConnectionParameterUpdateRequest(identifier, signalingData);\n    }\n  }\n\n  public onAclStreamEnd() {\n    this._aclStream.removeListener(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.removeListener(\"end\", this.onAclStreamEndBinded);\n  }\n\n  public processConnectionParameterUpdateRequest(identifier: any, data: any) {\n    const minInterval: any = data.readUInt16LE(0) * 1.25;\n    const maxInterval: any = data.readUInt16LE(2) * 1.25;\n    const latency: any = data.readUInt16LE(4);\n    const supervisionTimeout: any = data.readUInt16LE(6) * 10;\n\n    debug(\"\\t\\tmin interval = \", minInterval);\n    debug(\"\\t\\tmax interval = \", maxInterval);\n    debug(\"\\t\\tlatency = \", latency);\n    debug(\"\\t\\tsupervision timeout = \", supervisionTimeout);\n\n    const response: any = Buffer.alloc(6);\n\n    response.writeUInt8(CONNECTION_PARAMETER_UPDATE_RESPONSE, 0); // code\n    response.writeUInt8(identifier, 1); // identifier\n    response.writeUInt16LE(2, 2); // length\n    response.writeUInt16LE(0, 4);\n\n    this._aclStream.write(SIGNALING_CID, response);\n\n    this.emit(\n      \"connectionParameterUpdateRequest\",\n      this._handle,\n      minInterval,\n      maxInterval,\n      latency,\n      supervisionTimeout,\n    );\n  }\n}\n\nexport default Signaling;\n"]}