{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/gatt.ts"],"names":[],"mappings":"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","file":"gatt.js","sourcesContent":["// let debug = require('debug')('att');\r\nconst debug: any = () => {\r\n};\r\n\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport events from \"events\";\r\n\r\nconst ATT_OP_ERROR: any = 0x01;\r\nconst ATT_OP_MTU_REQ: any = 0x02;\r\nconst ATT_OP_MTU_RESP: any = 0x03;\r\nconst ATT_OP_FIND_INFO_REQ: any = 0x04;\r\nconst ATT_OP_FIND_INFO_RESP: any = 0x05;\r\nconst ATT_OP_READ_BY_TYPE_REQ: any = 0x08;\r\nconst ATT_OP_READ_BY_TYPE_RESP: any = 0x09;\r\nconst ATT_OP_READ_REQ: any = 0x0a;\r\nconst ATT_OP_READ_RESP: any = 0x0b;\r\nconst ATT_OP_READ_BLOB_REQ: any = 0x0c;\r\nconst ATT_OP_READ_BLOB_RESP: any = 0x0d;\r\nconst ATT_OP_READ_BY_GROUP_REQ: any = 0x10;\r\nconst ATT_OP_READ_BY_GROUP_RESP: any = 0x11;\r\nconst ATT_OP_WRITE_REQ: any = 0x12;\r\nconst ATT_OP_WRITE_RESP: any = 0x13;\r\nconst ATT_OP_PREPARE_WRITE_REQ: any = 0x16;\r\nconst ATT_OP_PREPARE_WRITE_RESP: any = 0x17;\r\nconst ATT_OP_EXECUTE_WRITE_REQ: any = 0x18;\r\nconst ATT_OP_EXECUTE_WRITE_RESP: any = 0x19;\r\nconst ATT_OP_HANDLE_NOTIFY: any = 0x1b;\r\nconst ATT_OP_HANDLE_IND: any = 0x1d;\r\nconst ATT_OP_HANDLE_CNF: any = 0x1e;\r\nconst ATT_OP_WRITE_CMD: any = 0x52;\r\n\r\nconst ATT_ECODE_SUCCESS: any = 0x00;\r\nconst ATT_ECODE_INVALID_HANDLE: any = 0x01;\r\nconst ATT_ECODE_READ_NOT_PERM: any = 0x02;\r\nconst ATT_ECODE_WRITE_NOT_PERM: any = 0x03;\r\nconst ATT_ECODE_INVALID_PDU: any = 0x04;\r\nconst ATT_ECODE_AUTHENTICATION: any = 0x05;\r\nconst ATT_ECODE_REQ_NOT_SUPP: any = 0x06;\r\nconst ATT_ECODE_INVALID_OFFSET: any = 0x07;\r\nconst ATT_ECODE_AUTHORIZATION: any = 0x08;\r\nconst ATT_ECODE_PREP_QUEUE_FULL: any = 0x09;\r\nconst ATT_ECODE_ATTR_NOT_FOUND: any = 0x0a;\r\nconst ATT_ECODE_ATTR_NOT_LONG: any = 0x0b;\r\nconst ATT_ECODE_INSUFF_ENCR_KEY_SIZE: any = 0x0c;\r\nconst ATT_ECODE_INVAL_ATTR_VALUE_LEN: any = 0x0d;\r\nconst ATT_ECODE_UNLIKELY: any = 0x0e;\r\nconst ATT_ECODE_INSUFF_ENC: any = 0x0f;\r\nconst ATT_ECODE_UNSUPP_GRP_TYPE: any = 0x10;\r\nconst ATT_ECODE_INSUFF_RESOURCES: any = 0x11;\r\n\r\nconst GATT_PRIM_SVC_UUID: any = 0x2800;\r\nconst GATT_INCLUDE_UUID: any = 0x2802;\r\nconst GATT_CHARAC_UUID: any = 0x2803;\r\n\r\nconst GATT_CLIENT_CHARAC_CFG_UUID: any = 0x2902;\r\nconst GATT_SERVER_CHARAC_CFG_UUID: any = 0x2903;\r\n\r\nconst ATT_CID: any = 0x0004;\r\n\r\n/* eslint-enable no-unused-vars */\r\nclass Gatt extends events.EventEmitter {\r\n  public _address: any;\r\n  public _aclStream: any;\r\n  public _services: any;\r\n  public _characteristics: any;\r\n  public _descriptors: any;\r\n  public _currentCommand: any;\r\n  public _commandQueue: any;\r\n  public _mtu: any;\r\n  public _security: any;\r\n  public onAclStreamDataBinded: any;\r\n  public onAclStreamEncryptBinded: any;\r\n  public onAclStreamEncryptFailBinded: any;\r\n  public onAclStreamEndBinded: any;\r\n\r\n  constructor(address: any, aclStream: any) {\r\n    super();\r\n    this._address = address;\r\n    this._aclStream = aclStream;\r\n\r\n    this._services = {};\r\n    this._characteristics = {};\r\n    this._descriptors = {};\r\n\r\n    this._currentCommand = null;\r\n    this._commandQueue = [];\r\n\r\n    this._mtu = 23;\r\n    this._security = \"low\";\r\n\r\n    this.onAclStreamDataBinded = this.onAclStreamData.bind(this);\r\n    this.onAclStreamEncryptBinded = this.onAclStreamEncrypt.bind(this);\r\n    this.onAclStreamEncryptFailBinded = this.onAclStreamEncryptFail.bind(this);\r\n    this.onAclStreamEndBinded = this.onAclStreamEnd.bind(this);\r\n\r\n    this._aclStream.on(\"data\", this.onAclStreamDataBinded);\r\n    this._aclStream.on(\"encrypt\", this.onAclStreamEncryptBinded);\r\n    this._aclStream.on(\"encryptFail\", this.onAclStreamEncryptFailBinded);\r\n    this._aclStream.on(\"end\", this.onAclStreamEndBinded);\r\n  }\r\n\r\n  public onAclStreamData(cid: any, data?: any) {\r\n    if (cid !== ATT_CID) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this._currentCommand &&\r\n      data.toString(\"hex\") === this._currentCommand.buffer.toString(\"hex\")\r\n    ) {\r\n      debug(this._address + \": echo ... echo ... echo ...\");\r\n    } else if (data[0] % 2 === 0) {\r\n      if (process.env.NOBLE_MULTI_ROLE) {\r\n        debug(\r\n          this._address +\r\n          \": multi-role flag in use, ignoring command meant for peripheral role.\",\r\n        );\r\n      } else {\r\n        const requestType: any = data[0];\r\n        debug(\r\n          this._address +\r\n          \": replying with REQ_NOT_SUPP to 0x\" +\r\n          requestType.toString(16),\r\n        );\r\n        this.writeAtt(\r\n          this.errorResponse(requestType, 0x0000, ATT_ECODE_REQ_NOT_SUPP),\r\n        );\r\n      }\r\n    } else if (\r\n      data[0] === ATT_OP_HANDLE_NOTIFY ||\r\n      data[0] === ATT_OP_HANDLE_IND\r\n    ) {\r\n      const valueHandle: any = data.readUInt16LE(1);\r\n      const valueData: any = data.slice(3);\r\n\r\n      this.emit(\"handleNotify\", this._address, valueHandle, valueData);\r\n\r\n      if (data[0] === ATT_OP_HANDLE_IND) {\r\n        this._queueCommand(\r\n          this.handleConfirmation(),\r\n          null,\r\n          () => {\r\n            this.emit(\"handleConfirmation\", this._address, valueHandle);\r\n          },\r\n        );\r\n      }\r\n\r\n      for (const serviceUuid in this._services) {\r\n        for (const characteristicUuid in this._characteristics[serviceUuid]) {\r\n          if (\r\n            this._characteristics[serviceUuid][characteristicUuid]\r\n              .valueHandle === valueHandle\r\n          ) {\r\n            this.emit(\r\n              \"notification\",\r\n              this._address,\r\n              serviceUuid,\r\n              characteristicUuid,\r\n              valueData,\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } else if (!this._currentCommand) {\r\n      debug(this._address + \": uh oh, no current command\");\r\n    } else {\r\n      if (\r\n        data[0] === ATT_OP_ERROR &&\r\n        (data[4] === ATT_ECODE_AUTHENTICATION ||\r\n          data[4] === ATT_ECODE_AUTHORIZATION ||\r\n          data[4] === ATT_ECODE_INSUFF_ENC) &&\r\n        this._security !== \"medium\"\r\n      ) {\r\n        this._aclStream.encrypt();\r\n        return;\r\n      }\r\n\r\n      debug(this._address + \": read: \" + data.toString(\"hex\"));\r\n\r\n      this._currentCommand.callback(data);\r\n\r\n      this._currentCommand = null;\r\n\r\n      while (this._commandQueue.length) {\r\n        this._currentCommand = this._commandQueue.shift();\r\n\r\n        this.writeAtt(this._currentCommand.buffer);\r\n\r\n        if (this._currentCommand.callback) {\r\n          break;\r\n        } else if (this._currentCommand.writeCallback) {\r\n          this._currentCommand.writeCallback();\r\n\r\n          this._currentCommand = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onAclStreamEncrypt(encrypt: any) {\r\n    if (encrypt) {\r\n      this._security = \"medium\";\r\n\r\n      this.writeAtt(this._currentCommand.buffer);\r\n    }\r\n  }\r\n\r\n  public onAclStreamEncryptFail() {\r\n  }\r\n\r\n  public onAclStreamEnd() {\r\n    this._aclStream.removeListener(\"data\", this.onAclStreamDataBinded);\r\n    this._aclStream.removeListener(\"encrypt\", this.onAclStreamEncryptBinded);\r\n    this._aclStream.removeListener(\r\n      \"encryptFail\",\r\n      this.onAclStreamEncryptFailBinded,\r\n    );\r\n    this._aclStream.removeListener(\"end\", this.onAclStreamEndBinded);\r\n  }\r\n\r\n  public writeAtt(data: any) {\r\n    debug(this._address + \": write: \" + data.toString(\"hex\"));\r\n\r\n    this._aclStream.write(ATT_CID, data);\r\n  }\r\n\r\n  public errorResponse(opcode: any, handle: any, status: any) {\r\n    const buf: any = Buffer.alloc(5);\r\n\r\n    buf.writeUInt8(ATT_OP_ERROR, 0);\r\n    buf.writeUInt8(opcode, 1);\r\n    buf.writeUInt16LE(handle, 2);\r\n    buf.writeUInt8(status, 4);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public _queueCommand(buffer: any, callback: any, writeCallback?: any) {\r\n    this._commandQueue.push({\r\n      buffer,\r\n      callback,\r\n      writeCallback,\r\n    });\r\n\r\n    if (this._currentCommand === null) {\r\n      while (this._commandQueue.length) {\r\n        this._currentCommand = this._commandQueue.shift();\r\n\r\n        this.writeAtt(this._currentCommand.buffer);\r\n\r\n        if (this._currentCommand.callback) {\r\n          break;\r\n        } else if (this._currentCommand.writeCallback) {\r\n          this._currentCommand.writeCallback();\r\n\r\n          this._currentCommand = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public mtuRequest(mtu: any) {\r\n    const buf: any = Buffer.alloc(3);\r\n\r\n    buf.writeUInt8(ATT_OP_MTU_REQ, 0);\r\n    buf.writeUInt16LE(mtu, 1);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public readByGroupRequest(startHandle: any, endHandle: any, groupUuid: any) {\r\n    const buf: any = Buffer.alloc(7);\r\n\r\n    buf.writeUInt8(ATT_OP_READ_BY_GROUP_REQ, 0);\r\n    buf.writeUInt16LE(startHandle, 1);\r\n    buf.writeUInt16LE(endHandle, 3);\r\n    buf.writeUInt16LE(groupUuid, 5);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public readByTypeRequest(startHandle: any, endHandle: any, groupUuid: any) {\r\n    const buf: any = Buffer.alloc(7);\r\n\r\n    buf.writeUInt8(ATT_OP_READ_BY_TYPE_REQ, 0);\r\n    buf.writeUInt16LE(startHandle, 1);\r\n    buf.writeUInt16LE(endHandle, 3);\r\n    buf.writeUInt16LE(groupUuid, 5);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public readRequest(handle: any) {\r\n    const buf: any = Buffer.alloc(3);\r\n\r\n    buf.writeUInt8(ATT_OP_READ_REQ, 0);\r\n    buf.writeUInt16LE(handle, 1);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public readBlobRequest(handle: any, offset: any) {\r\n    const buf: any = Buffer.alloc(5);\r\n\r\n    buf.writeUInt8(ATT_OP_READ_BLOB_REQ, 0);\r\n    buf.writeUInt16LE(handle, 1);\r\n    buf.writeUInt16LE(offset, 3);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public findInfoRequest(startHandle: any, endHandle: any) {\r\n    const buf: any = Buffer.alloc(5);\r\n\r\n    buf.writeUInt8(ATT_OP_FIND_INFO_REQ, 0);\r\n    buf.writeUInt16LE(startHandle, 1);\r\n    buf.writeUInt16LE(endHandle, 3);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public writeRequest(handle: any, data: any, withoutResponse: any) {\r\n    const buf: any = Buffer.alloc(3 + data.length);\r\n\r\n    buf.writeUInt8(withoutResponse ? ATT_OP_WRITE_CMD : ATT_OP_WRITE_REQ, 0);\r\n    buf.writeUInt16LE(handle, 1);\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      buf.writeUInt8(data.readUInt8(i), i + 3);\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  public prepareWriteRequest(handle: any, offset: any, data: any) {\r\n    const buf: any = Buffer.alloc(5 + data.length);\r\n\r\n    buf.writeUInt8(ATT_OP_PREPARE_WRITE_REQ, 0);\r\n    buf.writeUInt16LE(handle, 1);\r\n    buf.writeUInt16LE(offset, 3);\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      buf.writeUInt8(data.readUInt8(i), i + 5);\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  public executeWriteRequest(handle: any, cancelPreparedWrites?: any) {\r\n    const buf: any = Buffer.alloc(2);\r\n\r\n    buf.writeUInt8(ATT_OP_EXECUTE_WRITE_REQ, 0);\r\n    buf.writeUInt8(cancelPreparedWrites ? 0 : 1, 1);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public handleConfirmation() {\r\n    const buf: any = Buffer.alloc(1);\r\n\r\n    buf.writeUInt8(ATT_OP_HANDLE_CNF, 0);\r\n\r\n    return buf;\r\n  }\r\n\r\n  public exchangeMtu(mtu: any) {\r\n    this._queueCommand(\r\n      this.mtuRequest(mtu),\r\n      (data: any ) => {\r\n        const opcode: any = data[0];\r\n\r\n        if (opcode === ATT_OP_MTU_RESP) {\r\n          const newMtu: any = data.readUInt16LE(1);\r\n\r\n          debug(this._address + \": new MTU is \" + newMtu);\r\n\r\n          this._mtu = newMtu;\r\n        }\r\n\r\n        this.emit(\"mtu\", this._address, this._mtu);\r\n      },\r\n    );\r\n  }\r\n\r\n  public discoverServices(uuids: any) {\r\n    const services: any = [];\r\n\r\n    const callback: any = (data: any ) => {\r\n      const opcode: any = data[0];\r\n      let i: any = 0;\r\n\r\n      if (opcode === ATT_OP_READ_BY_GROUP_RESP) {\r\n        const type: any = data[1];\r\n        const num: any = (data.length - 2) / type;\r\n\r\n        for (i = 0; i < num; i++) {\r\n          services.push({\r\n            startHandle: data.readUInt16LE(2 + i * type + 0),\r\n            endHandle: data.readUInt16LE(2 + i * type + 2),\r\n            uuid:\r\n              type === 6\r\n                ? data.readUInt16LE(2 + i * type + 4).toString(16)\r\n                : data\r\n                  .slice(2 + i * type + 4)\r\n                  .slice(0, 16)\r\n                  .toString(\"hex\")\r\n                  .match(/.{1,2}/g)\r\n                  .reverse()\r\n                  .join(\"\"),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        opcode !== ATT_OP_READ_BY_GROUP_RESP ||\r\n        services[services.length - 1].endHandle === 0xffff\r\n      ) {\r\n        const serviceUuids: any = [];\r\n        for (i = 0; i < services.length; i++) {\r\n          if (uuids.length === 0 || uuids.indexOf(services[i].uuid) !== -1) {\r\n            serviceUuids.push(services[i].uuid);\r\n          }\r\n\r\n          this._services[services[i].uuid] = services[i];\r\n        }\r\n        this.emit(\"servicesDiscover\", this._address, serviceUuids);\r\n      } else {\r\n        this._queueCommand(\r\n          this.readByGroupRequest(\r\n            services[services.length - 1].endHandle + 1,\r\n            0xffff,\r\n            GATT_PRIM_SVC_UUID,\r\n          ),\r\n          callback,\r\n        );\r\n      }\r\n    };\r\n\r\n    this._queueCommand(\r\n      this.readByGroupRequest(0x0001, 0xffff, GATT_PRIM_SVC_UUID),\r\n      callback,\r\n    );\r\n  }\r\n\r\n  public discoverIncludedServices(serviceUuid: any, uuids: any) {\r\n    const service: any = this._services[serviceUuid];\r\n    const includedServices: any = [];\r\n\r\n    const callback: any = (data: any ) => {\r\n      const opcode: any = data[0];\r\n      let i: any = 0;\r\n\r\n      if (opcode === ATT_OP_READ_BY_TYPE_RESP) {\r\n        const type: any = data[1];\r\n        const num: any = (data.length - 2) / type;\r\n\r\n        for (i = 0; i < num; i++) {\r\n          includedServices.push({\r\n            endHandle: data.readUInt16LE(2 + i * type + 0),\r\n            startHandle: data.readUInt16LE(2 + i * type + 2),\r\n            uuid:\r\n              type === 8\r\n                ? data.readUInt16LE(2 + i * type + 6).toString(16)\r\n                : data\r\n                  .slice(2 + i * type + 6)\r\n                  .slice(0, 16)\r\n                  .toString(\"hex\")\r\n                  .match(/.{1,2}/g)\r\n                  .reverse()\r\n                  .join(\"\"),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        opcode !== ATT_OP_READ_BY_TYPE_RESP ||\r\n        includedServices[includedServices.length - 1].endHandle ===\r\n        service.endHandle\r\n      ) {\r\n        const includedServiceUuids: any = [];\r\n\r\n        for (i = 0; i < includedServices.length; i++) {\r\n          if (\r\n            uuids.length === 0 ||\r\n            uuids.indexOf(includedServices[i].uuid) !== -1\r\n          ) {\r\n            includedServiceUuids.push(includedServices[i].uuid);\r\n          }\r\n        }\r\n\r\n        this.emit(\r\n          \"includedServicesDiscover\",\r\n          this._address,\r\n          service.uuid,\r\n          includedServiceUuids,\r\n        );\r\n      } else {\r\n        this._queueCommand(\r\n          this.readByTypeRequest(\r\n            includedServices[includedServices.length - 1].endHandle + 1,\r\n            service.endHandle,\r\n            GATT_INCLUDE_UUID,\r\n          ),\r\n          callback,\r\n        );\r\n      }\r\n    };\r\n\r\n    this._queueCommand(\r\n      this.readByTypeRequest(\r\n        service.startHandle,\r\n        service.endHandle,\r\n        GATT_INCLUDE_UUID,\r\n      ),\r\n      callback,\r\n    );\r\n  }\r\n\r\n  public discoverCharacteristics(serviceUuid: any, characteristicUuids: any) {\r\n    const service: any = this._services[serviceUuid];\r\n    const characteristics: any = [];\r\n\r\n    this._characteristics[serviceUuid] =\r\n      this._characteristics[serviceUuid] || {};\r\n    this._descriptors[serviceUuid] = this._descriptors[serviceUuid] || {};\r\n\r\n    const callback: any = (data: any ) => {\r\n      const opcode: any = data[0];\r\n      let i: any = 0;\r\n\r\n      if (opcode === ATT_OP_READ_BY_TYPE_RESP) {\r\n        const type: any = data[1];\r\n        const num: any = (data.length - 2) / type;\r\n\r\n        for (i = 0; i < num; i++) {\r\n          characteristics.push({\r\n            startHandle: data.readUInt16LE(2 + i * type + 0),\r\n            properties: data.readUInt8(2 + i * type + 2),\r\n            valueHandle: data.readUInt16LE(2 + i * type + 3),\r\n            uuid:\r\n              type === 7\r\n                ? data.readUInt16LE(2 + i * type + 5).toString(16)\r\n                : data\r\n                  .slice(2 + i * type + 5)\r\n                  .slice(0, 16)\r\n                  .toString(\"hex\")\r\n                  .match(/.{1,2}/g)\r\n                  .reverse()\r\n                  .join(\"\"),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        opcode !== ATT_OP_READ_BY_TYPE_RESP ||\r\n        characteristics[characteristics.length - 1].valueHandle ===\r\n        service.endHandle\r\n      ) {\r\n        const characteristicsDiscovered: any = [];\r\n        for (i = 0; i < characteristics.length; i++) {\r\n          const properties: any = characteristics[i].properties;\r\n\r\n          const characteristic: any = {\r\n            properties: [],\r\n            uuid: characteristics[i].uuid,\r\n          };\r\n\r\n          if (i !== 0) {\r\n            characteristics[i - 1].endHandle =\r\n              characteristics[i].startHandle - 1;\r\n          }\r\n\r\n          if (i === characteristics.length - 1) {\r\n            characteristics[i].endHandle = service.endHandle;\r\n          }\r\n\r\n          this._characteristics[serviceUuid][characteristics[i].uuid] =\r\n            characteristics[i];\r\n\r\n          if (properties & 0x01) {\r\n            characteristic.properties.push(\"broadcast\");\r\n          }\r\n\r\n          if (properties & 0x02) {\r\n            characteristic.properties.push(\"read\");\r\n          }\r\n\r\n          if (properties & 0x04) {\r\n            characteristic.properties.push(\"writeWithoutResponse\");\r\n          }\r\n\r\n          if (properties & 0x08) {\r\n            characteristic.properties.push(\"write\");\r\n          }\r\n\r\n          if (properties & 0x10) {\r\n            characteristic.properties.push(\"notify\");\r\n          }\r\n\r\n          if (properties & 0x20) {\r\n            characteristic.properties.push(\"indicate\");\r\n          }\r\n\r\n          if (properties & 0x40) {\r\n            characteristic.properties.push(\"authenticatedSignedWrites\");\r\n          }\r\n\r\n          if (properties & 0x80) {\r\n            characteristic.properties.push(\"extendedProperties\");\r\n          }\r\n\r\n          if (\r\n            characteristicUuids.length === 0 ||\r\n            characteristicUuids.indexOf(characteristic.uuid) !== -1\r\n          ) {\r\n            characteristicsDiscovered.push(characteristic);\r\n          }\r\n        }\r\n\r\n        this.emit(\r\n          \"characteristicsDiscover\",\r\n          this._address,\r\n          serviceUuid,\r\n          characteristicsDiscovered,\r\n        );\r\n      } else {\r\n        this._queueCommand(\r\n          this.readByTypeRequest(\r\n            characteristics[characteristics.length - 1].valueHandle + 1,\r\n            service.endHandle,\r\n            GATT_CHARAC_UUID,\r\n          ),\r\n          callback,\r\n        );\r\n      }\r\n    };\r\n\r\n    this._queueCommand(\r\n      this.readByTypeRequest(\r\n        service.startHandle,\r\n        service.endHandle,\r\n        GATT_CHARAC_UUID,\r\n      ),\r\n      callback,\r\n    );\r\n  }\r\n\r\n  public read(serviceUuid: any, characteristicUuid: any) {\r\n    if (\r\n      !this._characteristics[serviceUuid] ||\r\n      !this._characteristics[serviceUuid][characteristicUuid]\r\n    ) {\r\n      this.emit(\r\n        \"read\",\r\n        this._address,\r\n        serviceUuid,\r\n        characteristicUuid,\r\n        Buffer.alloc(0),\r\n        false,\r\n      );\r\n      return;\r\n    }\r\n\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n\r\n    let readData: any = Buffer.alloc(0);\r\n\r\n    const callback: any = (data: any ) => {\r\n      const opcode: any = data[0];\r\n\r\n      if (opcode === ATT_OP_READ_RESP || opcode === ATT_OP_READ_BLOB_RESP) {\r\n        readData = Buffer.from(\r\n          readData.toString(\"hex\") + data.slice(1).toString(\"hex\"),\r\n          \"hex\",\r\n        );\r\n\r\n        if (data.length === this._mtu) {\r\n          this._queueCommand(\r\n            this.readBlobRequest(characteristic.valueHandle, readData.length),\r\n            callback,\r\n          );\r\n        } else {\r\n          this.emit(\r\n            \"read\",\r\n            this._address,\r\n            serviceUuid,\r\n            characteristicUuid,\r\n            readData,\r\n            true,\r\n          );\r\n        }\r\n      } else if (opcode === ATT_OP_ERROR) {\r\n        this.emit(\r\n          \"read\",\r\n          this._address,\r\n          serviceUuid,\r\n          characteristicUuid,\r\n          Buffer.alloc(0),\r\n          false,\r\n        );\r\n      } else {\r\n        this.emit(\r\n          \"read\",\r\n          this._address,\r\n          serviceUuid,\r\n          characteristicUuid,\r\n          readData,\r\n          true,\r\n        );\r\n      }\r\n    };\r\n\r\n    this._queueCommand(this.readRequest(characteristic.valueHandle), callback);\r\n  }\r\n\r\n  public write(serviceUuid: any, characteristicUuid: any, data: any, withoutResponse: any) {\r\n    if (\r\n      !this._characteristics[serviceUuid] ||\r\n      !this._characteristics[serviceUuid][characteristicUuid]\r\n    ) {\r\n      this.emit(\"write\", this._address, serviceUuid, characteristicUuid, false);\r\n      return;\r\n    }\r\n\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n    if (withoutResponse) {\r\n      this._queueCommand(\r\n        this.writeRequest(characteristic.valueHandle, data, true),\r\n        null,\r\n        () => {\r\n          this.emit(\"write\", this._address, serviceUuid, characteristicUuid);\r\n        },\r\n      );\r\n    } else if (data.length + 3 > this._mtu) {\r\n      return this.longWrite(\r\n        serviceUuid,\r\n        characteristicUuid,\r\n        data,\r\n        withoutResponse,\r\n      );\r\n    } else {\r\n      this._queueCommand(\r\n        this.writeRequest(characteristic.valueHandle, data, false),\r\n        (_data: any) => {\r\n          const opcode: any = _data[0];\r\n\r\n          if (opcode === ATT_OP_WRITE_RESP || opcode === ATT_OP_ERROR) {\r\n            this.emit(\r\n              \"write\",\r\n              this._address,\r\n              serviceUuid,\r\n              characteristicUuid,\r\n              opcode === ATT_OP_WRITE_RESP,\r\n            );\r\n          }\r\n        },\r\n      );\r\n    }\r\n  }\r\n\r\n  /* Perform a \"long write\" as described Bluetooth Spec section 4.9.4 \"Write Long Characteristic Values\" */\r\n  public longWrite(serviceUuid: any, characteristicUuid: any, data: any, withoutResponse: any) {\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n    const limit: any = this._mtu - 5;\r\n\r\n    const prepareWriteCallback: any = (data_chunk: any ) => {\r\n      return (resp: any) => {\r\n        const opcode: any = resp[0];\r\n\r\n        if (opcode !== ATT_OP_PREPARE_WRITE_RESP) {\r\n          debug(\r\n            this._address +\r\n            \": unexpected reply opcode %d (expecting ATT_OP_PREPARE_WRITE_RESP)\",\r\n            opcode,\r\n          );\r\n        } else {\r\n          const expected_length: any = data_chunk.length + 5;\r\n\r\n          if (resp.length !== expected_length) {\r\n            /* the response should contain the data packet echoed back to the caller */\r\n            debug(\r\n              this._address +\r\n              \": unexpected prepareWriteResponse length %d (expecting %d)\",\r\n              resp.length,\r\n              expected_length,\r\n            );\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    /* split into prepare-write chunks and queue them */\r\n    let offset: any = 0;\r\n\r\n    while (offset < data.length) {\r\n      const end: any = offset + limit;\r\n      const chunk: any = data.slice(offset, end);\r\n      this._queueCommand(\r\n        this.prepareWriteRequest(characteristic.valueHandle, offset, chunk),\r\n        prepareWriteCallback(chunk),\r\n      );\r\n      offset = end;\r\n    }\r\n\r\n    /* queue the execute command with a callback to emit the write signal when done */\r\n    this._queueCommand(\r\n      this.executeWriteRequest(characteristic.valueHandle),\r\n      (resp: any) => {\r\n        const opcode: any = resp[0];\r\n\r\n        if (opcode === ATT_OP_EXECUTE_WRITE_RESP && !withoutResponse) {\r\n          this.emit(\"write\", this._address, serviceUuid, characteristicUuid);\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public broadcast(serviceUuid: any, characteristicUuid: any, broadcast: any) {\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n\r\n    this._queueCommand(\r\n      this.readByTypeRequest(\r\n        characteristic.startHandle,\r\n        characteristic.endHandle,\r\n        GATT_SERVER_CHARAC_CFG_UUID,\r\n      ),\r\n      (data: any) => {\r\n        const opcode: any = data[0];\r\n        if (opcode === ATT_OP_READ_BY_TYPE_RESP) {\r\n          // let type = data[1];\r\n          const handle: any = data.readUInt16LE(2);\r\n          let value: any = data.readUInt16LE(4);\r\n\r\n          if (broadcast) {\r\n            value |= 0x0001;\r\n          } else {\r\n            value &= 0xfffe;\r\n          }\r\n\r\n          const valueBuffer: any = Buffer.alloc(2);\r\n          valueBuffer.writeUInt16LE(value, 0);\r\n\r\n          this._queueCommand(\r\n            this.writeRequest(handle, valueBuffer, false),\r\n            (_data: any ) => {\r\n              const _opcode: any = _data[0];\r\n\r\n              if (_opcode === ATT_OP_WRITE_RESP) {\r\n                this.emit(\r\n                  \"broadcast\",\r\n                  this._address,\r\n                  serviceUuid,\r\n                  characteristicUuid,\r\n                  broadcast,\r\n                );\r\n              }\r\n            },\r\n          );\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public notify(serviceUuid: any, characteristicUuid: any, notify: any) {\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n\r\n    this._queueCommand(\r\n      this.readByTypeRequest(\r\n        characteristic.startHandle,\r\n        characteristic.endHandle,\r\n        GATT_CLIENT_CHARAC_CFG_UUID,\r\n      ),\r\n      (data: any ) => {\r\n        const opcode: any = data[0];\r\n        if (opcode === ATT_OP_READ_BY_TYPE_RESP) {\r\n          // let type = data[1];\r\n          const handle: any = data.readUInt16LE(2);\r\n          let value: any = data.readUInt16LE(4);\r\n\r\n          const useNotify: any = characteristic.properties & 0x10;\r\n          const useIndicate: any = characteristic.properties & 0x20;\r\n\r\n          if (notify) {\r\n            if (useNotify) {\r\n              value |= 0x0001;\r\n            } else if (useIndicate) {\r\n              value |= 0x0002;\r\n            }\r\n          } else {\r\n            if (useNotify) {\r\n              value &= 0xfffe;\r\n            } else if (useIndicate) {\r\n              value &= 0xfffd;\r\n            }\r\n          }\r\n\r\n          const valueBuffer: any = Buffer.alloc(2);\r\n          valueBuffer.writeUInt16LE(value, 0);\r\n\r\n          this._queueCommand(\r\n            this.writeRequest(handle, valueBuffer, false),\r\n            (_data: any ) => {\r\n              const _opcode: any = _data[0];\r\n              debug(\r\n                \"set notify write results: \" + (_opcode === ATT_OP_WRITE_RESP),\r\n              );\r\n              // if (opcode === ATT_OP_WRITE_RESP) {\r\n              this.emit(\r\n                \"notify\",\r\n                this._address,\r\n                serviceUuid,\r\n                characteristicUuid,\r\n                notify,\r\n              );\r\n              // }\r\n            },\r\n          );\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public discoverDescriptors(serviceUuid: any, characteristicUuid: any) {\r\n    const characteristic: any = this._characteristics[serviceUuid][characteristicUuid];\r\n    const descriptors: any = [];\r\n\r\n    this._descriptors[serviceUuid][characteristicUuid] = {};\r\n\r\n    const callback: any = (data: any) => {\r\n      const opcode: any = data[0];\r\n      let i: any = 0;\r\n\r\n      if (opcode === ATT_OP_FIND_INFO_RESP) {\r\n        const num: any = data[1];\r\n\r\n        for (i = 0; i < num; i++) {\r\n          descriptors.push({\r\n            handle: data.readUInt16LE(2 + i * 4 + 0),\r\n            uuid: data.readUInt16LE(2 + i * 4 + 2).toString(16),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        opcode !== ATT_OP_FIND_INFO_RESP ||\r\n        descriptors[descriptors.length - 1].handle === characteristic.endHandle\r\n      ) {\r\n        const descriptorUuids: any = [];\r\n        for (i = 0; i < descriptors.length; i++) {\r\n          descriptorUuids.push(descriptors[i].uuid);\r\n\r\n          this._descriptors[serviceUuid][characteristicUuid][\r\n            descriptors[i].uuid\r\n            ] = descriptors[i];\r\n        }\r\n\r\n        this.emit(\r\n          \"descriptorsDiscover\",\r\n          this._address,\r\n          serviceUuid,\r\n          characteristicUuid,\r\n          descriptorUuids,\r\n        );\r\n      } else {\r\n        this._queueCommand(\r\n          this.findInfoRequest(\r\n            descriptors[descriptors.length - 1].handle + 1,\r\n            characteristic.endHandle,\r\n          ),\r\n          callback,\r\n        );\r\n      }\r\n    };\r\n\r\n    this._queueCommand(\r\n      this.findInfoRequest(\r\n        characteristic.valueHandle + 1,\r\n        characteristic.endHandle,\r\n      ),\r\n      callback,\r\n    );\r\n  }\r\n\r\n  public readValue(serviceUuid: any, characteristicUuid: any, descriptorUuid: any) {\r\n    if (\r\n      !this._descriptors[serviceUuid] ||\r\n      !this._descriptors[serviceUuid][characteristicUuid] ||\r\n      !this._descriptors[serviceUuid][characteristicUuid][descriptorUuid]\r\n    ) {\r\n      this.emit(\r\n        \"valueRead\",\r\n        this._address,\r\n        serviceUuid,\r\n        characteristicUuid,\r\n        descriptorUuid,\r\n        Buffer.alloc(0),\r\n        false,\r\n      );\r\n      return;\r\n    }\r\n\r\n    const descriptor: any = this._descriptors[serviceUuid][characteristicUuid][\r\n      descriptorUuid\r\n      ];\r\n\r\n    this._queueCommand(\r\n      this.readRequest(descriptor.handle),\r\n      (data: any ) => {\r\n        const opcode: any = data[0];\r\n\r\n        if (opcode === ATT_OP_READ_RESP || opcode === ATT_OP_ERROR) {\r\n          this.emit(\r\n            \"valueRead\",\r\n            this._address,\r\n            serviceUuid,\r\n            characteristicUuid,\r\n            descriptorUuid,\r\n            data.slice(1),\r\n            opcode === ATT_OP_READ_RESP,\r\n          );\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public writeValue(serviceUuid: any, characteristicUuid: any, descriptorUuid: any, data: any) {\r\n    if (\r\n      !this._descriptors[serviceUuid] ||\r\n      !this._descriptors[serviceUuid][characteristicUuid] ||\r\n      !this._descriptors[serviceUuid][characteristicUuid][descriptorUuid]\r\n    ) {\r\n      this.emit(\r\n        \"valueWrite\",\r\n        this._address,\r\n        serviceUuid,\r\n        characteristicUuid,\r\n        descriptorUuid,\r\n        false,\r\n      );\r\n      return;\r\n    }\r\n\r\n    const descriptor: any = this._descriptors[serviceUuid][characteristicUuid][\r\n      descriptorUuid\r\n      ];\r\n\r\n    this._queueCommand(\r\n      this.writeRequest(descriptor.handle, data, false),\r\n      (_data: any ) => {\r\n        const opcode: any = _data[0];\r\n\r\n        if (opcode === ATT_OP_WRITE_RESP || opcode === ATT_OP_ERROR) {\r\n          this.emit(\r\n            \"valueWrite\",\r\n            this._address,\r\n            serviceUuid,\r\n            characteristicUuid,\r\n            descriptorUuid,\r\n            opcode === ATT_OP_WRITE_RESP,\r\n          );\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public readHandle(handle: any) {\r\n    this._queueCommand(\r\n      this.readRequest(handle),\r\n      (data: any ) => {\r\n        const opcode: any = data[0];\r\n\r\n        if (opcode === ATT_OP_READ_RESP) {\r\n          this.emit(\"handleRead\", this._address, handle, data.slice(1));\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  public writeHandle(handle: any, data: any, withoutResponse: any) {\r\n    if (withoutResponse) {\r\n      this._queueCommand(\r\n        this.writeRequest(handle, data, true),\r\n        null,\r\n        () => {\r\n          this.emit(\"handleWrite\", this._address, handle);\r\n        },\r\n      );\r\n    } else {\r\n      this._queueCommand(\r\n        this.writeRequest(handle, data, false),\r\n        (_data: any ) => {\r\n          const opcode: any = _data[0];\r\n\r\n          if (opcode === ATT_OP_WRITE_RESP) {\r\n            this.emit(\"handleWrite\", this._address, handle);\r\n          }\r\n        },\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gatt;\r\n"]}