{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/protocol/central/signaling.ts"],"names":[],"mappings":"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","file":"signaling.js","sourcesContent":["// let debug = require('debug')('signaling');\nconst debug: any = () => {\n};\n\nimport events from \"events\";\n\nconst CONNECTION_PARAMETER_UPDATE_REQUEST: any = 0x12;\nconst CONNECTION_PARAMETER_UPDATE_RESPONSE: any = 0x13;\n\nconst SIGNALING_CID: any = 0x0005;\n\nclass Signaling extends events.EventEmitter {\n  public _handle: any;\n  public _aclStream: any;\n  public onAclStreamDataBinded: any;\n  public onAclStreamEndBinded: any;\n\n  constructor(handle: any, aclStream: any) {\n    super();\n    this._handle = handle;\n    this._aclStream = aclStream;\n\n    this.onAclStreamDataBinded = this.onAclStreamData.bind(this);\n    this.onAclStreamEndBinded = this.onAclStreamEnd.bind(this);\n\n    this._aclStream.on(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.on(\"end\", this.onAclStreamEndBinded);\n  }\n\n  public onAclStreamData(cid: any, data?: any) {\n    if (cid !== SIGNALING_CID) {\n      return;\n    }\n\n    debug(\"onAclStreamData: \" + data.toString(\"hex\"));\n\n    const code: any = data.readUInt8(0);\n    const identifier: any = data.readUInt8(1);\n    const length: any = data.readUInt16LE(2);\n    const signalingData: any = data.slice(4);\n\n    debug(\"\\tcode = \" + code);\n    debug(\"\\tidentifier = \" + identifier);\n    debug(\"\\tlength = \" + length);\n\n    if (code === CONNECTION_PARAMETER_UPDATE_REQUEST) {\n      this.processConnectionParameterUpdateRequest(identifier, signalingData);\n    }\n  }\n\n  public onAclStreamEnd() {\n    this._aclStream.removeListener(\"data\", this.onAclStreamDataBinded);\n    this._aclStream.removeListener(\"end\", this.onAclStreamEndBinded);\n  }\n\n  public processConnectionParameterUpdateRequest(identifier: any, data: any) {\n    const minInterval: any = data.readUInt16LE(0) * 1.25;\n    const maxInterval: any = data.readUInt16LE(2) * 1.25;\n    const latency: any = data.readUInt16LE(4);\n    const supervisionTimeout: any = data.readUInt16LE(6) * 10;\n\n    debug(\"\\t\\tmin interval = \", minInterval);\n    debug(\"\\t\\tmax interval = \", maxInterval);\n    debug(\"\\t\\tlatency = \", latency);\n    debug(\"\\t\\tsupervision timeout = \", supervisionTimeout);\n\n    const response: any = Buffer.alloc(6);\n\n    response.writeUInt8(CONNECTION_PARAMETER_UPDATE_RESPONSE, 0); // code\n    response.writeUInt8(identifier, 1); // identifier\n    response.writeUInt16LE(2, 2); // length\n    response.writeUInt16LE(0, 4);\n\n    this._aclStream.write(SIGNALING_CID, response);\n\n    this.emit(\n      \"connectionParameterUpdateRequest\",\n      this._handle,\n      minInterval,\n      maxInterval,\n      latency,\n      supervisionTimeout,\n    );\n  }\n}\n\nexport default Signaling;\n"]}