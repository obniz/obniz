{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleDescriptor.ts"],"names":[],"mappings":"AAAA,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAEpE,cAAM,aAAc,SAAQ,yBAAyB;IAC5C,WAAW,EAAE,GAAG,CAAC;gBAEZ,GAAG,EAAE,GAAG;IASpB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAEM,aAAa,CAAC,KAAK,EAAE,GAAG;IAMxB,gBAAgB,CAAC,KAAK,EAAE,GAAG;IAM3B,MAAM;CAQd;AAED,eAAe,aAAa,CAAC","file":"bleDescriptor.d.ts","sourcesContent":["import BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\r\n\r\nclass BleDescriptor extends BleLocalAttributeAbstract {\r\n  public permissions: any;\r\n\r\n  constructor(obj: any) {\r\n    super(obj);\r\n\r\n    this.permissions = obj.permissions || [];\r\n    if (!Array.isArray(this.permissions)) {\r\n      this.permissions = [this.permissions];\r\n    }\r\n  }\r\n\r\n  get parentName(): string | null {\r\n    return \"characteristic\";\r\n  }\r\n\r\n  public addPermission(param: any) {\r\n    if (!this.permissions.includes(param)) {\r\n      this.permissions.push(param);\r\n    }\r\n  }\r\n\r\n  public removePermission(param: any) {\r\n    this.permissions = this.permissions.filter ((elm: any ) => {\r\n      return elm !== param;\r\n    });\r\n  }\r\n\r\n  public toJSON() {\r\n    const obj: any = super.toJSON();\r\n\r\n    if (this.permissions.length > 0) {\r\n      obj.permissions = this.permissions;\r\n    }\r\n    return obj;\r\n  }\r\n}\r\n\r\nexport default BleDescriptor;\r\n"]}