{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleScan.ts"],"names":[],"mappings":"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","file":"bleScan.js","sourcesContent":["import emitter = require(\"eventemitter3\");\nimport ObnizBLE from \"./ble\";\nimport BleHelper from \"./bleHelper\";\nimport BlePeripheral from \"./blePeripheral\";\nimport {UUID} from \"./bleTypes\";\nimport ObnizBLEHci from \"./hci\";\n\nexport interface BleScanTarget {\n  uuids?: UUID[];\n  localName?: string;\n}\n\nexport interface BleScanSetting {\n  duration?: number;\n  duplicate?: boolean;\n}\n\nclass BleScan {\n  public scanTarget: BleScanTarget;\n  public scanSettings: BleScanSetting;\n  public obnizBle: ObnizBLE;\n  public emitter: emitter;\n  public scanedPeripherals: BlePeripheral[];\n  private _timeoutTimer?: NodeJS.Timeout;\n\n  constructor(obnizBle: ObnizBLE) {\n    this.scanTarget = {};\n    this.scanSettings = {};\n    this.obnizBle = obnizBle;\n    this.emitter = new emitter();\n\n    this.scanedPeripherals = [];\n    this._timeoutTimer = undefined;\n  }\n\n  public start(target?: BleScanTarget, settings?: BleScanSetting) {\n    this.obnizBle.warningIfNotInitialize();\n\n    if (!settings) {\n      settings = {};\n    }\n    const timeout: number = settings.duration || 30;\n    settings.duplicate = !!settings.duplicate;\n    this.scanSettings = settings;\n    target = target || {};\n    this.scanTarget = target;\n    if (\n      this.scanTarget &&\n      this.scanTarget.uuids &&\n      Array.isArray(this.scanTarget.uuids)\n    ) {\n      this.scanTarget.uuids = this.scanTarget.uuids.map((elm: UUID) => {\n        return BleHelper.uuidFilter(elm);\n      });\n    }\n    this.scanedPeripherals = [];\n\n    this.obnizBle.centralBindings.startScanning(null, false);\n\n    this.clearTimeoutTimer();\n    this._timeoutTimer = setTimeout(() => {\n      this._timeoutTimer = undefined;\n      this.end();\n    }, timeout * 1000);\n  }\n\n  public startOneWait(target: BleScanTarget, settings: BleScanSetting): Promise<BlePeripheral> {\n    let state: any = 0;\n\n    return new Promise((resolve: any) => {\n      this.emitter.once(\"onfind\", (param: any) => {\n        if (state === 0) {\n          state = 1;\n          this.end();\n          resolve(param);\n        }\n      });\n\n      this.emitter.once(\"onfinish\", () => {\n        if (state === 0) {\n          state = 1;\n          resolve(null);\n        }\n      });\n\n      this.start(target, settings);\n    });\n  }\n\n  public startAllWait(target: BleScanTarget, settings: BleScanSetting): Promise<BlePeripheral[]> {\n    return new Promise((resolve: any) => {\n      this.emitter.once(\"onfinish\", () => {\n        resolve(this.scanedPeripherals);\n      });\n\n      this.start(target, settings);\n    });\n  }\n\n  public end() {\n    this.clearTimeoutTimer();\n    this.obnizBle.centralBindings.stopScanning();\n  }\n\n  public isTarget(peripheral: any) {\n    if (\n      this.scanTarget &&\n      this.scanTarget.localName &&\n      peripheral.localName !== this.scanTarget.localName\n    ) {\n      return false;\n    }\n    if (this.scanTarget && this.scanTarget.uuids) {\n      const uuids: any = peripheral.advertisementServiceUuids().map((e: any) => {\n        return BleHelper.uuidFilter(e);\n      });\n      for (const uuid of this.scanTarget.uuids) {\n        if (!uuids.includes(uuid)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  public onfinish(data: any) {\n  } // dummy\n  public onfind(params: any) {\n  } // dummy\n\n  public notifyFromServer(notifyName: string, params: any) {\n    switch (notifyName) {\n      case \"onfind\": {\n        if (this.scanSettings.duplicate === false) {\n          // duplicate filter\n          if (this.scanedPeripherals.find((e: any) => e.address === params.address)) {\n            break;\n          }\n        }\n        if (this.isTarget(params)) {\n          this.scanedPeripherals.push(params);\n          this.emitter.emit(notifyName, params);\n          this.onfind(params);\n        }\n        break;\n      }\n      case \"onfinish\": {\n        this.clearTimeoutTimer();\n        this.emitter.emit(notifyName, this.scanedPeripherals);\n        this.onfinish(this.scanedPeripherals);\n        break;\n      }\n    }\n  }\n\n  public clearTimeoutTimer() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n      this._timeoutTimer = undefined;\n    }\n  }\n}\n\nexport default BleScan;\n"]}