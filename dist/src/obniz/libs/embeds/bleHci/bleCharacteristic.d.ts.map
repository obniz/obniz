{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleCharacteristic.ts"],"names":[],"mappings":"AACA,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAEpE,cAAM,iBAAkB,SAAQ,yBAAyB;IAChD,aAAa,EAAE,GAAG,CAAC;IACnB,oBAAoB,EAAE,GAAG,CAAC;IAC1B,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,UAAU,EAAE,GAAG,CAAC;IAChB,WAAW,EAAE,GAAG,CAAC;IACjB,QAAQ,EAAE,GAAG,CAAC;IACd,IAAI,EAAE,GAAG,CAAC;gBAEL,GAAG,EAAE,GAAG;IAoBpB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAED,IAAI,aAAa,IAAI,GAAG,CAEvB;IAED,IAAI,YAAY,IAAI,MAAM,GAAG,IAAI,CAEhC;IAED,IAAI,WAAW,QAEd;IAEM,MAAM;IAaN,WAAW;IASX,WAAW,CAAC,KAAK,EAAE,GAAG;IAMtB,cAAc,CAAC,KAAK,EAAE,GAAG;IAMzB,aAAa,CAAC,KAAK,EAAE,GAAG;IAMxB,gBAAgB,CAAC,KAAK,EAAE,GAAG;IAM3B,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG;IAuB9B,YAAY,CAAC,YAAY,EAAE,GAAG,EAAE,mBAAmB,CAAC,EAAE,GAAG;IAMzD,cAAc;IAKd,SAAS;IAGT,WAAW;IAGX,MAAM;CAKd;AAED,eAAe,iBAAiB,CAAC","file":"bleCharacteristic.d.ts","sourcesContent":["import BleDescriptor from \"./bleDescriptor\";\r\nimport BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\r\n\r\nclass BleCharacteristic extends BleLocalAttributeAbstract {\r\n  public _maxValueSize: any;\r\n  public _updateValueCallback: any;\r\n  public addDescriptor: any;\r\n  public addChild: any;\r\n  public getDescriptor: any;\r\n  public getChild: any;\r\n  public properties: any;\r\n  public permissions: any;\r\n  public children: any;\r\n  public data: any;\r\n\r\n  constructor(obj: any) {\r\n    super(obj);\r\n\r\n    this._maxValueSize = null;\r\n    this._updateValueCallback = null;\r\n\r\n    this.addDescriptor = this.addChild;\r\n    this.getDescriptor = this.getChild;\r\n\r\n    this.properties = obj.properties || [];\r\n    if (!Array.isArray(this.properties)) {\r\n      this.properties = [this.properties];\r\n    }\r\n\r\n    this.permissions = obj.permissions || [];\r\n    if (!Array.isArray(this.permissions)) {\r\n      this.permissions = [this.permissions];\r\n    }\r\n  }\r\n\r\n  get parentName(): string | null {\r\n    return \"service\";\r\n  }\r\n\r\n  get childrenClass(): any {\r\n    return BleDescriptor;\r\n  }\r\n\r\n  get childrenName(): string | null {\r\n    return \"descriptors\";\r\n  }\r\n\r\n  get descriptors() {\r\n    return this.children;\r\n  }\r\n\r\n  public toJSON() {\r\n    const obj: any = super.toJSON();\r\n\r\n    if (this.properties.length > 0) {\r\n      obj.properties = this.properties;\r\n    }\r\n\r\n    if (this.permissions.length > 0) {\r\n      obj.permissions = this.permissions;\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  public toBufferObj() {\r\n    const obj: any = super.toBufferObj();\r\n\r\n    obj.properties = this.properties;\r\n    obj.secure = [];\r\n\r\n    return obj;\r\n  }\r\n\r\n  public addProperty(param: any) {\r\n    if (!this.properties.includes(param)) {\r\n      this.properties.push(param);\r\n    }\r\n  }\r\n\r\n  public removeProperty(param: any) {\r\n    this.properties = this.properties.filter((elm: any) => {\r\n      return elm !== param;\r\n    });\r\n  }\r\n\r\n  public addPermission(param: any) {\r\n    if (!this.permissions.includes(param)) {\r\n      this.permissions.push(param);\r\n    }\r\n  }\r\n\r\n  public removePermission(param: any) {\r\n    this.permissions = this.permissions.filter((elm: any) => {\r\n      return elm !== param;\r\n    });\r\n  }\r\n\r\n  public emit(name: any, ...params: any) {\r\n    const result: any = super.emit(name, ...params);\r\n    if (result) {\r\n      return result;\r\n    }\r\n    switch (name) {\r\n      case \"subscribe\":\r\n        this._onSubscribe(...params as [any, any]);\r\n        return true;\r\n      case \"unsubscribe\":\r\n        this._onUnsubscribe();\r\n        return true;\r\n      case \"notify\":\r\n        this._onNotify();\r\n        return true;\r\n      case \"indicate\":\r\n        this._onIndicate();\r\n        return true;\r\n      default:\r\n        throw new Error(\"unknown emit\");\r\n    }\r\n  }\r\n\r\n  public _onSubscribe(maxValueSize: any, updateValueCallback?: any) {\r\n    // console.log('_onSubscribe');\r\n    this._maxValueSize = maxValueSize;\r\n    this._updateValueCallback = updateValueCallback;\r\n  }\r\n\r\n  public _onUnsubscribe() {\r\n    this._maxValueSize = null;\r\n    this._updateValueCallback = null;\r\n  }\r\n\r\n  public _onNotify() {\r\n  }\r\n\r\n  public _onIndicate() {\r\n  }\r\n\r\n  public notify() {\r\n    if (this._updateValueCallback) {\r\n      this._updateValueCallback(Buffer.from(this.data));\r\n    }\r\n  }\r\n}\r\n\r\nexport default BleCharacteristic;\r\n"]}