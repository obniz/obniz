{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleCharacteristic.ts"],"names":[],"mappings":"AACA,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAEpE,cAAM,iBAAkB,SAAQ,yBAAyB;IAChD,aAAa,EAAE,GAAG,CAAC;IACnB,oBAAoB,EAAE,GAAG,CAAC;IAC1B,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,aAAa,EAAE,GAAG,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC;IACd,UAAU,EAAE,GAAG,CAAC;IAChB,WAAW,EAAE,GAAG,CAAC;IACjB,QAAQ,EAAE,GAAG,CAAC;IACd,IAAI,EAAE,GAAG,CAAC;gBAEL,GAAG,EAAE,GAAG;IAoBpB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAED,IAAI,aAAa,IAAI,GAAG,CAEvB;IAED,IAAI,YAAY,IAAI,MAAM,GAAG,IAAI,CAEhC;IAED,IAAI,WAAW,QAEd;IAEM,MAAM;IAaN,WAAW;IASX,WAAW,CAAC,KAAK,EAAE,GAAG;IAMtB,cAAc,CAAC,KAAK,EAAE,GAAG;IAMzB,aAAa,CAAC,KAAK,EAAE,GAAG;IAMxB,gBAAgB,CAAC,KAAK,EAAE,GAAG;IAM3B,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG;IAuB9B,YAAY,CAAC,YAAY,EAAE,GAAG,EAAE,mBAAmB,CAAC,EAAE,GAAG;IAMzD,cAAc;IAKd,SAAS;IAGT,WAAW;IAGX,MAAM;CAKd;AAED,eAAe,iBAAiB,CAAC","file":"bleCharacteristic.d.ts","sourcesContent":["import BleDescriptor from \"./bleDescriptor\";\nimport BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\n\nclass BleCharacteristic extends BleLocalAttributeAbstract {\n  public _maxValueSize: any;\n  public _updateValueCallback: any;\n  public addDescriptor: any;\n  public addChild: any;\n  public getDescriptor: any;\n  public getChild: any;\n  public properties: any;\n  public permissions: any;\n  public children: any;\n  public data: any;\n\n  constructor(obj: any) {\n    super(obj);\n\n    this._maxValueSize = null;\n    this._updateValueCallback = null;\n\n    this.addDescriptor = this.addChild;\n    this.getDescriptor = this.getChild;\n\n    this.properties = obj.properties || [];\n    if (!Array.isArray(this.properties)) {\n      this.properties = [this.properties];\n    }\n\n    this.permissions = obj.permissions || [];\n    if (!Array.isArray(this.permissions)) {\n      this.permissions = [this.permissions];\n    }\n  }\n\n  get parentName(): string | null {\n    return \"service\";\n  }\n\n  get childrenClass(): any {\n    return BleDescriptor;\n  }\n\n  get childrenName(): string | null {\n    return \"descriptors\";\n  }\n\n  get descriptors() {\n    return this.children;\n  }\n\n  public toJSON() {\n    const obj: any = super.toJSON();\n\n    if (this.properties.length > 0) {\n      obj.properties = this.properties;\n    }\n\n    if (this.permissions.length > 0) {\n      obj.permissions = this.permissions;\n    }\n    return obj;\n  }\n\n  public toBufferObj() {\n    const obj: any = super.toBufferObj();\n\n    obj.properties = this.properties;\n    obj.secure = [];\n\n    return obj;\n  }\n\n  public addProperty(param: any) {\n    if (!this.properties.includes(param)) {\n      this.properties.push(param);\n    }\n  }\n\n  public removeProperty(param: any) {\n    this.properties = this.properties.filter((elm: any) => {\n      return elm !== param;\n    });\n  }\n\n  public addPermission(param: any) {\n    if (!this.permissions.includes(param)) {\n      this.permissions.push(param);\n    }\n  }\n\n  public removePermission(param: any) {\n    this.permissions = this.permissions.filter((elm: any) => {\n      return elm !== param;\n    });\n  }\n\n  public emit(name: any, ...params: any) {\n    const result: any = super.emit(name, ...params);\n    if (result) {\n      return result;\n    }\n    switch (name) {\n      case \"subscribe\":\n        this._onSubscribe(...params as [any, any]);\n        return true;\n      case \"unsubscribe\":\n        this._onUnsubscribe();\n        return true;\n      case \"notify\":\n        this._onNotify();\n        return true;\n      case \"indicate\":\n        this._onIndicate();\n        return true;\n      default:\n        throw new Error(\"unknown emit\");\n    }\n  }\n\n  public _onSubscribe(maxValueSize: any, updateValueCallback?: any) {\n    // console.log('_onSubscribe');\n    this._maxValueSize = maxValueSize;\n    this._updateValueCallback = updateValueCallback;\n  }\n\n  public _onUnsubscribe() {\n    this._maxValueSize = null;\n    this._updateValueCallback = null;\n  }\n\n  public _onNotify() {\n  }\n\n  public _onIndicate() {\n  }\n\n  public notify() {\n    if (this._updateValueCallback) {\n      this._updateValueCallback(Buffer.from(this.data));\n    }\n  }\n}\n\nexport default BleCharacteristic;\n"]}