{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/blePeripheral.ts"],"names":[],"mappings":"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","file":"blePeripheral.js","sourcesContent":["import BleHelper from \"./bleHelper\";\r\nimport BleService from \"./bleService\";\r\n\r\nclass BlePeripheral {\r\n  public obnizBle: any;\r\n  public _services: any;\r\n  public currentConnectedDeviceAddress: any;\r\n\r\n  constructor(obnizBle: any) {\r\n    this.obnizBle = obnizBle;\r\n    this._services = [];\r\n    this.currentConnectedDeviceAddress = null;\r\n  }\r\n\r\n  public _updateServices() {\r\n    const bufData: any = this._services.map((e: any) => e.toBufferObj());\r\n    this.obnizBle.peripheralBindings.setServices(bufData);\r\n  }\r\n\r\n  public addService(obj: any) {\r\n    this.obnizBle.warningIfNotInitialize();\r\n    if (!(obj instanceof BleService)) {\r\n      obj = new BleService(obj);\r\n    }\r\n    this._services.push(obj);\r\n    obj.peripheral = this;\r\n\r\n    this._updateServices();\r\n  }\r\n\r\n  public setJson(json: any) {\r\n    if (json.services) {\r\n      for (const service of json.services) {\r\n        this.addService(service);\r\n      }\r\n    }\r\n  }\r\n\r\n  public getService(uuid: any) {\r\n    uuid = BleHelper.uuidFilter(uuid);\r\n    return this._services\r\n      .filter((element: any) => {\r\n        return BleHelper.uuidFilter(element.uuid) === uuid;\r\n      })\r\n      .shift();\r\n  }\r\n\r\n  public removeService(uuid: any) {\r\n    this._services = this._services.filter((element: any) => {\r\n      return BleHelper.uuidFilter(element.uuid) !== uuid;\r\n    });\r\n\r\n    this._updateServices();\r\n  }\r\n\r\n  public stopAllService() {\r\n    this._services = [];\r\n    this._updateServices();\r\n  }\r\n\r\n  public toJSON() {\r\n    return {\r\n      services: this._services,\r\n    };\r\n  }\r\n\r\n  public findCharacteristic(param: any) {\r\n    const serviceUuid: any = BleHelper.uuidFilter(param.service_uuid);\r\n    const characteristicUuid: any = BleHelper.uuidFilter(param.characteristic_uuid);\r\n    const s: any = this.getService(serviceUuid);\r\n    if (s) {\r\n      return s.getCharacteristic(characteristicUuid);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public findDescriptor(param: any) {\r\n    const descriptorUuid: any = BleHelper.uuidFilter(param.descriptor_uuid);\r\n    const c: any = this.findCharacteristic(param);\r\n    if (c) {\r\n      return c.getDescriptor(descriptorUuid);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public end() {\r\n    this.stopAllService();\r\n  }\r\n\r\n  public onconnectionupdates(param: any) {\r\n  }\r\n\r\n  public onerror(error: any) {\r\n  }\r\n}\r\n\r\nexport default BlePeripheral;\r\n"]}