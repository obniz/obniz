{"version":3,"sources":["../src/obniz/libs/io_peripherals/ad.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,aAAa,CAAC;AAEhC,cAAM,YAAY;IACT,KAAK,EAAE,KAAK,CAAC;IACb,EAAE,EAAE,MAAM,CAAC;IACX,KAAK,EAAG,MAAM,CAAC;IACf,SAAS,EAAG,KAAK,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC,CAAC;IAC3C,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI,CAAC;gBAE9B,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM;IAM7B,MAAM;IAKN,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI;IAM7C,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,KAAK,IAAI;IAU1C,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;IAY1B,GAAG;IAQH,QAAQ,CAAC,GAAG,EAAE,MAAM;CAU5B;AAED,eAAe,YAAY,CAAC","file":"ad.d.ts","sourcesContent":["import Obniz from \"../../index\";\r\n\r\nclass PeripheralAD {\r\n  public Obniz: Obniz;\r\n  public id: number;\r\n  public value!: number;\r\n  public observers!: Array<(value: number) => void>;\r\n  public onchange?: (value: number) => void;\r\n\r\n  constructor(obniz: Obniz, id: number) {\r\n    this.Obniz = obniz;\r\n    this.id = id;\r\n    this._reset();\r\n  }\r\n\r\n  public _reset() {\r\n    this.value = 0.0;\r\n    this.observers = [];\r\n  }\r\n\r\n  public addObserver(callback: (value: number) => void) {\r\n    if (callback) {\r\n      this.observers.push(callback);\r\n    }\r\n  }\r\n\r\n  public start(callback?: (voltage: number) => void) {\r\n    this.onchange = callback;\r\n    const obj: any = {};\r\n    obj[\"ad\" + this.id] = {\r\n      stream: true,\r\n    };\r\n    this.Obniz.send(obj);\r\n    return this.value;\r\n  }\r\n\r\n  public getWait(): Promise<number> {\r\n    const self: any = this;\r\n    return new Promise((resolve: any, reject: any) => {\r\n      self.addObserver(resolve);\r\n      const obj: any = {};\r\n      obj[\"ad\" + self.id] = {\r\n        stream: false,\r\n      };\r\n      self.Obniz.send(obj);\r\n    });\r\n  }\r\n\r\n  public end() {\r\n    this.onchange = undefined;\r\n    const obj: any = {};\r\n    obj[\"ad\" + this.id] = null;\r\n    this.Obniz.send(obj);\r\n    return;\r\n  }\r\n\r\n  public notified(obj: number) {\r\n    this.value = obj;\r\n    if (this.onchange) {\r\n      this.onchange(obj);\r\n    }\r\n    const callback: any = this.observers.shift();\r\n    if (callback) {\r\n      callback(obj);\r\n    }\r\n  }\r\n}\r\n\r\nexport default PeripheralAD;\r\n"]}