{"version":3,"sources":["../src/obniz/libs/io_peripherals/spi.ts"],"names":[],"mappings":"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","file":"spi.js","sourcesContent":["import semver = require(\"semver\");\nimport Obniz from \"../../index\";\nimport ObnizUtil from \"../utils/util\";\nimport {DriveType, PullType} from \"./common\";\n\ninterface PeripheralSPIOptions {\n  mode: \"master\";\n  clk?: number;\n  mosi?: number;\n  miso?: number;\n  frequency: number;\n  drive?: DriveType;\n  pull?: PullType;\n  gnd?: number;\n}\n\nclass PeripheralSPI {\n  public Obniz: Obniz;\n  public id: number;\n  public observers!: any[];\n  public used!: boolean;\n  public params!: PeripheralSPIOptions | null;\n\n  constructor(obniz: Obniz, id: number) {\n    this.Obniz = obniz;\n    this.id = id;\n    this._reset();\n  }\n\n  public _reset() {\n    this.observers = [];\n    this.used = false;\n    this.params = null;\n  }\n\n  public addObserver(callback: any) {\n    if (callback) {\n      this.observers.push(callback);\n    }\n  }\n\n  public start(params: PeripheralSPIOptions) {\n    const err: any = ObnizUtil._requiredKeys(params, [\"mode\", \"frequency\"]);\n    if (err) {\n      throw new Error(\"spi start param '\" + err + \"' required, but not found \");\n    }\n    this.params = ObnizUtil._keyFilter(params, [\n      \"mode\",\n      \"clk\",\n      \"mosi\",\n      \"miso\",\n      \"frequency\",\n      \"drive\",\n      \"pull\",\n      \"gnd\",\n    ]) as PeripheralSPIOptions;\n    const obj: any = {};\n\n    const ioKeys: Array<keyof PeripheralSPIOptions> = [\"clk\", \"mosi\", \"miso\", \"gnd\"];\n    for (const key of ioKeys) {\n      if (this.params[key] && !this.Obniz.isValidIO(this.params[key])) {\n        throw new Error(\"spi start param '\" + key + \"' are to be valid io no\");\n      }\n    }\n\n    obj[\"spi\" + this.id] = {\n      mode: this.params.mode,\n      clock: this.params.frequency, // name different\n    };\n    if (this.params.clk !== undefined) {\n      obj[\"spi\" + this.id].clk = this.params.clk;\n    }\n    if (this.params.mosi !== undefined) {\n      obj[\"spi\" + this.id].mosi = this.params.mosi;\n    }\n    if (this.params.miso !== undefined) {\n      obj[\"spi\" + this.id].miso = this.params.miso;\n    }\n\n    if (this.params.drive) {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).drive(this.params.drive);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).drive(this.params.drive);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).drive(this.params.drive);\n      }\n    } else {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).drive(\"5v\");\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).drive(\"5v\");\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).drive(\"5v\");\n      }\n    }\n\n    if (this.params.pull) {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).pull(this.params.pull);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).pull(this.params.pull);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).pull(this.params.pull);\n      }\n    } else {\n      if (this.params.clk !== undefined) {\n        this.Obniz.getIO(this.params.clk).pull(null);\n      }\n      if (this.params.mosi !== undefined) {\n        this.Obniz.getIO(this.params.mosi).pull(null);\n      }\n      if (this.params.miso !== undefined) {\n        this.Obniz.getIO(this.params.miso).pull(null);\n      }\n    }\n\n    if (this.params.gnd !== undefined) {\n      this.Obniz.getIO(this.params.gnd).output(false);\n      const ioNames: any = {};\n      ioNames[this.params.gnd] = \"gnd\";\n      if (this.Obniz.display) {\n        this.Obniz.display.setPinNames(\"spi\" + this.id, ioNames);\n      }\n    }\n    this.used = true;\n    this.Obniz.send(obj);\n  }\n\n  public writeWait(data: number[]): Promise<number[]> {\n    if (!this.used) {\n      throw new Error(`spi${this.id} is not started`);\n    }\n    if (semver.lte(this.Obniz.firmware_ver, \"1.0.2\") && data.length > 32) {\n      throw new Error(\n        `with your obniz ${\n          this.Obniz.firmware_ver\n        }. spi max length=32byte but yours ${\n          data.length\n        }. Please update obniz firmware`,\n      );\n    }\n\n    const self: any = this;\n    return new Promise((resolve: any, reject: any) => {\n      self.addObserver(resolve);\n      const obj: any = {};\n      obj[\"spi\" + self.id] = {\n        data,\n        read: true,\n      };\n      self.Obniz.send(obj);\n    });\n  }\n\n  public write(data: number[]) {\n    if (!this.used) {\n      throw new Error(`spi${this.id} is not started`);\n    }\n    if (semver.lte(this.Obniz.firmware_ver, \"1.0.2\") && data.length > 32) {\n      throw new Error(\n        `with your obniz ${\n          this.Obniz.firmware_ver\n        }. spi max length=32byte but yours ${\n          data.length\n        }. Please update obniz firmware`,\n      );\n    }\n\n    const self: any = this;\n    const obj: any = {};\n    obj[\"spi\" + self.id] = {\n      data,\n      read: false,\n    };\n    self.Obniz.send(obj);\n  }\n\n  public notified(obj: any) {\n    // TODO: we should compare byte length from sent\n    const callback: any = this.observers.shift();\n    if (callback) {\n      callback(obj.data);\n    }\n  }\n\n  public isUsed() {\n    return this.used;\n  }\n\n  public end(reuse: any) {\n    const self: any = this;\n    const obj: any = {};\n    obj[\"spi\" + self.id] = null;\n    this.params = null;\n    self.Obniz.send(obj);\n    if (!reuse) {\n      this.used = false;\n    }\n  }\n}\n\nexport default PeripheralSPI;\n"]}