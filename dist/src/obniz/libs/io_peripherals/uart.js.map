{"version":3,"sources":["../src/obniz/libs/io_peripherals/uart.ts"],"names":[],"mappings":"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","file":"uart.js","sourcesContent":["import Obniz from \"../../index\";\r\nimport ObnizUtil from \"../utils/util\";\r\nimport {BitType, DriveType, FlowControlType, ParityType, PullType, StopBitType} from \"./common\";\r\n\r\nconst isNode: any = typeof window === \"undefined\";\r\n\r\ninterface PeripheralUARTOptions {\r\n  tx: number;\r\n  rx: number;\r\n  gnd?: number;\r\n  baud?: number;\r\n  stop?: StopBitType;\r\n  bits?: BitType;\r\n  parity?: ParityType;\r\n  flowcontrol?: FlowControlType;\r\n  rts?: number;\r\n  cts?: number;\r\n  drive?: DriveType;\r\n  pull?: PullType;\r\n}\r\n\r\nclass PeripheralUART {\r\n  public Obniz: Obniz;\r\n  public id: number;\r\n  public received: any;\r\n  public used!: boolean;\r\n  public params: any;\r\n  public onreceive?: (data: any, text: string) => void;\r\n\r\n  constructor(obniz: Obniz, id: number) {\r\n    this.Obniz = obniz;\r\n    this.id = id;\r\n    this._reset();\r\n  }\r\n\r\n  public _reset() {\r\n    this.received = new Uint8Array([]);\r\n    this.used = false;\r\n  }\r\n\r\n  public start(params: PeripheralUARTOptions) {\r\n    const err: any = ObnizUtil._requiredKeys(params, [\"tx\", \"rx\"]);\r\n    if (err) {\r\n      throw new Error(\r\n        \"uart start param '\" + err + \"' required, but not found \",\r\n      );\r\n    }\r\n    this.params = ObnizUtil._keyFilter(params, [\r\n      \"tx\",\r\n      \"rx\",\r\n      \"baud\",\r\n      \"stop\",\r\n      \"bits\",\r\n      \"parity\",\r\n      \"flowcontrol\",\r\n      \"rts\",\r\n      \"cts\",\r\n      \"drive\",\r\n      \"pull\",\r\n      \"gnd\",\r\n    ]);\r\n\r\n    const ioKeys: any = [\"rx\", \"tx\", \"rts\", \"cts\", \"gnd\"];\r\n    for (const key of ioKeys) {\r\n      if (this.params[key] && !this.Obniz.isValidIO(this.params[key])) {\r\n        throw new Error(\"uart start param '\" + key + \"' are to be valid io no\");\r\n      }\r\n    }\r\n\r\n    if (this.params.hasOwnProperty(\"drive\")) {\r\n      this.Obniz.getIO(this.params.rx).drive(this.params.drive);\r\n      this.Obniz.getIO(this.params.tx).drive(this.params.drive);\r\n    } else {\r\n      this.Obniz.getIO(this.params.rx).drive(\"5v\");\r\n      this.Obniz.getIO(this.params.tx).drive(\"5v\");\r\n    }\r\n\r\n    if (this.params.hasOwnProperty(\"pull\")) {\r\n      this.Obniz.getIO(this.params.rx).pull(this.params.pull);\r\n      this.Obniz.getIO(this.params.tx).pull(this.params.pull);\r\n    } else {\r\n      this.Obniz.getIO(this.params.rx).pull(null);\r\n      this.Obniz.getIO(this.params.tx).pull(null);\r\n    }\r\n\r\n    if (this.params.hasOwnProperty(\"gnd\")) {\r\n      this.Obniz.getIO(this.params.gnd).output(false);\r\n      const ioNames: any = {};\r\n      ioNames[this.params.gnd] = \"gnd\";\r\n      if (this.Obniz.display) {\r\n        this.Obniz.display.setPinNames(\"uart\" + this.id, ioNames);\r\n      }\r\n    }\r\n\r\n    const obj: any = {};\r\n    const sendParams: any = ObnizUtil._keyFilter(this.params, [\r\n      \"tx\",\r\n      \"rx\",\r\n      \"baud\",\r\n      \"stop\",\r\n      \"bits\",\r\n      \"parity\",\r\n      \"flowcontrol\",\r\n      \"rts\",\r\n      \"cts\",\r\n    ]);\r\n    obj[\"uart\" + this.id] = sendParams;\r\n    this.Obniz.send(obj);\r\n    this.received = [];\r\n    this.used = true;\r\n  }\r\n\r\n  public send(data: any) {\r\n    if (!this.used) {\r\n      throw new Error(`uart${this.id} is not started`);\r\n    }\r\n    let send_data: any = null;\r\n    if (data === undefined) {\r\n      return;\r\n    }\r\n    if (typeof data === \"number\") {\r\n      data = [data];\r\n    }\r\n    if (isNode && data instanceof Buffer) {\r\n      send_data = [...data];\r\n    } else if (data.constructor === Array) {\r\n      send_data = data;\r\n    } else if (typeof data === \"string\") {\r\n      const buf: any = Buffer.from(data);\r\n      send_data = [...buf];\r\n    }\r\n    const obj: any = {};\r\n    obj[\"uart\" + this.id] = {};\r\n    obj[\"uart\" + this.id].data = send_data;\r\n    //  console.log(obj);\r\n    this.Obniz.send(obj);\r\n  }\r\n\r\n  public isDataExists(): boolean {\r\n    return this.received && this.received.length > 0;\r\n  }\r\n\r\n  public readBytes(): number[] {\r\n    const results: number[] = [];\r\n    if (this.isDataExists()) {\r\n      for (let i = 0; i < this.received.length; i++) {\r\n        results.push(this.received[i]);\r\n      }\r\n    }\r\n    this.received = [];\r\n    return results;\r\n  }\r\n\r\n  public readByte(): number | null {\r\n    const results: any = [];\r\n    if (this.isDataExists()) {\r\n      return results.unshift();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public readText(): string | null {\r\n    let string: string | null = null;\r\n    if (this.isDataExists()) {\r\n      const data: any = this.readBytes();\r\n      string = this.tryConvertString(data);\r\n    }\r\n    this.received = [];\r\n    return string;\r\n  }\r\n\r\n  public tryConvertString(data: any) {\r\n    return ObnizUtil.dataArray2string(data);\r\n  }\r\n\r\n  public notified(obj: any) {\r\n    if (this.onreceive) {\r\n      const string: any = this.tryConvertString(obj.data);\r\n      this.onreceive(obj.data, string);\r\n    } else {\r\n      if (!this.received) {\r\n        this.received = [];\r\n      }\r\n\r\n      this.received.push.apply(this.received, obj.data);\r\n    }\r\n  }\r\n\r\n  public isUsed(): boolean {\r\n    return this.used;\r\n  }\r\n\r\n  public end() {\r\n    const obj: any = {};\r\n    obj[\"uart\" + this.id] = null;\r\n    this.params = null;\r\n    this.Obniz.send(obj);\r\n    this.used = false;\r\n  }\r\n}\r\n\r\nexport default PeripheralUART;\r\n"]}