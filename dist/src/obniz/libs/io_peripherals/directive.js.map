{"version":3,"sources":["../src/obniz/libs/io_peripherals/directive.ts"],"names":[],"mappings":"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","file":"directive.js","sourcesContent":["import semver = require(\"semver\");\r\nimport Obniz from \"../../index\";\r\n\r\nexport type DirectiveStatuse = \"loop\" | \"registrate\" | \"pause\" | \"resume\";\r\n\r\nclass Directive {\r\n  public Obniz: Obniz;\r\n  public observers: any[];\r\n  public _animationIdentifier: number;\r\n\r\n  constructor(obniz: Obniz, id: number) {\r\n    this.Obniz = obniz;\r\n    this.observers = [];\r\n    this._animationIdentifier = 0;\r\n    this._reset();\r\n  }\r\n\r\n  public _reset() {\r\n    for (let i = 0; i < this.observers.length; i++) {\r\n      this.observers[i].reject(new Error(\"reset called\"));\r\n    }\r\n    this.observers = [];\r\n    this._animationIdentifier = 0;\r\n  }\r\n\r\n  public addObserver(name: string, resolve: any, reject: any) {\r\n    if (name && resolve && reject) {\r\n      this.observers.push({\r\n        name,\r\n        resolve,\r\n        reject,\r\n      });\r\n    }\r\n  }\r\n\r\n  public animation(name: string, status: DirectiveStatuse, array?: any[], repeat?: number) {\r\n    if (\r\n      (typeof repeat === \"number\" || status === \"registrate\") &&\r\n      semver.lt(this.Obniz.firmware_ver, \"2.0.0\")\r\n    ) {\r\n      throw new Error(`Please update obniz firmware >= 2.0.0`);\r\n    }\r\n    const obj: any = {};\r\n    obj.io = {\r\n      animation: {\r\n        name,\r\n        status,\r\n      },\r\n    };\r\n    if (typeof repeat === \"number\") {\r\n      obj.io.animation.repeat = repeat;\r\n    }\r\n    if (!array) {\r\n      array = [];\r\n    }\r\n\r\n    const states: any[] = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      const state: any = array[i];\r\n      const duration: number = state.duration;\r\n      const operation: (index: number) => {} = state.state;\r\n\r\n      // dry run. and get json commands\r\n      this.Obniz.sendPool = [];\r\n      operation(i);\r\n      const pooledJsonArray: any = this.Obniz.sendPool;\r\n      this.Obniz.sendPool = null;\r\n      states.push({\r\n        duration,\r\n        state: pooledJsonArray,\r\n      });\r\n    }\r\n    if (status === \"loop\" || status === \"registrate\") {\r\n      obj.io.animation.states = states;\r\n    }\r\n    this.Obniz.send(obj);\r\n  }\r\n\r\n  public repeatWait(array: any[], repeat: number) {\r\n    if (semver.lt(this.Obniz.firmware_ver, \"2.0.0\")) {\r\n      throw new Error(`Please update obniz firmware >= 2.0.0`);\r\n    }\r\n    if (typeof repeat !== \"number\" || repeat < 1) {\r\n      throw new Error(\"please specify repeat count > 0\");\r\n    }\r\n    if (Math.floor(repeat) !== repeat) {\r\n      throw new Error(\"please provide integer number like 1, 2, 3,,,\");\r\n    }\r\n\r\n    return new Promise((resolve: any, reject: any) => {\r\n      const name = \"_repeatwait\" + Date.now() + this._animationIdentifier;\r\n      if (++this._animationIdentifier > 1000) {\r\n        this._animationIdentifier = 0;\r\n      }\r\n\r\n      this.animation(name, \"loop\", array, repeat);\r\n      this.addObserver(name, resolve, reject);\r\n    });\r\n  }\r\n\r\n  public notified(obj: {[key: string]: any}) {\r\n    if (obj.animation.status === \"finish\") {\r\n      for (let i = this.observers.length - 1; i >= 0; i--) {\r\n        if (obj.animation.name === this.observers[i].name) {\r\n          this.observers[i].resolve();\r\n          this.observers.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Directive;\r\n"]}