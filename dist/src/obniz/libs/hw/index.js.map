{"version":3,"sources":["../src/obniz/libs/hw/index.ts"],"names":[],"mappings":";;AAAA,MAAqB,EAAE;IAEd,MAAM,CAAC,gBAAgB,CAAC,EAAO;QACpC,IAAI,EAAE,KAAK,SAAS,EAAE;YACpB,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClC;aAAM,IAAI,EAAE,KAAK,SAAS,EAAE;YAC3B,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClC;aAAM,IAAI,EAAE,KAAK,QAAQ,EAAE;YAC1B,OAAO,OAAO,CAAC,eAAe,CAAC,CAAC;SACjC;aAAM,IAAI,EAAE,KAAK,QAAQ,EAAE;YAC1B,OAAO,OAAO,CAAC,eAAe,CAAC,CAAC;SACjC;aAAM,IAAI,EAAE,KAAK,SAAS,EAAE;YAC3B,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;SAClC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AAhBD,qBAgBC","file":"index.js","sourcesContent":["export default class HW {\n\n  public static getDefinitionFor(hw: any) {\n    if (hw === \"obnizb1\") {\n      return require(\"./obnizb1.json\");\n    } else if (hw === \"obnizb2\") {\n      return require(\"./obnizb2.json\");\n    } else if (hw === \"esp32w\") {\n      return require(\"./esp32w.json\");\n    } else if (hw === \"esp32p\") {\n      return require(\"./esp32p.json\");\n    } else if (hw === \"encored\") {\n      return require(\"./encored.json\");\n    }\n    return undefined;\n  }\n}\n"]}