{"version":3,"sources":["../src/obniz/ObnizParts.ts"],"names":[],"mappings":"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","file":"ObnizParts.js","sourcesContent":["import ObnizUtil from \"./libs/utils/util\";\r\nimport ObnizConnection from \"./ObnizConnection\";\r\nimport {WiredNameMap, WiredNameOptionsMap} from \"./ObnizPartsList\";\r\n\r\nconst _parts: any = {};\r\n\r\nexport default class ObnizParts extends ObnizConnection {\r\n\r\n  public static _parts(): any {\r\n    return _parts;\r\n  }\r\n\r\n  public static PartsRegistrate(arg0: any, arg1?: any) {\r\n    if (\r\n      arg0 &&\r\n      typeof arg0.info === \"function\" &&\r\n      typeof arg0.info().name === \"string\"\r\n    ) {\r\n      _parts[arg0.info().name] = arg0;\r\n    } else if (typeof arg0 === \"string\" && typeof arg1 === \"object\") {\r\n      _parts[arg0] = arg1;\r\n    }\r\n  }\r\n\r\n  public static Parts(name: any): any {\r\n    if (!_parts[name]) {\r\n      throw new Error(`unknown parts [${name}]`);\r\n    }\r\n    return new _parts[name]();\r\n  }\r\n\r\n  constructor(id: any, options?: any) {\r\n    super(id, options);\r\n  }\r\n\r\n  public isValidIO(io: any): boolean {\r\n    return typeof io === \"number\" && (this as any)[\"io\" + io] !== null;\r\n  }\r\n\r\n  public wired<K extends keyof WiredNameMap>(partsname: K, options?: WiredNameOptionsMap[K]): WiredNameMap[K] {\r\n    const parts: any = ObnizParts.Parts(partsname);\r\n    if (!parts) {\r\n      throw new Error(\"No such a parts [\" + partsname + \"] found\");\r\n    }\r\n    const args: any = Array.from(arguments);\r\n    args.shift();\r\n    args.unshift(this);\r\n    if (parts.keys) {\r\n      if (parts.requiredKeys) {\r\n        const err: any = ObnizUtil._requiredKeys(args[1], parts.requiredKeys);\r\n        if (err) {\r\n          throw new Error(\r\n            partsname + \" wired param '\" + err + \"' required, but not found \",\r\n          );\r\n        }\r\n      }\r\n      parts.params = ObnizUtil._keyFilter(args[1], parts.keys);\r\n    }\r\n    parts.obniz = this;\r\n    parts.wired.apply(parts, args);\r\n    if (parts.keys || parts.ioKeys) {\r\n      const keys: any = parts.ioKeys || parts.keys;\r\n      const displayPartsName: any = parts.displayName || partsname;\r\n      const ioNames: any = {};\r\n      for (const index in keys) {\r\n        let pinName: any = keys[index];\r\n        const io: any = args[1][pinName];\r\n        if (this.isValidIO(io)) {\r\n          if (parts.displayIoNames && parts.displayIoNames[pinName]) {\r\n            pinName = parts.displayIoNames[pinName];\r\n          }\r\n          ioNames[io] = pinName;\r\n        }\r\n      }\r\n      const display = (this as any).display;\r\n      if (display) {\r\n        display.setPinNames(displayPartsName, ioNames);\r\n      }\r\n    }\r\n    return parts;\r\n  }\r\n}\r\n"]}