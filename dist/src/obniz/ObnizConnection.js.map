{"version":3,"sources":["../src/obniz/ObnizConnection.ts"],"names":[],"mappings":"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","file":"ObnizConnection.js","sourcesContent":["import emitter = require(\"eventemitter3\");\r\nimport wsClient = require(\"ws\");\r\n\r\n// @ts-ignore\r\nimport packageJson from \"../../package\";  // pakcage.js will be created from package.json on build.\r\nimport WSCommand from \"./libs/wscommand\";\r\n\r\nconst isNode: any = typeof window === \"undefined\";\r\n\r\nexport default class ObnizConnection {\r\n\r\n  public isNode: boolean;\r\n  public id: any;\r\n  public socket: any;\r\n  public socket_local: any;\r\n  public debugprint: boolean;\r\n  public debugprintBinary: boolean;\r\n  public debugs: any;\r\n  public onConnectCalled: boolean;\r\n  public hw: any;\r\n  public firmware_ver: any;\r\n  public connectionState: \"closed\" | \"connecting\" | \"connected\" | \"closing\";\r\n  public bufferdAmoundWarnBytes: number;\r\n  public emitter: any;\r\n  public options: any;\r\n  public wscommand: any;\r\n  public wscommands: any;\r\n  public _sendQueueTimer: any;\r\n  public _sendQueue: any;\r\n  public _waitForLocalConnectReadyTimer: any;\r\n  public _connectionRetryCount: number;\r\n  public onopen: any;\r\n  public onclose: any;\r\n  public onconnect: any;\r\n  public sendPool: any;\r\n\r\n  constructor(id: any, options?: any) {\r\n    this.isNode = isNode;\r\n    this.id = id;\r\n    this.socket = null;\r\n    this.socket_local = null;\r\n    this.debugprint = false;\r\n    this.debugprintBinary = false;\r\n    this.debugs = [];\r\n    this.onConnectCalled = false;\r\n    this.hw = undefined;\r\n    this.firmware_ver = undefined;\r\n    this.connectionState = \"closed\"; // closed/connecting/connected/closing\r\n    this.bufferdAmoundWarnBytes = 10 * 1000 * 1000; // 10M bytes\r\n    this.emitter = new emitter();\r\n\r\n    this._connectionRetryCount = 0;\r\n\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n    this.options = {\r\n      binary: options.binary === false ? false : true,\r\n      local_connect: options.local_connect === false ? false : true,\r\n      debug_dom_id: options.debug_dom_id || \"obniz-debug\",\r\n      auto_connect: options.auto_connect === false ? false : true,\r\n      access_token: options.access_token || null,\r\n      obniz_server: options.obniz_server || \"wss://obniz.io\",\r\n      reset_obniz_on_ws_disconnection:\r\n        options.reset_obniz_on_ws_disconnection === false ? false : true,\r\n    };\r\n    if (this.options.binary) {\r\n      this.wscommand = (this.constructor as typeof ObnizConnection).WSCommand;\r\n      const classes: any = (this.constructor as typeof ObnizConnection).WSCommand.CommandClasses;\r\n      this.wscommands = [];\r\n      for (const class_name in classes) {\r\n        this.wscommands.push(\r\n          new classes[class_name]({\r\n            hw: {\r\n              firmware: undefined,\r\n              model: \"obniz_board\",\r\n            },\r\n            delegate: undefined,\r\n          }),\r\n        );\r\n      }\r\n    }\r\n    if (this.options.auto_connect) {\r\n      this.wsconnect();\r\n    }\r\n  }\r\n\r\n  public prompt(filled: any, callback: any) {\r\n    const obnizid: any = prompt(\"Please enter obniz id\", filled);\r\n    if (obnizid) {\r\n      callback(obnizid);\r\n    }\r\n  }\r\n\r\n  static get version() {\r\n\r\n    return packageJson.version;\r\n  }\r\n\r\n  public wsOnOpen() {\r\n    this.print_debug(\"ws connected\");\r\n    this._connectionRetryCount = 0;\r\n    // wait for {ws:{ready:true}} object\r\n    if (typeof this.onopen === \"function\") {\r\n      this.onopen(this);\r\n    }\r\n  }\r\n\r\n  public wsOnMessage(data: any) {\r\n    let json: any;\r\n    if (typeof data === \"string\") {\r\n      json = JSON.parse(data);\r\n    } else if (this.wscommands) {\r\n      if (this.debugprintBinary) {\r\n        console.log(\"Obniz: binalized: \" + new Uint8Array(data).toString());\r\n      }\r\n      json = this.binary2Json(data);\r\n    }\r\n\r\n    if (Array.isArray(json)) {\r\n      for (const i in json) {\r\n        this.notifyToModule(json[i]);\r\n      }\r\n    } else {\r\n      // invalid json\r\n    }\r\n  }\r\n\r\n  public wsOnClose(event: any) {\r\n    this.print_debug(\"closed\");\r\n    this.close();\r\n    this.emitter.emit(\"closed\");\r\n    if (typeof this.onclose === \"function\" && this.onConnectCalled === true) {\r\n      this.onclose(this);\r\n    }\r\n    this.onConnectCalled = false;\r\n\r\n    this._reconnect();\r\n  }\r\n\r\n  public connectWait(option: any) {\r\n    option = option || {};\r\n    const timeout: any = option.timeout || null;\r\n\r\n    return new Promise((resolve: any, reject: any) => {\r\n      if (this.onConnectCalled) {\r\n        resolve(true);\r\n        return;\r\n      }\r\n      this.emitter.once(\"connected\", () => {\r\n        resolve(true);\r\n      });\r\n      if (!this.options.auto_connect) {\r\n        this.emitter.once(\"closed\", () => {\r\n          resolve(false);\r\n        });\r\n      }\r\n      if (timeout) {\r\n        setTimeout(() => {\r\n          resolve(false);\r\n        }, timeout * 1000);\r\n      }\r\n      this.connect();\r\n    });\r\n  }\r\n\r\n  public _reconnect() {\r\n    this._connectionRetryCount++;\r\n    let tryAfter: any = 1000;\r\n    if (this._connectionRetryCount > 15) {\r\n      tryAfter = (this._connectionRetryCount - 15) * 1000;\r\n      const Limit: any = isNode ? 60 * 1000 : 10 * 1000;\r\n      if (tryAfter > Limit) {\r\n        tryAfter = Limit;\r\n      }\r\n    }\r\n    if (this.options.auto_connect) {\r\n      setTimeout(() => {\r\n        this.wsconnect(); // always connect to mainserver if ws lost\r\n      }, tryAfter);\r\n    }\r\n  }\r\n\r\n  public wsOnError(event: any) {\r\n    // console.error(event);\r\n  }\r\n\r\n  public wsOnUnexpectedResponse(req: any, res?: any) {\r\n    if (res && res.statusCode === 404) {\r\n      this.print_debug(\"obniz not online\");\r\n    } else {\r\n      this.print_debug(\"invalid server response \" + res ? res.statusCode : \"\");\r\n    }\r\n\r\n    this.clearSocket(this.socket);\r\n    delete this.socket;\r\n\r\n    this._reconnect();\r\n  }\r\n\r\n  public wsconnect(desired_server?: any) {\r\n    let server: any = this.options.obniz_server;\r\n    if (desired_server) {\r\n      server = \"\" + desired_server;\r\n    }\r\n\r\n    if (this.socket && this.socket.readyState <= 1) {\r\n      this.close();\r\n    }\r\n\r\n    let url: any = server + \"/obniz/\" + this.id + \"/ws/1\";\r\n\r\n    const query: any = [];\r\n    if ((this.constructor as typeof ObnizConnection).version) {\r\n      query.push(\"obnizjs=\" + (this.constructor as typeof ObnizConnection).version);\r\n    }\r\n    if (this.options.access_token) {\r\n      query.push(\"access_token=\" + this.options.access_token);\r\n    }\r\n    if (this.wscommand) {\r\n      query.push(\"accept_binary=true\");\r\n    }\r\n    if (query.length > 0) {\r\n      url += \"?\" + query.join(\"&\");\r\n    }\r\n    this.print_debug(\"connecting to \" + url);\r\n\r\n    let socket: any;\r\n    if (this.isNode) {\r\n\r\n      socket = new wsClient(url);\r\n      socket.on(\"open\", this.wsOnOpen.bind(this));\r\n      socket.on(\"message\", this.wsOnMessage.bind(this));\r\n      socket.on(\"close\", this.wsOnClose.bind(this));\r\n      socket.on(\"error\", this.wsOnError.bind(this));\r\n      socket.on(\"unexpected-response\", this.wsOnUnexpectedResponse.bind(this));\r\n    } else {\r\n      socket = new WebSocket(url);\r\n      socket.binaryType = \"arraybuffer\";\r\n      socket.onopen = this.wsOnOpen.bind(this);\r\n      socket.onmessage = (event: any) => {\r\n        this.wsOnMessage(event.data);\r\n      };\r\n      socket.onclose = this.wsOnClose.bind(this);\r\n      socket.onerror = this.wsOnError.bind(this);\r\n    }\r\n    this.socket = socket;\r\n\r\n    this.connectionState = \"connecting\";\r\n  }\r\n\r\n  public _connectLocal(host: any) {\r\n    const url: any = \"ws://\" + host;\r\n    this.print_debug(\"local connect to \" + url);\r\n    let ws: any;\r\n    if (this.isNode) {\r\n      ws = new wsClient(url);\r\n      ws.on(\"open\", () => {\r\n        this.print_debug(\"connected to \" + url);\r\n        this._callOnConnect();\r\n      });\r\n      ws.on(\"message\", (data: any) => {\r\n        this.print_debug(\"recvd via local\");\r\n        this.wsOnMessage(data);\r\n      });\r\n      ws.on(\"close\", (event: any) => {\r\n        console.log(\"local websocket closed\");\r\n        this._disconnectLocal();\r\n      });\r\n      ws.on(\"error\", (err: any) => {\r\n        console.error(\"local websocket error.\", err);\r\n        this._disconnectLocal();\r\n      });\r\n      ws.on(\"unexpected-response\", (event: any) => {\r\n        console.log(\"local websocket closed\");\r\n        this._disconnectLocal();\r\n      });\r\n    } else {\r\n      ws = new WebSocket(url);\r\n      ws.binaryType = \"arraybuffer\";\r\n      ws.onopen = () => {\r\n        this.print_debug(\"connected to \" + url);\r\n        this._callOnConnect();\r\n      };\r\n      ws.onmessage = (event: any) => {\r\n        this.print_debug(\"recvd via local\");\r\n        this.wsOnMessage(event.data);\r\n      };\r\n      ws.onclose = (event: any) => {\r\n        console.log(\"local websocket closed\");\r\n        this._disconnectLocal();\r\n      };\r\n      ws.onerror = (err: any) => {\r\n        console.log(\"local websocket error.\", err);\r\n        this._disconnectLocal();\r\n      };\r\n    }\r\n    this.socket_local = ws;\r\n  }\r\n\r\n  public _disconnectLocal() {\r\n    if (this.socket_local) {\r\n      if (this.socket.readyState <= 1) {\r\n        this.socket_local.close();\r\n      }\r\n      this.clearSocket(this.socket_local);\r\n      delete this.socket_local;\r\n    }\r\n    if (this._waitForLocalConnectReadyTimer) {\r\n      clearTimeout(this._waitForLocalConnectReadyTimer);\r\n      this._waitForLocalConnectReadyTimer = null;\r\n      this._callOnConnect(); /* should call. onlyl local connect was lost. and waiting. */\r\n    }\r\n  }\r\n\r\n  public clearSocket(socket: any) {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n    /* send queue */\r\n    if (this._sendQueueTimer) {\r\n      delete this._sendQueue;\r\n      clearTimeout(this._sendQueueTimer);\r\n      this._sendQueueTimer = null;\r\n    }\r\n    /* unbind */\r\n    if (this.isNode) {\r\n      const shouldRemoveObservers: any = [\r\n        \"open\",\r\n        \"message\",\r\n        \"close\",\r\n        \"error\",\r\n        \"unexpected-response\",\r\n      ];\r\n      for (let i = 0; i < shouldRemoveObservers.length; i++) {\r\n        socket.removeAllListeners(shouldRemoveObservers[i]);\r\n      }\r\n    } else {\r\n      socket.onopen = null;\r\n      socket.onmessage = null;\r\n      socket.onclose = null;\r\n      socket.onerror = null;\r\n    }\r\n  }\r\n\r\n  public connect() {\r\n    if (this.socket && this.socket.readyState <= 1) {\r\n      return;\r\n    }\r\n    this.wsconnect();\r\n  }\r\n\r\n  public close() {\r\n    this._drainQueued();\r\n    this._disconnectLocal();\r\n    if (this.socket) {\r\n      if (this.socket.readyState <= 1) {\r\n        // Connecting & Connected\r\n        this.connectionState = \"closing\";\r\n        this.socket.close(1000, \"close\");\r\n      }\r\n      this.clearSocket(this.socket);\r\n      delete this.socket;\r\n    }\r\n    this.connectionState = \"closed\";\r\n  }\r\n\r\n  public _callOnConnect() {\r\n    let canChangeToConnected: any = true;\r\n    if (this._waitForLocalConnectReadyTimer) {\r\n      /* obniz.js can't wait for local_connect any more! */\r\n      clearTimeout(this._waitForLocalConnectReadyTimer);\r\n      this._waitForLocalConnectReadyTimer = null;\r\n    } else {\r\n      /* obniz.js has to wait for local_connect establish */\r\n      if (this.socket_local && this.socket_local.readyState === 1) {\r\n        /* delayed connect */\r\n        canChangeToConnected = false;\r\n      } else {\r\n        /* local_connect is not used */\r\n      }\r\n    }\r\n\r\n    this.emitter.emit(\"connected\");\r\n\r\n    if (canChangeToConnected) {\r\n      this.connectionState = \"connected\";\r\n      if (typeof this.onconnect === \"function\") {\r\n        const promise: any = this.onconnect(this);\r\n        if (promise instanceof Promise) {\r\n          promise.catch((err: any) => {\r\n            console.error(err);\r\n          });\r\n        }\r\n      }\r\n      this.onConnectCalled = true;\r\n    }\r\n  }\r\n\r\n  public print_debug(str: any) {\r\n    if (this.debugprint) {\r\n      console.log(\"Obniz: \" + str);\r\n    }\r\n  }\r\n\r\n  public send(obj: any, options?: any) {\r\n    try {\r\n      if (!obj || typeof obj !== \"object\") {\r\n        console.log(\"obnizjs. didnt send \", obj);\r\n        return;\r\n      }\r\n      if (Array.isArray(obj)) {\r\n        for (let i = 0; i < obj.length; i++) {\r\n          this.send(obj[i]);\r\n        }\r\n        return;\r\n      }\r\n      if (this.sendPool) {\r\n        this.sendPool.push(obj);\r\n        return;\r\n      }\r\n\r\n      let sendData: any = JSON.stringify([obj]);\r\n      if (this.debugprint) {\r\n        this.print_debug(\"send: \" + sendData);\r\n      }\r\n\r\n      /* compress */\r\n      if (\r\n        this.wscommand &&\r\n        (typeof options !== \"object\" || options.local_connect !== false)\r\n      ) {\r\n        let compressed: any;\r\n        try {\r\n          compressed = this.wscommand.compress(\r\n            this.wscommands,\r\n            JSON.parse(sendData)[0],\r\n          );\r\n          if (compressed) {\r\n            sendData = compressed;\r\n            if (this.debugprintBinary) {\r\n              console.log(\r\n                \"Obniz: binalized: \" + new Uint8Array(compressed).toString(),\r\n              );\r\n            }\r\n          }\r\n        } catch (e) {\r\n          this.error(\"------ errored json -------\");\r\n          this.error(sendData);\r\n          throw e;\r\n        }\r\n      }\r\n\r\n      /* queue sending */\r\n      if (typeof sendData === \"string\") {\r\n        this._drainQueued();\r\n        this._sendRouted(sendData);\r\n      } else {\r\n        if (this._sendQueue) {\r\n          this._sendQueue.push(sendData);\r\n        } else {\r\n          this._sendQueue = [sendData];\r\n          this._sendQueueTimer = setTimeout(this._drainQueued.bind(this), 0);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  public _sendRouted(data: any) {\r\n    if (\r\n      this.socket_local &&\r\n      this.socket_local.readyState === 1 &&\r\n      typeof data !== \"string\"\r\n    ) {\r\n      this.print_debug(\"send via local\");\r\n      this.socket_local.send(data);\r\n      if (this.socket_local.bufferedAmount > this.bufferdAmoundWarnBytes) {\r\n        this.warning(\r\n          \"over \" + this.socket_local.bufferedAmount + \" bytes queued\",\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.socket && this.socket.readyState === 1) {\r\n      this.socket.send(data);\r\n      if (this.socket.bufferedAmount > this.bufferdAmoundWarnBytes) {\r\n        this.warning(\"over \" + this.socket.bufferedAmount + \" bytes queued\");\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  public _drainQueued() {\r\n    if (!this._sendQueue) {\r\n      return;\r\n    }\r\n    let expectSize: any = 0;\r\n    for (let i = 0; i < this._sendQueue.length; i++) {\r\n      expectSize += this._sendQueue[i].length;\r\n    }\r\n    let filled: any = 0;\r\n    const sendData: any = new Uint8Array(expectSize);\r\n    for (let i = 0; i < this._sendQueue.length; i++) {\r\n      sendData.set(this._sendQueue[i], filled);\r\n      filled += this._sendQueue[i].length;\r\n    }\r\n    this._sendRouted(sendData);\r\n    delete this._sendQueue;\r\n    clearTimeout(this._sendQueueTimer);\r\n    this._sendQueueTimer = null;\r\n  }\r\n\r\n  public notifyToModule(obj: any) {\r\n    if (this.debugprint) {\r\n      this.print_debug(JSON.stringify(obj));\r\n    }\r\n\r\n    if (obj.ws) {\r\n      this.handleWSCommand(obj.ws);\r\n      return;\r\n    }\r\n    if (obj.system) {\r\n      this.handleSystemCommand(obj.system);\r\n      return;\r\n    }\r\n  }\r\n\r\n  public _canConnectToInsecure() {\r\n    if (this.isNode) {\r\n      return true;\r\n    } else {\r\n      return location.protocol !== \"https:\";\r\n    }\r\n  }\r\n\r\n  public handleWSCommand(wsObj: any) {\r\n    if (wsObj.ready) {\r\n      this.firmware_ver = wsObj.obniz.firmware;\r\n      this.hw = wsObj.obniz.hw;\r\n      if (!this.hw) {\r\n        this.hw = \"obnizb1\";\r\n      }\r\n      if (this.wscommands) {\r\n        for (let i = 0; i < this.wscommands.length; i++) {\r\n          const command: any = this.wscommands[i];\r\n          command.setHw({\r\n            hw: this.hw, // hard coding\r\n            firmware: this.firmware_ver,\r\n          });\r\n        }\r\n      }\r\n      if (this.options.reset_obniz_on_ws_disconnection) {\r\n        (this as any).resetOnDisconnect(true);\r\n      }\r\n      if (\r\n        wsObj.local_connect &&\r\n        wsObj.local_connect.ip &&\r\n        this.wscommand &&\r\n        this.options.local_connect &&\r\n        this._canConnectToInsecure()\r\n      ) {\r\n        this._connectLocal(wsObj.local_connect.ip);\r\n        this._waitForLocalConnectReadyTimer = setTimeout(() => {\r\n          this._callOnConnect();\r\n        }, 3000);\r\n      } else {\r\n        this._callOnConnect();\r\n      }\r\n    }\r\n    if (wsObj.redirect) {\r\n      const server: any = wsObj.redirect;\r\n      this.print_debug(\"WS connection changed to \" + server);\r\n\r\n      /* close current ws immidiately */\r\n      /*  */\r\n      this.socket.close(1000, \"close\");\r\n      this.clearSocket(this.socket);\r\n      delete this.socket;\r\n\r\n      /* connect to new server */\r\n      this.wsconnect(server);\r\n    }\r\n  }\r\n\r\n  public handleSystemCommand(wsObj: any) {\r\n  }\r\n\r\n  static get WSCommand() {\r\n    return WSCommand;\r\n  }\r\n\r\n  public binary2Json(binary: any) {\r\n    let data: any = new Uint8Array(binary);\r\n    const json: any = [];\r\n    while (data !== null) {\r\n      const frame: any = WSCommand.dequeueOne(data);\r\n      if (!frame) {\r\n        break;\r\n      }\r\n      const obj: any = {};\r\n      for (let i = 0; i < this.wscommands.length; i++) {\r\n        const command: any = this.wscommands[i];\r\n        if (command.module === frame.module) {\r\n          command.notifyFromBinary(obj, frame.func, frame.payload);\r\n          break;\r\n        }\r\n      }\r\n      json.push(obj);\r\n      data = frame.next;\r\n    }\r\n    return json;\r\n  }\r\n\r\n  public warning(msg: any) {\r\n    console.log(\"warning:\" + msg);\r\n  }\r\n\r\n  public error(msg: any) {\r\n    console.error(\"error:\" + msg);\r\n  }\r\n}\r\n"]}