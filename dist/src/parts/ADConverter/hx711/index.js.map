{"version":3,"sources":["../src/parts/ADConverter/hx711/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface Hx711Options {\r\n  vcc?: number;\r\n  gnd?: number;\r\n  sck: number;\r\n  dout: number;\r\n}\r\n\r\nexport default class Hx711 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"hx711\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public _offset: any;\r\n  public _scale: any;\r\n  public obniz!: Obniz;\r\n  public spi!: PeripheralSPI;\r\n  public params: any;\r\n  public sck!: PeripheralIO;\r\n  public dout!: PeripheralIO;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"sck\", \"dout\"];\r\n    this.requiredKeys = [\"sck\", \"dout\"];\r\n    this._offset = 0;\r\n    this._scale = 1;\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    this.spi = obniz.getFreeSpi();\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    const ioKeys: any = [\"clk\", \"dout\"];\r\n    for (const key of ioKeys) {\r\n      if (this.params[key] && !this.obniz.isValidIO(this.params[key])) {\r\n        throw new Error(\"spi start param '\" + key + \"' are to be valid io no\");\r\n      }\r\n    }\r\n    this.sck = obniz.getIO(this.params.sck);\r\n    this.dout = obniz.getIO(this.params.dout);\r\n\r\n    this.sck.output(true);\r\n    obniz.wait(500);\r\n  }\r\n\r\n  public async readWait() {\r\n    this.sck.output(false);\r\n\r\n    while (true) {\r\n      const val: any = await this.dout.inputWait();\r\n      if (val === false) {\r\n        break;\r\n      }\r\n    }\r\n    this.spi.start({\r\n      mode: \"master\",\r\n      mosi: this.params.sck,\r\n      miso: this.params.dout,\r\n      frequency: 500 * 1000,\r\n    });\r\n\r\n    const ret_double: any = await this.spi.writeWait([\r\n      0xaa,\r\n      0xaa,\r\n      0xaa,\r\n      0xaa,\r\n      0xaa,\r\n      0xaa,\r\n      0x80,\r\n    ]);\r\n    this.spi.end(true);\r\n    this.sck.output(false);\r\n    const ret: any = [\r\n      this.doubleBit2singleBit(ret_double[0], ret_double[1]),\r\n      this.doubleBit2singleBit(ret_double[2], ret_double[3]),\r\n      this.doubleBit2singleBit(ret_double[4], ret_double[5]),\r\n    ];\r\n    const flag: any = (ret[0] & 0x80) === 0 ? 1 : -1;\r\n    return flag * (((ret[0] & 0x7f) << 16) + (ret[1] << 8) + (ret[2] << 0));\r\n  }\r\n\r\n  public doubleBit2singleBit(a: number, b: number) {\r\n    return (\r\n      (this.bit(a, 7) << 7) |\r\n      (this.bit(a, 5) << 6) |\r\n      (this.bit(a, 3) << 5) |\r\n      (this.bit(a, 1) << 4) |\r\n      (this.bit(b, 7) << 3) |\r\n      (this.bit(b, 5) << 2) |\r\n      (this.bit(b, 3) << 1) |\r\n      (this.bit(b, 1) << 0)\r\n    );\r\n  }\r\n\r\n  public bit(a: number, n: number) {\r\n    return a & (1 << n) ? 1 : 0;\r\n  }\r\n\r\n  public async readAverageWait(times: any) {\r\n    const results: any = [];\r\n    for (let i = 0; i < times; i++) {\r\n      results.push(await this.readWait());\r\n    }\r\n    return (\r\n      results.reduce((prev: any, current: any, i: any) => {\r\n        return prev + current;\r\n      }, 0) / results.length\r\n    );\r\n  }\r\n\r\n  public powerDown() {\r\n    this.sck.output(true);\r\n  }\r\n\r\n  public powerUp() {\r\n    this.sck.output(false);\r\n  }\r\n\r\n  public async zeroAdjustWait(times: number | any) {\r\n    times = parseInt(times) || 1;\r\n    this._offset = await this.readAverageWait(times);\r\n  }\r\n\r\n  public async getValueWait(times: number | any): Promise<number> {\r\n    times = parseInt(times) || 1;\r\n    const val: any = await this.readAverageWait(times);\r\n    return (val - this._offset) / this._scale;\r\n  }\r\n\r\n  public setOffset(offset: any) {\r\n    if (typeof offset !== \"number\") {\r\n      throw new Error(\"offset variable is Number\");\r\n    }\r\n    this._offset = offset;\r\n  }\r\n\r\n  public setScale(scale: any) {\r\n    if (typeof scale !== \"number\") {\r\n      throw new Error(\"scale variable is Number\");\r\n    }\r\n    this._scale = scale;\r\n  }\r\n}\r\n"]}