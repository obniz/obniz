{"version":3,"sources":["../src/parts/Wireless/XBee/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralUART from \"../../../obniz/libs/io_peripherals/uart\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface XBeeOptions {\r\n  tx: number;\r\n  rx: number;\r\n  gnd?: number;\r\n }\r\n\r\nexport interface XBeeConfig {\r\n  [key: string]: string;\r\n}\r\n\r\nexport default class XBee implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"XBee\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public displayIoNames = {tx: \"<tx\", rx: \">rx\"};\r\n  public currentCommand: any;\r\n  public commands: any;\r\n  public isAtMode: any;\r\n  public onFinishAtModeCallback: any;\r\n  public onreceive?: (data: any, text: string) => void;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private uart!: PeripheralUART;\r\n\r\n  constructor() {\r\n    this.keys = [\"tx\", \"rx\", \"gnd\"];\r\n    this.requiredKeys = [\"tx\", \"rx\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.uart = obniz.getFreeUart();\r\n    this.currentCommand = null;\r\n    this.commands = [];\r\n    this.isAtMode = false;\r\n    this.onFinishAtModeCallback = null;\r\n\r\n    if (typeof this.params.gnd === \"number\") {\r\n      obniz.getIO(this.params.gnd).output(false);\r\n    }\r\n\r\n    this.uart.start({\r\n      tx: this.params.tx,\r\n      rx: this.params.rx,\r\n      baud: 9600,\r\n      drive: \"3v\",\r\n    });\r\n\r\n    this.uart.onreceive = (data: any, text: any) => {\r\n      if (this.isAtMode) {\r\n        this.onAtResultsRecieve(data, text);\r\n      } else {\r\n        if (typeof this.onreceive === \"function\") {\r\n          this.onreceive(data, text);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  public send(data: any) {\r\n    if (this.isAtMode === false) {\r\n      this.uart.send(data);\r\n    } else {\r\n      this.obniz.error(\"XBee is AT Command mode now. Wait for finish config.\");\r\n    }\r\n  }\r\n\r\n  public onAtResultsRecieve(data: any, text: any) {\r\n    if (!this.isAtMode) {\r\n      return;\r\n    }\r\n\r\n    const next: any = () => {\r\n      this.currentCommand = null;\r\n      this.sendCommand();\r\n    };\r\n\r\n    if (text === \"OK\\r\") {\r\n      if (this.currentCommand === \"ATCN\") {\r\n        this.isAtMode = false;\r\n        this.currentCommand = null;\r\n        if (typeof this.onFinishAtModeCallback === \"function\") {\r\n          this.onFinishAtModeCallback();\r\n          this.onFinishAtModeCallback = null;\r\n        }\r\n        return;\r\n      }\r\n      next();\r\n    } else if (text === \"ERROR\\r\") {\r\n      this.obniz.error(\"XBee config error : \" + this.currentCommand);\r\n    } else {\r\n      // response of at command.\r\n      console.log(\"XBEE : no catch message\", data);\r\n      next();\r\n    }\r\n  }\r\n\r\n  public addCommand(command: any, value?: any) {\r\n    const str: any = command + (value ? \" \" + value : \"\");\r\n    this.commands.push(str);\r\n    if (this.isAtMode === true && this.currentCommand === null) {\r\n      this.sendCommand();\r\n    }\r\n  }\r\n\r\n  public sendCommand() {\r\n    if (\r\n      this.isAtMode === true &&\r\n      this.currentCommand === null &&\r\n      this.commands.length > 0\r\n    ) {\r\n      this.currentCommand = \"AT\" + this.commands.shift();\r\n      this.uart.send(this.currentCommand + \"\\r\");\r\n    }\r\n  }\r\n\r\n  public enterAtMode() {\r\n    if (this.currentCommand !== null) {\r\n      return;\r\n    }\r\n    this.isAtMode = true;\r\n    this.obniz.wait(1000);\r\n    const command: any = \"+++\";\r\n    this.currentCommand = command;\r\n    this.uart.send(this.currentCommand);\r\n    this.obniz.wait(1000);\r\n  }\r\n\r\n  public exitAtMode() {\r\n    this.addCommand(\"CN\");\r\n  }\r\n\r\n  public async configWait(config: any) {\r\n    if (this.isAtMode) {\r\n      throw new Error(\"Xbee : duplicate config setting\");\r\n    }\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const standaloneKeys: any = {\r\n          destination_address_high: \"DH\",\r\n          destination_address_low: \"DL\",\r\n          source_address: \"MY\",\r\n        };\r\n        const highLowKeys: any = [\"destination_address\"];\r\n        this.enterAtMode();\r\n        for (const key in config) {\r\n          if (key.length === 2) {\r\n            this.addCommand(key, config[key]);\r\n          } else if (standaloneKeys[key]) {\r\n            this.addCommand(standaloneKeys[key], config[key]);\r\n          } else if (highLowKeys.includes(key)) {\r\n            let high: any = config[key].slice(0, -8);\r\n            if (!high) {\r\n              high = \"0\";\r\n            }\r\n            const low: any = config[key].slice(-8);\r\n\r\n            this.addCommand(standaloneKeys[key + \"_high\"], high);\r\n            this.addCommand(standaloneKeys[key + \"_low\"], low);\r\n          }\r\n        }\r\n        this.exitAtMode();\r\n        this.onFinishAtModeCallback = () => {\r\n          resolve();\r\n        };\r\n      },\r\n    );\r\n  }\r\n}\r\n"]}