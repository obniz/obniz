{"version":3,"sources":["../src/parts/Biological/PULSE08-M5STICKC-S/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralUART from \"../../../obniz/libs/io_peripherals/uart\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface Puls08M5stickcSOptions {\r\n  vcc?: number;\r\n  gnd?: number;\r\n  rx: number;\r\n  tx: number;\r\n}\r\n\r\nexport default class Puls08M5stickcS implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"Puls08M5stickcS\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public delimiter: any;\r\n  public obniz!: Obniz;\r\n  public params: any;\r\n  public uart!: PeripheralUART;\r\n  public receivingData: any;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"tx\", \"rx\"];\r\n    this.requiredKeys = [\"tx\", \"rx\"];\r\n    this.delimiter = 0x0a;\r\n  }\r\n\r\n  public onbpmupdate(bpm: number | null) {\r\n    return;\r\n  }\r\n\r\n  public onrawupdate(values: number[]) {\r\n    return;\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n    this.uart = obniz.getFreeUart();\r\n    this.uart.start({tx: this.params.tx, rx: this.params.rx, baud: 19200});\r\n    this.receivingData = [];\r\n\r\n    this.init();\r\n\r\n    this.uart.onreceive = (data: number[], text: any) => {\r\n      const dataToCallback: any = [];\r\n      data.forEach((e: any) => {\r\n        if (e !== this.delimiter) {\r\n          this.receivingData.push(e);\r\n          return;\r\n        } else {\r\n          const row: any = this.receivingData;\r\n          if (row[0] === \"#\".charCodeAt(0)) {\r\n            row[0] = \" \".charCodeAt(0);\r\n            const str: string = this.decode(row);\r\n            const val: number = parseInt(str);\r\n            const bpm: number | null = val > 0 ? 60000 / val : null;\r\n            this.onbpmupdate(bpm);\r\n          } else {\r\n            const str: any = this.decode(row);\r\n            const val: any = parseInt(str);\r\n            dataToCallback.push(val);\r\n          }\r\n          this.receivingData = [];\r\n        }\r\n      });\r\n      if (dataToCallback.length > 0) {\r\n        this.onrawupdate(dataToCallback);\r\n      }\r\n    };\r\n  }\r\n\r\n  public decode(data: any): string {\r\n    return Buffer.from(data).toString(\"utf8\");\r\n\r\n    // if (typeof TextDecoder !== 'undefined') {\r\n    //   let enc = new TextDecoder('utf-8');\r\n    //   let arr = new Uint8Array(data);\r\n    //   return enc.decode(arr);\r\n    // } else if (typeof Buffer !== 'undefined') {\r\n    // return Buffer.from(data).toString('utf8');\r\n    // }\r\n    // throw new Error('cannot decode');\r\n  }\r\n\r\n  public init() {\r\n    this.uart.send(\"@OF30\");\r\n    this.uart.send(0x0a);\r\n    this.uart.send(\"@RG2\");\r\n    this.uart.send(0x0a);\r\n  }\r\n}\r\n"]}