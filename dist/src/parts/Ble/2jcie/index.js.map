{"version":3,"sources":["../src/parts/Ble/2jcie/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport bleRemoteCharacteristic from \"../../../obniz/libs/embeds/ble/bleRemoteCharacteristic\";\nimport bleRemotePeripheral from \"../../../obniz/libs/embeds/ble/bleRemotePeripheral\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface OMRON_2JCIEOptions {}\n\nexport interface OMRON_2JCIE_Data {\n  row_number: number;\n  temperature: number;\n  relative_humidity: number;\n  light: number;\n  uv_index: number;\n  barometric_pressure: number;\n  soud_noise: number;\n  discomfort_index: number;\n  heatstroke_risk_factor: number;\n  battery_voltage: number;\n}\n\nexport default class OMRON_2JCIE implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"2JCIE\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public periperal: bleRemotePeripheral | null;\n  public obniz!: Obniz;\n\n  constructor() {\n    this.keys = [];\n    this.requiredKeys = [];\n    this.periperal = null;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n  }\n\n  public async findWait(): Promise<any> {\n    const target: any = {\n      localName: \"Env\",\n    };\n\n    this.periperal = await this.obniz.ble!.scan.startOneWait(target);\n\n    return this.periperal;\n  }\n\n  public omron_uuid(uuid: string): string {\n    return `0C4C${uuid}-7700-46F4-AA96D5E974E32A54`;\n  }\n\n  public async connectWait(): Promise<void> {\n    if (!this.periperal) {\n      await this.findWait();\n    }\n    if (!this.periperal) {\n      throw new Error(\"2JCIE not found\");\n    }\n    if (!this.periperal.connected) {\n      await this.periperal.connectWait();\n    }\n  }\n\n  public async disconnectWait() {\n    if (this.periperal && this.periperal.connected) {\n      this.periperal.disconnectWait();\n    }\n  }\n\n  public signedNumberFromBinary(data: number[]) {\n    // little adian\n    let val: number = data[data.length - 1] & 0x7f;\n    for (let i = data.length - 2; i >= 0; i--) {\n      val = val * 256 + data[i];\n    }\n    if ((data[data.length - 1] & 0x80) !== 0) {\n      val = val - Math.pow(2, data.length * 8 - 1);\n    }\n    return val;\n  }\n\n  public unsignedNumberFromBinary(data: number[]) {\n    // little adian\n    let val: number = data[data.length - 1];\n    for (let i = data.length - 2; i >= 0; i--) {\n      val = val * 256 + data[i];\n    }\n    return val;\n  }\n\n  public async getLatestData(): Promise<OMRON_2JCIE_Data> {\n    await this.connectWait();\n\n    const c: bleRemoteCharacteristic = this.periperal!\n      .getService(this.omron_uuid(\"3000\"))\n      .getCharacteristic(this.omron_uuid(\"3001\"));\n    const data: number[] = await c.readWait();\n    const json: any = {\n      row_number: data[0],\n      temperature: this.signedNumberFromBinary(data.slice(1, 3)) * 0.01,\n      relative_humidity: this.signedNumberFromBinary(data.slice(3, 5)) * 0.01,\n      light: this.signedNumberFromBinary(data.slice(5, 7)) * 1,\n      uv_index: this.signedNumberFromBinary(data.slice(7, 9)) * 0.01,\n      barometric_pressure: this.signedNumberFromBinary(data.slice(9, 11)) * 0.1,\n      soud_noise: this.signedNumberFromBinary(data.slice(11, 13)) * 0.01,\n      discomfort_index: this.signedNumberFromBinary(data.slice(13, 15)) * 0.01,\n      heatstroke_risk_factor:\n        this.signedNumberFromBinary(data.slice(15, 17)) * 0.01,\n      battery_voltage:\n        this.unsignedNumberFromBinary(data.slice(17, 19)) * 0.001,\n    };\n\n    return json;\n  }\n}\n"]}