{"version":3,"sources":["../src/parts/Moving/ServoMotor/index.ts"],"names":[],"mappings":";;AAYA,MAAqB,UAAU;IAuB7B;QAXO,UAAK,GAAG;YACb,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT,CAAC;QASA,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAxBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,YAAY;SACnB,CAAC;IACJ,CAAC;IAsBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC5C;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACrC,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,mBAAmB;IAEZ,KAAK,CAAC,KAAa;QACxB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAC3B,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IAEM,EAAE;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC;IAEM,GAAG;QACR,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3B;IACH,CAAC;CACF;AArED,6BAqEC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface ServoMotorOptions {\r\n  vcc?: number;\r\n  gnd?: number;\r\n  signal?: number;\r\n  pwm?: PeripheralPWM;\r\n}\r\n\r\nexport default class ServoMotor implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"ServoMotor\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public range = {\r\n    min: 0.5,\r\n    max: 2.4,\r\n  };\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private pwm!: PeripheralPWM;\r\n  private pwm_io_num?: number;\r\n  private io_vcc: any;\r\n\r\n  constructor() {\r\n    this.keys = [\"gnd\", \"vcc\", \"signal\", \"pwm\"];\r\n    this.requiredKeys = [];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n    if (obniz.isValidIO(this.params.vcc)) {\r\n      this.io_vcc = obniz.getIO(this.params.vcc);\r\n    }\r\n\r\n    if (this.params.pwm) {\r\n      this.pwm = this.params.pwm;\r\n    } else {\r\n      this.pwm = obniz.getFreePwm();\r\n      this.pwm_io_num = this.params.signal;\r\n      if (typeof this.pwm_io_num !== \"number\") {\r\n        throw new Error(`no io specified for pwm`);\r\n      }\r\n      this.pwm.start({io: this.pwm_io_num});\r\n    }\r\n    this.pwm.freq(50);\r\n  }\r\n\r\n  // Module functions\r\n\r\n  public angle(ratio: number) {\r\n    const max = this.range.max;\r\n    const min = this.range.min;\r\n    const val = ((max - min) * ratio) / 180.0 + min;\r\n    this.pwm.pulse(val);\r\n  }\r\n\r\n  public on() {\r\n    if (this.io_vcc) {\r\n      this.io_vcc.output(true);\r\n    }\r\n  }\r\n\r\n  public off() {\r\n    if (this.io_vcc) {\r\n      this.io_vcc.output(false);\r\n    }\r\n  }\r\n}\r\n"]}