{"version":3,"sources":["../src/parts/Moving/Solenoid/index.ts"],"names":[],"mappings":";;AAUA,MAAqB,QAAQ;IAiB3B;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAlBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,UAAU;SACjB,CAAC;IACJ,CAAC;IAgBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,EAAE;QACP,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,SAAkB;QAC7B,IAAI,CAAC,EAAE,EAAE,CAAC;QACV,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,SAAS,GAAG,GAAG,CAAC;SACjB;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,CAAC;IAEM,WAAW,CAAC,SAAkB;QACnC,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,SAAS,GAAG,GAAG,CAAC;SACjB;QACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxB,CAAC;CACF;AA3DD,2BA2DC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface SolenoidOptions {\n  signal: number;\n  gnd?: number;\n}\n\nexport default class Solenoid implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Solenoid\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n\n  private io_gnd?: PeripheralIO;\n  private io_signal!: PeripheralIO;\n\n  constructor() {\n    this.keys = [\"gnd\", \"signal\"];\n    this.requiredKeys = [\"signal\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    if (obniz.isValidIO(this.params.gnd)) {\n      this.io_gnd = obniz.getIO(this.params.gnd);\n      this.io_gnd.output(false);\n    }\n\n    this.io_signal = obniz.getIO(this.params.signal);\n    this.io_signal.output(false);\n  }\n\n  public on() {\n    this.io_signal.output(true);\n  }\n\n  public off() {\n    this.io_signal.output(false);\n  }\n\n  public click(time_msec?: number) {\n    this.on();\n    if (typeof time_msec !== \"number\") {\n      time_msec = 100;\n    }\n    this.obniz.wait(time_msec);\n    this.off();\n  }\n\n  public doubleClick(time_msec?: number) {\n    if (typeof time_msec !== \"number\") {\n      time_msec = 100;\n    }\n    this.click(time_msec);\n    this.obniz.wait(time_msec);\n    this.click(time_msec);\n  }\n}\n"]}