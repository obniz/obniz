{"version":3,"sources":["../src/parts/Moving/DCMotor/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface DCMotorOptions {\r\n  forward: number;\r\n  back: number;\r\n}\r\n\r\nexport default class DCMotor implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"DCMotor\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public status: any;\r\n  public pwm1_io_num: any;\r\n  public params: any;\r\n  public pwm2_io_num: any;\r\n\r\n  public pwm1!: PeripheralPWM;\r\n  public pwm2!: PeripheralPWM;\r\n\r\n  constructor() {\r\n    this.keys = [\"forward\", \"back\"];\r\n    this.requiredKeys = [\"forward\", \"back\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.status = {\r\n      direction: null,\r\n      power: null,\r\n    };\r\n\r\n    this.pwm1_io_num = this.params.forward;\r\n    this.pwm2_io_num = this.params.back;\r\n\r\n    this.pwm1 = obniz.getFreePwm();\r\n    this.pwm1.start({io: this.pwm1_io_num});\r\n    this.pwm1.freq(100000);\r\n    this.pwm2 = obniz.getFreePwm();\r\n    this.pwm2.start({io: this.pwm2_io_num});\r\n    this.pwm2.freq(100000);\r\n    this.power(30);\r\n  }\r\n\r\n  // Module functions\r\n\r\n  public forward() {\r\n    this.move(true);\r\n  }\r\n\r\n  public reverse() {\r\n    this.move(false);\r\n  }\r\n\r\n  public stop() {\r\n    if (this.status.direction === null) {\r\n      return;\r\n    }\r\n    this.status.direction = null;\r\n    this.pwm1.duty(0);\r\n    this.pwm2.duty(0);\r\n  }\r\n\r\n  public move(forward: any) {\r\n    if (forward) {\r\n      if (this.status.direction === true) {\r\n        return;\r\n      }\r\n      this.status.direction = true;\r\n    } else {\r\n      if (this.status.direction === false) {\r\n        return;\r\n      }\r\n      this.status.direction = false;\r\n    }\r\n    const power: any = this.power();\r\n    this.power(0);\r\n    this.power(power);\r\n  }\r\n\r\n  public power(power?: any) {\r\n    if (power === undefined) {\r\n      return this.status.power;\r\n    }\r\n    this.status.power = power;\r\n    if (this.status.direction === null) {\r\n      this.pwm1.duty(0);\r\n      this.pwm2.duty(0);\r\n      return;\r\n    }\r\n    if (this.status.direction) {\r\n      this.pwm1.duty(power);\r\n      this.pwm2.duty(0);\r\n    } else {\r\n      this.pwm1.duty(0);\r\n      this.pwm2.duty(power);\r\n    }\r\n  }\r\n}\r\n"]}