{"version":3,"sources":["../src/parts/Moving/DCMotor/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface DCMotorOptions {\n  forward: number;\n  back: number;\n}\n\nexport default class DCMotor implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"DCMotor\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public status: any;\n  public pwm1_io_num: any;\n  public params: any;\n  public pwm2_io_num: any;\n\n  public pwm1!: PeripheralPWM;\n  public pwm2!: PeripheralPWM;\n\n  constructor() {\n    this.keys = [\"forward\", \"back\"];\n    this.requiredKeys = [\"forward\", \"back\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.status = {\n      direction: null,\n      power: null,\n    };\n\n    this.pwm1_io_num = this.params.forward;\n    this.pwm2_io_num = this.params.back;\n\n    this.pwm1 = obniz.getFreePwm();\n    this.pwm1.start({io: this.pwm1_io_num});\n    this.pwm1.freq(100000);\n    this.pwm2 = obniz.getFreePwm();\n    this.pwm2.start({io: this.pwm2_io_num});\n    this.pwm2.freq(100000);\n    this.power(30);\n  }\n\n  // Module functions\n\n  public forward() {\n    this.move(true);\n  }\n\n  public reverse() {\n    this.move(false);\n  }\n\n  public stop() {\n    if (this.status.direction === null) {\n      return;\n    }\n    this.status.direction = null;\n    this.pwm1.duty(0);\n    this.pwm2.duty(0);\n  }\n\n  public move(forward: any) {\n    if (forward) {\n      if (this.status.direction === true) {\n        return;\n      }\n      this.status.direction = true;\n    } else {\n      if (this.status.direction === false) {\n        return;\n      }\n      this.status.direction = false;\n    }\n    const power: any = this.power();\n    this.power(0);\n    this.power(power);\n  }\n\n  public power(power?: any) {\n    if (power === undefined) {\n      return this.status.power;\n    }\n    this.status.power = power;\n    if (this.status.direction === null) {\n      this.pwm1.duty(0);\n      this.pwm2.duty(0);\n      return;\n    }\n    if (this.status.direction) {\n      this.pwm1.duty(power);\n      this.pwm2.duty(0);\n    } else {\n      this.pwm1.duty(0);\n      this.pwm2.duty(power);\n    }\n  }\n}\n"]}