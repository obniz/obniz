{"version":3,"sources":["../src/parts/Moving/DCMotor/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,aAAa,MAAM,wCAAwC,CAAC;AAEnE,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,cAAc;IAC7B,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,OAAQ,YAAW,mBAAmB;WAE3C,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IACZ,WAAW,EAAE,GAAG,CAAC;IACjB,MAAM,EAAE,GAAG,CAAC;IACZ,WAAW,EAAE,GAAG,CAAC;IAEjB,IAAI,EAAG,aAAa,CAAC;IACrB,IAAI,EAAG,aAAa,CAAC;;IAOrB,KAAK,CAAC,KAAK,EAAE,KAAK;IAoBlB,OAAO;IAIP,OAAO;IAIP,IAAI;IASJ,IAAI,CAAC,OAAO,EAAE,GAAG;IAiBjB,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG;CAkBzB","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface DCMotorOptions {\r\n  forward: number;\r\n  back: number;\r\n}\r\n\r\nexport default class DCMotor implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"DCMotor\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public status: any;\r\n  public pwm1_io_num: any;\r\n  public params: any;\r\n  public pwm2_io_num: any;\r\n\r\n  public pwm1!: PeripheralPWM;\r\n  public pwm2!: PeripheralPWM;\r\n\r\n  constructor() {\r\n    this.keys = [\"forward\", \"back\"];\r\n    this.requiredKeys = [\"forward\", \"back\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.status = {\r\n      direction: null,\r\n      power: null,\r\n    };\r\n\r\n    this.pwm1_io_num = this.params.forward;\r\n    this.pwm2_io_num = this.params.back;\r\n\r\n    this.pwm1 = obniz.getFreePwm();\r\n    this.pwm1.start({io: this.pwm1_io_num});\r\n    this.pwm1.freq(100000);\r\n    this.pwm2 = obniz.getFreePwm();\r\n    this.pwm2.start({io: this.pwm2_io_num});\r\n    this.pwm2.freq(100000);\r\n    this.power(30);\r\n  }\r\n\r\n  // Module functions\r\n\r\n  public forward() {\r\n    this.move(true);\r\n  }\r\n\r\n  public reverse() {\r\n    this.move(false);\r\n  }\r\n\r\n  public stop() {\r\n    if (this.status.direction === null) {\r\n      return;\r\n    }\r\n    this.status.direction = null;\r\n    this.pwm1.duty(0);\r\n    this.pwm2.duty(0);\r\n  }\r\n\r\n  public move(forward: any) {\r\n    if (forward) {\r\n      if (this.status.direction === true) {\r\n        return;\r\n      }\r\n      this.status.direction = true;\r\n    } else {\r\n      if (this.status.direction === false) {\r\n        return;\r\n      }\r\n      this.status.direction = false;\r\n    }\r\n    const power: any = this.power();\r\n    this.power(0);\r\n    this.power(power);\r\n  }\r\n\r\n  public power(power?: any) {\r\n    if (power === undefined) {\r\n      return this.status.power;\r\n    }\r\n    this.status.power = power;\r\n    if (this.status.direction === null) {\r\n      this.pwm1.duty(0);\r\n      this.pwm2.duty(0);\r\n      return;\r\n    }\r\n    if (this.status.direction) {\r\n      this.pwm1.duty(power);\r\n      this.pwm2.duty(0);\r\n    } else {\r\n      this.pwm1.duty(0);\r\n      this.pwm2.duty(power);\r\n    }\r\n  }\r\n}\r\n"]}