{"version":3,"sources":["../src/parts/Moving/PCA9685/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport {PWMInterface} from \"../../../obniz/libs/io_peripherals/pwm\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nclass PCA9685_PWM  implements PWMInterface {\r\n  public chip: PCA9685;\r\n  public id: number;\r\n  public value = 0;\r\n  public state: any = {};\r\n\r\n  constructor(chip: PCA9685, id: number) {\r\n    this.chip = chip;\r\n    this.id = id;\r\n  }\r\n\r\n  public freq(frequency: number) {\r\n    this.chip.freq(frequency);\r\n  }\r\n\r\n  public pulse(value: number) {\r\n    this.chip.pulse(this.id, value);\r\n  }\r\n\r\n  public duty(value: number) {\r\n    this.chip.duty(this.id, value);\r\n  }\r\n}\r\n\r\nexport interface PCA9685Options {\r\n  gnd?: number;\r\n  vcc?: number;\r\n  oe?: number;\r\n  scl?: number;\r\n  sda?: number;\r\n  i2c?: PeripheralI2C;\r\n  enabled?: boolean;\r\n  address?: number;\r\n  drive?: string;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport default class PCA9685 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"PCA9685\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n\r\n  public address: any;\r\n  public _commands: any;\r\n  public _regs: any;\r\n  public pwmNum: any;\r\n  public pwms: PCA9685_PWM[] = [];\r\n  public params: any;\r\n  public io_srclr: any;\r\n  public chip: any;\r\n  public id: any;\r\n  public value: any;\r\n  public state: any;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private io_oe?: PeripheralIO;\r\n  private i2c!: PeripheralI2C;\r\n  private _freq: number = 0;\r\n\r\n  constructor() {\r\n    /* https://www.nxp.com/docs/en/data-sheet/PCA9685.pdf */\r\n    this.keys = [\r\n      \"gnd\",\r\n      \"vcc\",\r\n      \"scl\",\r\n      \"sda\",\r\n      \"oe\",\r\n      \"i2c\",\r\n      \"enabled\",\r\n      \"address\",\r\n      \"drive\",\r\n    ];\r\n    this.requiredKeys = [];\r\n\r\n    this.address = 0x40;\r\n\r\n    this._commands = {\r\n      MODE1: 0x00,\r\n      MODE2: 0x01,\r\n      SUBADR1: 0x02,\r\n      SUBADR2: 0x03,\r\n      SUBADR3: 0x04,\r\n      PRESCALE: 0xfe,\r\n      LED0_ON_L: 0x06,\r\n      ALL_LED_ON_L: 0xfa,\r\n      bits: {\r\n        ALLCALL: 0x01,\r\n        SLEEP_ENABLE: 0x10,\r\n        AUTO_INCREMENT_ENABLED: 0x20,\r\n        RESTART: 0x80,\r\n\r\n        OUTDRV: 0x04,\r\n        INVRT: 0x10,\r\n      },\r\n    };\r\n\r\n    this._regs = new Array(1);\r\n\r\n    this.pwmNum = 16;\r\n    this.pwms = [];\r\n    this._preparePWM(this.pwmNum);\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    if (obniz.isValidIO(this.params.oe)) {\r\n      this.io_oe = obniz.getIO(this.params.oe);\r\n    }\r\n\r\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    if (typeof this.params.address === \"number\") {\r\n      this.address = this.params.address;\r\n    }\r\n\r\n    this.params.clock = this.params.clock || 400 * 1000; // for i2c\r\n    this.params.mode = this.params.mode || \"master\"; // for i2c\r\n    this.params.pull = this.params.pull || \"5v\"; // for i2c\r\n    this.i2c = obniz.getI2CWithConfig(this.params);\r\n\r\n    if (this.obniz.isValidIO(this.params.srclr)) {\r\n      this.io_srclr = this.obniz.getIO(this.params.srclr);\r\n      this.io_srclr.output(true);\r\n    }\r\n\r\n    if (typeof this.params.enabled !== \"boolean\") {\r\n      this.params.enabled = true;\r\n    }\r\n    if (this.io_oe && this.params.enabled) {\r\n      this.io_oe.output(false);\r\n    }\r\n\r\n    if (this.params.drive === \"open-drain\") {\r\n      this.i2c.write(this.address, [\r\n        this._commands.MODE2,\r\n        this._commands.bits.OUTDRV,\r\n      ]);\r\n    }\r\n\r\n    let mode1: any = this._commands.bits.AUTO_INCREMENT_ENABLED;\r\n    mode1 = mode1 & ~this._commands.bits.SLEEP_ENABLE;\r\n    this.i2c.write(this.address, [this._commands.MODE1, mode1]);\r\n    this.i2c.write(this.address, [\r\n      this._commands.MODE1,\r\n      mode1 | this._commands.bits.RESTART,\r\n    ]);\r\n\r\n    this._regs[this._commands.MODE1] = mode1;\r\n\r\n    obniz.wait(10);\r\n  }\r\n\r\n  public _preparePWM(num: any) {\r\n\r\n    for (let i = 0; i < num; i++) {\r\n      this.pwms.push(new PCA9685_PWM(this, i));\r\n    }\r\n  }\r\n\r\n  public isValidPWM(id: any) {\r\n    return typeof id === \"number\" && id >= 0 && id < this.pwmNum;\r\n  }\r\n\r\n  public getPWM(id: number): PCA9685_PWM {\r\n    if (!this.isValidPWM(id)) {\r\n      throw new Error(\"pwm \" + id + \" is not valid pwm\");\r\n    }\r\n    return this.pwms[id];\r\n  }\r\n\r\n  public freq(frequency: number) {\r\n    if (typeof frequency !== \"number\") {\r\n      return;\r\n    }\r\n    if (frequency < 24 || 1526 < frequency) {\r\n      throw new Error(\"freq must be within 24-1526 hz\");\r\n    }\r\n    if (this._freq === frequency) {\r\n      return;\r\n    }\r\n    let prescaleval: any = 25000000.0; // 25MHz\r\n    prescaleval /= 4096.0; // 12bit\r\n    prescaleval /= frequency * 0.9;\r\n    prescaleval -= 1.0;\r\n\r\n    const prescale: any = Math.floor(Math.floor(prescaleval + 0.5));\r\n    const mode1: any = this._regs[this._commands.MODE1];\r\n\r\n    this.i2c.write(this.address, [\r\n      this._commands.MODE1,\r\n      (mode1 & 0x7f) | this._commands.bits.SLEEP_ENABLE,\r\n    ]); // enter sleep\r\n    this.i2c.write(this.address, [this._commands.PRESCALE, prescale]);\r\n    this.i2c.write(this.address, [this._commands.MODE1, mode1]); // recover from sleep\r\n\r\n    this.obniz.wait(5);\r\n\r\n    // save\r\n    this._freq = frequency;\r\n    for (let i = 0; i < this.pwms.length; i++) {\r\n      this.pwms[i].state.freq = this._freq;\r\n    }\r\n  }\r\n\r\n  public pulse(index: number, pulse_width: number) {\r\n    if (typeof this._freq !== \"number\" || this._freq <= 0) {\r\n      throw new Error(\"please provide freq first.\");\r\n    }\r\n    this.duty(index, (pulse_width / 1000.0 / (1.0 / this._freq)) * 100);\r\n  }\r\n\r\n  public duty(index: number, duty: number) {\r\n    duty *= 1.0;\r\n    if (typeof this._freq !== \"number\" || this._freq <= 0) {\r\n      throw new Error(\"please provide freq first.\");\r\n    }\r\n    if (typeof duty !== \"number\") {\r\n      throw new Error(\"please provide duty in number\");\r\n    }\r\n    if (duty < 0) {\r\n      duty = 0;\r\n    }\r\n    if (duty > 100) {\r\n      duty = 100;\r\n    }\r\n    this.getPWM(index).state.duty = duty;\r\n    this.writeSingleONOFF(index, 0, (duty / 100.0) * 4095);\r\n  }\r\n\r\n  public writeSingleONOFF(index: number, on: number, off: number) {\r\n    this.i2c.write(this.address, [\r\n      this._commands.LED0_ON_L + 4 * index,\r\n      on & 0xff,\r\n      on >> 8,\r\n      off & 0xff,\r\n      off >> 8,\r\n    ]);\r\n  }\r\n\r\n  public setEnable(enable: boolean) {\r\n    if (!this.io_oe && enable === false) {\r\n      throw new Error('pin \"oe\" is not specified');\r\n    }\r\n    this.io_oe!.output(!enable);\r\n  }\r\n}\r\n"]}