{"version":3,"sources":["../src/parts/Light/FullColorLED/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {createSocket} from \"dgram\";\r\n\r\nimport Obniz from \"../../../obniz\";\r\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface FullColorLEDOptions {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  common: number;\r\n  commonType: string;\r\n}\r\n\r\nexport default class FullColorLED implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"FullColorLED\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n\r\n  public params: any;\r\n\r\n  public COMMON_TYPE_ANODE = 1;\r\n  public COMMON_TYPE_CATHODE = 0;\r\n  public anode_keys: any;\r\n  public cathode_keys: any;\r\n  public animationName: any;\r\n  public commontype: any;\r\n  public common: any;\r\n  public pwmR!: PeripheralPWM;\r\n  public pwmG!: PeripheralPWM;\r\n  public pwmB!: PeripheralPWM;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  constructor() {\r\n\r\n    this.anode_keys = [\"anode\", \"anode_common\", \"anodeCommon\", \"vcc\"];\r\n    this.cathode_keys = [\"cathode\", \"cathode_common\", \"cathodeCommon\", \"gnd\"];\r\n    this.animationName = \"FullColorLED-\" + Math.round(Math.random() * 1000);\r\n\r\n    this.keys = [\"r\", \"g\", \"b\", \"common\", \"commonType\"];\r\n    this.requiredKeys = [\"r\", \"g\", \"b\", \"common\", \"commonType\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    const r: number = this.params.r;\r\n    const g: number = this.params.g;\r\n    const b: number = this.params.b;\r\n    const common: number = this.params.common;\r\n    const commontype: any = this.params.commonType;\r\n\r\n    this.obniz = obniz;\r\n    if (this.anode_keys.includes(commontype)) {\r\n      this.commontype = this.COMMON_TYPE_ANODE;\r\n    } else if (this.cathode_keys.includes(commontype)) {\r\n      this.commontype = this.COMMON_TYPE_CATHODE;\r\n    } else {\r\n      this.obniz.error(\r\n        \"FullColorLED param need common type [  anode_common or cathode_common ] \",\r\n      );\r\n    }\r\n\r\n    this.common = this.obniz.getIO(common);\r\n    this.common.output(this.commontype);\r\n\r\n    this.obniz.getIO(r).output(this.commontype);\r\n    this.obniz.getIO(g).output(this.commontype);\r\n    this.obniz.getIO(b).output(this.commontype);\r\n    this.pwmR = this.obniz.getFreePwm();\r\n    this.pwmR.start({io: r});\r\n    this.pwmR.freq(1000);\r\n    this.pwmG = this.obniz.getFreePwm();\r\n    this.pwmG.start({io: g});\r\n    this.pwmG.freq(1000);\r\n    this.pwmB = this.obniz.getFreePwm();\r\n    this.pwmB.start({io: b});\r\n    this.pwmB.freq(1000);\r\n    this.rgb(0, 0, 0);\r\n  }\r\n\r\n  public rgb(red: any, green: any, blue: any) {\r\n    red = Math.min(Math.max(parseInt(red), 0), 255);\r\n    green = Math.min(Math.max(parseInt(green), 0), 255);\r\n    blue = Math.min(Math.max(parseInt(blue), 0), 255);\r\n\r\n    if (this.commontype === this.COMMON_TYPE_ANODE) {\r\n      red = 255 - red;\r\n      green = 255 - green;\r\n      blue = 255 - blue;\r\n    }\r\n    this.pwmR.duty((red / 255) * 100);\r\n    this.pwmG.duty((green / 255) * 100);\r\n    this.pwmB.duty((blue / 255) * 100);\r\n  }\r\n\r\n  public hsv(hue: number, saturation: number, value: number) {\r\n    const C = value * saturation;\r\n    const Hp = hue / 60;\r\n    const X = C * (1 - Math.abs((Hp % 2) - 1));\r\n\r\n    let R = 0;\r\n    let G = 0;\r\n    let B = 0;\r\n    if (0 <= Hp && Hp < 1) {\r\n      [R, G, B] = [C, X, 0];\r\n    }\r\n    if (1 <= Hp && Hp < 2) {\r\n      [R, G, B] = [X, C, 0];\r\n    }\r\n    if (2 <= Hp && Hp < 3) {\r\n      [R, G, B] = [0, C, X];\r\n    }\r\n    if (3 <= Hp && Hp < 4) {\r\n      [R, G, B] = [0, X, C];\r\n    }\r\n    if (4 <= Hp && Hp < 5) {\r\n      [R, G, B] = [X, 0, C];\r\n    }\r\n    if (5 <= Hp && Hp < 6) {\r\n      [R, G, B] = [C, 0, X];\r\n    }\r\n\r\n    const m: any = value - C;\r\n    [R, G, B] = [R + m, G + m, B + m];\r\n\r\n    R = Math.floor(R * 255);\r\n    G = Math.floor(G * 255);\r\n    B = Math.floor(B * 255);\r\n\r\n    this.rgb(R, G, B);\r\n  }\r\n\r\n  public gradation(cycletime_ms: number) {\r\n    const frames: any = [];\r\n    const max = 36 / 2;\r\n    const duration = Math.round(cycletime_ms / max);\r\n    for (let i = 0; i < max; i++) {\r\n      const oneFrame = {\r\n        duration,\r\n        state: (index: number) => {\r\n          // index = 0\r\n          this.hsv(index * 10 * 2, 1, 1);\r\n        },\r\n      };\r\n      frames.push(oneFrame);\r\n    }\r\n    this.obniz.io!.animation(this.animationName, \"loop\", frames);\r\n  }\r\n\r\n  public stopgradation() {\r\n    this.obniz.io!.animation(this.animationName, \"pause\");\r\n  }\r\n}\r\n"]}