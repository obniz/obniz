{"version":3,"sources":["../src/parts/Light/LED/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface LEDOptions {\r\n  anode?: number;\r\n  cathode?: number;\r\n}\r\n\r\nexport default class LED implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"LED\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private io_anode?: PeripheralIO;\r\n  private io_cathode?: PeripheralIO;\r\n  private animationName!: string;\r\n\r\n  constructor() {\r\n    this.keys = [\"anode\", \"cathode\"];\r\n    this.requiredKeys = [\"anode\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    function getIO(io: any) {\r\n      if (io && typeof io === \"object\") {\r\n        if (typeof io.output === \"function\") {\r\n          return io;\r\n        }\r\n      }\r\n      return obniz.getIO(io);\r\n    }\r\n\r\n    this.obniz = obniz;\r\n\r\n    if (this.obniz.isValidIO(this.params.anode)) {\r\n      this.io_anode = getIO(this.params.anode);\r\n    }\r\n    if (this.obniz.isValidIO(this.params.cathode)) {\r\n      this.io_cathode = getIO(this.params.cathode);\r\n    }\r\n    this.animationName = \"Led-\" + this.params.anode;\r\n    this.off();\r\n  }\r\n\r\n  public on() {\r\n    this.endBlink();\r\n    this._on();\r\n  }\r\n\r\n  public off() {\r\n    this.endBlink();\r\n    this._off();\r\n  }\r\n\r\n  public output(value: any) {\r\n    if (value) {\r\n      this.on();\r\n    } else {\r\n      this.off();\r\n    }\r\n  }\r\n\r\n  public endBlink() {\r\n    this.obniz.io.animation(this.animationName, \"pause\");\r\n  }\r\n\r\n  public blink(interval?: number) {\r\n    if (!interval) {\r\n      interval = 100;\r\n    }\r\n    const frames = [\r\n      {\r\n        duration: interval,\r\n        state: (index: number) => {\r\n          // index = 0\r\n          this._on(); // on\r\n        },\r\n      },\r\n      {\r\n        duration: interval,\r\n        state: (index: any) => {\r\n          // index = 0\r\n          this._off();\r\n        },\r\n      },\r\n    ];\r\n\r\n    this.obniz.io.animation(this.animationName, \"loop\", frames);\r\n  }\r\n\r\n  private _on() {\r\n    if (this.io_anode && this.io_cathode) {\r\n      this.io_anode.output(true);\r\n      this.io_cathode.output(false);\r\n    } else if (this.io_anode) {\r\n      this.io_anode.output(true);\r\n    } else if (this.io_cathode) {\r\n      this.io_cathode.output(false);\r\n    }\r\n  }\r\n\r\n  private _off() {\r\n    if (this.io_anode && this.io_cathode) {\r\n      this.io_anode.output(false);\r\n      this.io_cathode.output(false);\r\n    } else if (this.io_anode) {\r\n      this.io_anode.output(false);\r\n    } else if (this.io_cathode) {\r\n      this.io_cathode.output(true);\r\n    }\r\n  }\r\n}\r\n"]}