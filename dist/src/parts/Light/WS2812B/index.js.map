{"version":3,"sources":["../src/parts/Light/WS2812B/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface WS2812BOptions {\n  din: number;\n  vcc?: number;\n  gnd?: number;\n}\n\nexport default class WS2812B implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"WS2812B\",\n    };\n  }\n\n  private static _generateFromByte(val: any) {\n    // T0H 0.35us+-0.15us\n    // T1H 0.9us+-0.15us\n    // T0L 0.9us+-0.15us\n    // T1L 0.35us+-0.15us\n\n    // 0.3-0.9 and 0.9-0.3 at 3.33Mhz\n\n    val = parseInt(val);\n    const zero: any = 0x8;\n    const one: any = 0xe;\n    const ret: any = [];\n    for (let i = 0; i < 8; i += 2) {\n      let byte: any = 0;\n      if (val & (0x80 >> i)) {\n        byte = one << 4;\n      } else {\n        byte = zero << 4;\n      }\n      if (val & (0x80 >> (i + 1))) {\n        byte |= one;\n      } else {\n        byte |= zero;\n      }\n      ret.push(byte);\n    }\n    return ret;\n  }\n\n  private static _generateColor(r: any, g: any, b: any) {\n    let array: any = WS2812B._generateFromByte(g);\n    array = array.concat(WS2812B._generateFromByte(r));\n    array = array.concat(WS2812B._generateFromByte(b));\n    return array;\n  }\n\n  private static _generateHsvColor(h: any, s: any, v: any) {\n    const C: any = v * s;\n    const Hp: any = h / 60;\n    const X: any = C * (1 - Math.abs((Hp % 2) - 1));\n\n    let R: any;\n    let G: any;\n    let B: any;\n    if (0 <= Hp && Hp < 1) {\n      [R, G, B] = [C, X, 0];\n    }\n    if (1 <= Hp && Hp < 2) {\n      [R, G, B] = [X, C, 0];\n    }\n    if (2 <= Hp && Hp < 3) {\n      [R, G, B] = [0, C, X];\n    }\n    if (3 <= Hp && Hp < 4) {\n      [R, G, B] = [0, X, C];\n    }\n    if (4 <= Hp && Hp < 5) {\n      [R, G, B] = [X, 0, C];\n    }\n    if (5 <= Hp && Hp < 6) {\n      [R, G, B] = [C, 0, X];\n    }\n\n    const m: any = v - C;\n    [R, G, B] = [R + m, G + m, B + m];\n\n    R = Math.floor(R * 255);\n    G = Math.floor(G * 255);\n    B = Math.floor(B * 255);\n\n    return WS2812B._generateColor(R, G, B);\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n\n  private spi!: PeripheralSPI;\n\n  constructor() {\n    this.keys = [\"din\", \"vcc\", \"gnd\"];\n    this.requiredKeys = [\"din\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    this.params.mode = \"master\";\n    this.params.frequency = Math.floor(3.33 * 1000 * 1000);\n    this.params.mosi = this.params.din;\n    this.params.drive = \"5v\"; // It over spec for frequency. But VIN-HI require 0.7VCC<=.\n    this.spi = this.obniz.getSpiWithConfig(this.params);\n  }\n\n  public rgb(red: number, green: number, blue: number) {\n    this.spi.write(WS2812B._generateColor(red, green, blue));\n  }\n\n  public hsv(hue: number, saturation: number, value: number) {\n    this.spi.write(WS2812B._generateHsvColor(hue, saturation, value));\n  }\n\n  public rgbs(array: Array<[number, number, number]>) {\n    let bytes: number[] = [];\n    for (let i = 0; i < array.length; i++) {\n      const oneArray = array[i];\n      bytes = bytes.concat(\n        WS2812B._generateColor(oneArray[0], oneArray[1], oneArray[2]),\n      );\n    }\n    this.spi.write(bytes);\n  }\n\n  public hsvs(array: Array<[number, number, number]>) {\n    let bytes: number[] = [];\n    for (let i = 0; i < array.length; i++) {\n      const oneArray = array[i];\n      bytes = bytes.concat(\n        WS2812B._generateHsvColor(oneArray[0], oneArray[1], oneArray[2]),\n      );\n    }\n    this.spi.write(bytes);\n  }\n\n}\n"]}