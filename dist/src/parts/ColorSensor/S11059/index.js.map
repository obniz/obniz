{"version":3,"sources":["../src/parts/ColorSensor/S11059/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAeA,MAAqB,MAAM;IAgBzB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI;SAChB,CAAC;IACJ,CAAC;IAxBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,QAAQ;SACf,CAAC;IACJ,CAAC;IAsBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAEM,IAAI,CAAC,IAAgB,EAAE,YAAgC;QAC5D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;QACjE,MAAM,GAAG,GAAW,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,yBAAyB;IACnF,CAAC;IAEY,MAAM;;YACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,KAAK,CAAC;QACf,CAAC;KAAA;CACF;AAxDD,yBAwDC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface S11059Options {\r\n  vcc?: number;\r\n  sda?: number;\r\n  scl?: number;\r\n  gnd?: number;\r\n  i2c?: any;\r\n}\r\n\r\nexport type S11059Gain = 0 | 1;\r\nexport type S11059IntergerTime = 0 | 1 | 2 | 3;\r\n\r\nexport default class S11059 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"S11059\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public address: number;\r\n  public regAdrs: {[key: string]: number};\r\n  public obniz!: Obniz;\r\n  public params: any;\r\n  public i2c!: PeripheralI2C;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"sda\", \"scl\", \"i2c\", \"gnd\"];\r\n    this.requiredKeys = [];\r\n\r\n    this.address = 0x2a;\r\n    this.regAdrs = {\r\n      ctrl: 0x00,\r\n      manualTiming: 0x01,\r\n      sensorRed: 0x03,\r\n    };\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"3v\");\r\n    this.obniz.wait(100);\r\n\r\n    this.params.clock = 100000;\r\n    this.params.pull = \"3v\";\r\n    this.params.mode = \"master\";\r\n    this.i2c = obniz.getI2CWithConfig(this.params);\r\n    this.obniz.wait(100);\r\n  }\r\n\r\n  public init(gain: S11059Gain, intergerTime: S11059IntergerTime) {\r\n    this.i2c.write(this.address, [this.regAdrs.ctrl, 0x80]); // Reset\r\n    const val: number = (gain << 3) | intergerTime;\r\n    this.i2c.write(this.address, [this.regAdrs.ctrl, val]); // Set gain,interger time\r\n  }\r\n\r\n  public async getVal() {\r\n    this.i2c.write(this.address, [this.regAdrs.sensorRed]);\r\n    const ret = await this.i2c.readWait(this.address, 8);\r\n    const level = [0, 0, 0, 0];\r\n    level[0] = (ret[0] << 8) | ret[1];\r\n    level[1] = (ret[2] << 8) | ret[3];\r\n    level[2] = (ret[4] << 8) | ret[5];\r\n    level[3] = (ret[6] << 8) | ret[7];\r\n    return level;\r\n  }\r\n}\r\n"]}