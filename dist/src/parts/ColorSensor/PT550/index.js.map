{"version":3,"sources":["../src/parts/ColorSensor/PT550/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,MAAqB,KAAK;IAcxB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAfM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,OAAO;SACd,CAAC;IACJ,CAAC;IAaM,QAAQ,CAAC,KAAa;IAE7B,CAAC;IAEM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEY,OAAO;;YAClB,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC;KAAA;CACF;AArCD,wBAqCC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface PT550Options {\r\n  signal: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class PT550 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"PT550\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public obniz!: Obniz;\r\n  public params: any;\r\n  public signal!: PeripheralAD;\r\n\r\n  constructor() {\r\n    this.keys = [\"signal\", \"vcc\", \"gnd\"];\r\n    this.requiredKeys = [\"signal\"];\r\n  }\r\n\r\n  public onchange(value: number) {\r\n\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n    this.signal = this.obniz.getAD(this.params.signal);\r\n    this.signal.start((value: any) => {\r\n      if (this.onchange) {\r\n        this.onchange(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async getWait(): Promise<number> {\r\n    return await this.signal.getWait();\r\n  }\r\n}\r\n"]}