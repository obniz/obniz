{"version":3,"sources":["../src/parts/TemperatureSensor/i2c/S-5851A/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["// sensor response not found\r\nimport Obniz from \"../../../../obniz\";\r\nimport PeripheralI2C from \"../../../../obniz/libs/io_peripherals/i2c\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface S5851AOptions {\r\n  vcc: number;\r\n  gnd: number;\r\n  sda: number;\r\n  scl: number;\r\n  addr0: number;\r\n  addr1: number;\r\n  addressmode: string;\r\n}\r\n\r\nexport default class S5851A implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"S5851A\",\r\n    };\r\n  }\r\n\r\n  public requiredKeys: string[];\r\n  public keys: string[];\r\n  public io_adr0: any;\r\n  public params: any;\r\n  public io_adr1: any;\r\n  public address: any;\r\n\r\n  protected obniz!: Obniz;\r\n  protected i2c!: PeripheralI2C;\r\n  protected i2c0!: PeripheralI2C;\r\n\r\n  constructor() {\r\n    this.requiredKeys = [\"vcc\", \"gnd\", \"adr0\", \"adr1\", \"adr_select\"];\r\n    this.keys = [\"sda\", \"scl\", \"adr0\", \"adr1\", \"adr_select\", \"i2c\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    // params: pwr, gnd, sda, scl, adr0, adr1, adr_select\r\n    this.io_adr0 = obniz.getIO(this.params.adr0);\r\n    this.io_adr1 = obniz.getIO(this.params.adr1);\r\n\r\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    switch (this.params.adr_select) {\r\n      case 8:\r\n        this.io_adr0.output(false);\r\n        this.io_adr1.output(false);\r\n        this.address = 0x48;\r\n        break;\r\n      case 9:\r\n        this.io_adr0.pull(null);\r\n        this.io_adr1.output(false);\r\n        this.address = 0x49;\r\n        break;\r\n      case \"A\":\r\n        this.io_adr0.output(true);\r\n        this.io_adr1.output(false);\r\n        this.address = 0x4a;\r\n        break;\r\n      case \"B\":\r\n        this.io_adr0.output(false);\r\n        this.io_adr1.output(true);\r\n        this.address = 0x4b;\r\n        break;\r\n      case \"C\":\r\n        this.io_adr0.pull(null);\r\n        this.io_adr1.output(true);\r\n        this.address = 0x4c;\r\n        break;\r\n      case \"D\":\r\n        this.io_adr0.output(true);\r\n        this.io_adr1.output(true);\r\n        this.address = 0x4d;\r\n        break;\r\n      case \"E\":\r\n        this.io_adr0.output(false);\r\n        this.io_adr1.pull(null);\r\n        this.address = 0x4e;\r\n        break;\r\n      case \"F\":\r\n        this.io_adr0.output(true);\r\n        this.io_adr1.pull(null);\r\n        this.address = 0x4f;\r\n        break;\r\n      default:\r\n        this.io_adr0.output(false);\r\n        this.io_adr1.output(false);\r\n        this.address = 0x48;\r\n        break;\r\n    }\r\n    console.log(\"i2c address=\" + this.address);\r\n\r\n    this.params.clock = this.params.clock || 400 * 1000; // for i2c\r\n    this.params.mode = this.params.mode || \"master\"; // for i2c\r\n    this.params.pull = this.params.pull || \"5v\"; // for i2c\r\n    this.i2c = obniz.getI2CWithConfig(this.params);\r\n    // obniz.i2c0.write(address, [0x20, 0x24]);\r\n  }\r\n\r\n  public async getTempWait(): Promise<number> {\r\n    // console.log(\"gettempwait\");\r\n    // obniz.i2c0.write(address, [0x20, 0x24]);\r\n    // obniz.i2c0.write(address, [0xE0, 0x00]);\r\n    const ret: any = await this.i2c0.readWait(this.address, 2);\r\n    // console.log('ret:' + ret);\r\n    const tempBin: any =\r\n      ret[0].toString(2) + (\"00000000\" + ret[1].toString(2)).slice(-8);\r\n    const temperature: any = -45 + 175 * (parseInt(tempBin, 2) / (65536 - 1));\r\n    return temperature;\r\n  }\r\n\r\n  public async getHumdWait(): Promise<number> {\r\n    this.i2c.write(this.address, [0x20, 0x24]);\r\n    this.i2c.write(this.address, [0xe0, 0x00]);\r\n    const ret: any = await this.i2c.readWait(this.address, 4);\r\n    const humdBin: any =\r\n      ret[2].toString(2) + (\"00000000\" + ret[3].toString(2)).slice(-8);\r\n    const humidity: any = 100 * (parseInt(humdBin, 2) / (65536 - 1));\r\n    return humidity;\r\n  }\r\n}\r\n"]}