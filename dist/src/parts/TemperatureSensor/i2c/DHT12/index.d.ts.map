{"version":3,"sources":["../src/parts/TemperatureSensor/i2c/DHT12/index.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,mBAAmB,CAAC;AAEzC,OAAO,EAAC,uBAAuB,EAAC,MAAM,mBAAmB,CAAC;AAE1D,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,uCAAuC,CAAC;AAE1F,MAAM,WAAW,YAAa,SAAQ,uBAAuB;CAAI;AAEjE,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,QAAS,YAAW,mBAAmB;WAE1D,IAAI,IAAI,cAAc;IAM7B,OAAO;;;;;IAQD,cAAc,IAAI,OAAO,CAAC;QAAC,QAAQ,EAAE,MAAM,CAAC;QAAC,WAAW,EAAE,MAAM,CAAA;KAAC,CAAC;IAmBlE,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC;IAI9B,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC;CAG5C","file":"index.d.ts","sourcesContent":["import i2cParts from \"../../../i2cParts\";\r\n\r\nimport {I2cPartsAbstructOptions} from \"../../../i2cParts\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface DHT12Options extends I2cPartsAbstructOptions { }\r\n\r\nexport default class DHT12 extends i2cParts implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"DHT12\",\r\n    };\r\n  }\r\n\r\n  public i2cInfo() {\r\n    return {\r\n      address: 0x5c,\r\n      clock: 100000,\r\n      voltage: \"3v\",\r\n    };\r\n  }\r\n\r\n  public async getAllDataWait(): Promise<{humidity: number, temperature: number}> {\r\n    const data: any = await this.readWait(0x00, 5);\r\n    const humidity: any = data[0] + data[1] * 0.1;\r\n    let temperature: any = data[2] + (data[3] & 0x7f) * 0.1;\r\n    if (data[3] & 0x80) {\r\n      temperature *= -1;\r\n    }\r\n\r\n    const checksum: any = data[0] + data[1] + data[2] + data[3];\r\n    if (checksum !== data[4]) {\r\n      throw new  Error(`checksum does not match`);\r\n    }\r\n\r\n    return {\r\n      humidity,\r\n      temperature,\r\n    };\r\n  }\r\n\r\n  public async getTempWait(): Promise<number> {\r\n    return (await this.getAllDataWait() as any).temperature;\r\n  }\r\n\r\n  public async getHumdWait(): Promise<number> {\r\n    return (await this.getAllDataWait() as any).humidity;\r\n  }\r\n}\r\n"]}