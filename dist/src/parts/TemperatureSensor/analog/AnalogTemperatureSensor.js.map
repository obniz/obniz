{"version":3,"sources":["../src/parts/TemperatureSensor/analog/AnalogTemperatureSensor.ts"],"names":[],"mappings":";;;;;;;;;;;AAWA,MAAqB,uBAAuB;IAU1C;QALO,SAAI,GAAG,CAAC,CAAC;QAMd,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAEM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,EAAE,CAAC,KAAK,CACX,CAAC,OAAY,EAAE,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAEY,OAAO;;YAClB,MAAM,OAAO,GAAQ,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;KAAA;IAEM,QAAQ,CAAC,IAAY;IAC5B,CAAC;IAEM,IAAI,CAAC,OAAY;QACtB,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAzCD,0CAyCC","file":"AnalogTemperatureSensor.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface AnalogTemperatureSensorOptions {\r\n  vcc?: number;\r\n  output: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class AnalogTemperatureSensor implements ObnizPartsInterface {\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public drive: any;\r\n  public params: any;\r\n  public temp = 0;\r\n\r\n  protected obniz!: Obniz;\r\n  protected ad!: PeripheralAD;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"output\"];\r\n    this.requiredKeys = [\"output\"];\r\n    this.drive = \"5v\";\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, this.drive);\r\n    this.ad = obniz.getAD(this.params.output);\r\n\r\n    this.ad.start(\r\n      (voltage: any) => {\r\n        this.temp = this.calc(voltage);\r\n        this.onchange(this.temp);\r\n      },\r\n    );\r\n  }\r\n\r\n  public async getWait() {\r\n    const voltage: any = await this.ad.getWait();\r\n    this.temp = this.calc(voltage);\r\n    return this.temp;\r\n  }\r\n\r\n  public onchange(temp: number) {\r\n  }\r\n\r\n  public calc(voltage: any) {\r\n    return 0;\r\n  }\r\n}\r\n"]}