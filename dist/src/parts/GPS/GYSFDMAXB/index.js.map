{"version":3,"sources":["../src/parts/GPS/GYSFDMAXB/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralUART from \"../../../obniz/libs/io_peripherals/uart\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface GYSFDMAXBOptions {\n  vcc?: number;\n  gnd?: number;\n  txd: number;\n  rxd: number;\n  Opps?: number;\n}\n\nexport interface GYSFDMAXBEditedData {\n  enable: boolean;\n  GPGGA: number;\n  GPGLL: number;\n  GPGSA: number;\n  GPGSV: any[];\n  GPRMC: number;\n  GPVTG: number;\n  GPZDA: number;\n  [key: string]: any;\n  timestamp: Date;\n}\n\nexport default class GYSFDMAXB implements ObnizPartsInterface {\n  // -------------------\n  get latitude() {\n    return this.nmea2dd(this._latitude);\n  }\n\n  get longitude() {\n    return this.nmea2dd(this._longitude);\n  }\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"GYSFDMAXB\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public ioKeys: string[];\n  public displayName = \"gps\";\n  public displayIoNames = {txd: \"txd\", rxd: \"rxd\", Opps: \"1pps\"};\n  public params: any;\n\n  public editedData: any;\n  public on1pps: (() => void) | null = null;\n  public last1pps = 0;\n  public gpsInfo: any;\n  public status: any;\n  public fixMode: any;\n  public gpsQuality: any;\n\n  protected obniz!: Obniz;\n\n  private tx!: number;\n  private rx!: number;\n  private vcc!: number;\n  private gnd!: number;\n  private Opps!: number;\n  private uart!: PeripheralUART;\n\n  private _latitude: any;\n  private _longitude: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"txd\", \"rxd\", \"gnd\", \"Opps\"];\n    this.requiredKeys = [\"txd\", \"rxd\"];\n\n    this.ioKeys = this.keys;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    this.tx = this.params.txd;\n    this.rx = this.params.rxd;\n    this.vcc = this.params.vcc;\n    this.gnd = this.params.gnd;\n    this.Opps = this.params.Opps;\n\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.uart = obniz.getFreeUart();\n    this.uart.start({\n      tx: this.params.txd,\n      rx: this.params.rxd,\n      baud: 9600,\n      drive: \"3v\",\n    });\n\n    this.editedData = {};\n    this.editedData.enable = false;\n    this.editedData.GPGSV = new Array(4);\n\n    this.on1pps = null;\n    this.last1pps = 0;\n\n    this.gpsInfo = {};\n    this.gpsInfo._sentenceType = {\n      GPGGA: 0x0001, // GGA - Global Positioning System Fix Data\n      GPGSA: 0x0002, // GSA - GNSS DOP and active satellites\n      GPGSV: 0x0004, // GSV - Satellites in view\n      GPRMC: 0x0008, // RMC - Recommended minimum specific GNSS data\n      GPVTG: 0x0010, // VTG - Track made good and ground speed\n      GPZDA: 0x0020, // ZDA - Date & Time\n    };\n    this.gpsInfo.status = \"V\";\n    this.gpsInfo.sentences = new Set(); // Set specifying sentence of MNEA from which data have been obtained\n    this.gpsInfo.satelliteInfo = {\n      satellites: [],\n      inView: 0,\n    };\n  }\n\n  public start1pps(callback: (() => void) | null) {\n    this.on1pps = callback;\n    if (callback) {\n      this.last1pps = 2;\n      this.obniz.getAD(this.Opps).start((voltage: number) => {\n        const vol: any = Math.round(voltage);\n        if (vol !== this.last1pps) {\n          this.last1pps = vol;\n          if (vol === 0 && this.on1pps) {\n            this.on1pps();\n          }\n        }\n      });\n    } else {\n      this.obniz.getAD(this.Opps).end();\n    }\n  }\n\n  public readSentence(): any {\n    let results: any = [];\n    if (this.uart.isDataExists()) {\n      const pos: any = this.uart.received.indexOf(0x0a);\n      if (pos >= 0) {\n        results = this.uart.received.slice(0, pos - 1);\n        this.uart.received.splice(0, pos + 1);\n        return this.uart.tryConvertString(results);\n      }\n    }\n    return \"\";\n  }\n\n  public getEditedData(): GYSFDMAXBEditedData {\n    let n: any;\n    let utc: any;\n    let format: any;\n    let sentence: any = this.readSentence();\n    this.editedData.enable = false;\n    this.editedData.GPGSV = new Array(4);\n    while (sentence.length > 0) {\n      const part: any = sentence.split(\",\");\n      if (sentence.slice(-4, -3) !== \",\") {\n        const st: any = part[part.length - 1].slice(0, -3);\n        part.push(part[part.length - 1].slice(-3));\n        part[part.length - 2] = st;\n      }\n      this.editedData.sentence = part.join(\",\");\n      switch (part[0]) {\n        case \"$GPGGA\":\n          this.editedData.GPGGA = part;\n          break;\n        case \"$GPGLL\":\n          this.editedData.GPGLL = part;\n          break;\n        case \"$GPGSA\":\n          this.editedData.GPGSA = part;\n          break;\n        case \"$GPGSV\":\n          n = Number(part[2]);\n          if (n > this.editedData.GPGSV.length) {\n            while (n > this.editedData.GPGSV.length) {\n              this.editedData.GPGSV.push([]);\n            }\n          }\n          this.editedData.GPGSV[n - 1] = part;\n          break;\n        case \"$GPRMC\":\n          this.editedData.GPRMC = part;\n          break;\n        case \"$GPVTG\":\n          this.editedData.GPVTG = part;\n          break;\n        case \"$GPZDA\":\n          this.editedData.GPZDA = part;\n          utc =\n            part[4] +\n            \"/\" +\n            part[3] +\n            \"/\" +\n            part[2] +\n            \" \" +\n            part[1].substring(0, 2) +\n            \":\" +\n            part[1].substring(2, 4) +\n            \":\" +\n            part[1].substring(4, 6) +\n            \" +00:00\";\n          this.editedData.timestamp = new Date(utc);\n          break;\n        default:\n          format = part[0].substr(1);\n          this.editedData[format] = part;\n      }\n\n      this.editedData.enable = true;\n      sentence = this.readSentence();\n    }\n    return this.editedData;\n  }\n\n  public getGpsInfo(editedData?: GYSFDMAXBEditedData): any {\n    const NMEA_SATINSENTENCE: any = 4;\n    const NMEA_MAXSAT: any = 12;\n    editedData = editedData || this.getEditedData();\n    this.gpsInfo.status = \"V\";\n    if (editedData.enable) {\n      if (editedData.GPGGA) {\n        const gga: any = editedData.GPGGA;\n        this.gpsInfo.gpsQuality = parseFloat(gga[6]); // Fix Quality: 0 = Invalid, 1 = GPS fix, 2 = DGPS fix\n        this.gpsInfo.hdop = parseFloat(gga[8]); // Horizontal Dilution of Precision (HDOP)\n        this.gpsInfo.altitude = parseFloat(gga[9]); // Antenna Altitude meters above mean sea level\n        const latitude: any = this.nmea2dd(parseFloat(gga[2]));\n        this.gpsInfo.latitude = gga[3] === \"N\" ? latitude : -latitude;\n        const longitude: any = this.nmea2dd(parseFloat(gga[4]));\n        this.gpsInfo.longitude = gga[5] === \"E\" ? longitude : -longitude;\n        this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPGGA);\n      }\n      if (editedData.GPGSV) {\n        for (let n = 0; n < editedData.GPGSV.length; n++) {\n          if (editedData.GPGSV[n]) {\n            const gsv: any = editedData.GPGSV[n].map((v: any) => parseFloat(v));\n            const pack_count: any = gsv[1];\n            const pack_index: any = gsv[2];\n            const sat_count: any = gsv[3];\n            if (pack_index > pack_count) {\n              continue;\n            }\n\n            this.gpsInfo.satelliteInfo.inView = sat_count;\n            let nsat: any = (pack_index - 1) * NMEA_SATINSENTENCE;\n            nsat =\n              nsat + NMEA_SATINSENTENCE > sat_count\n                ? sat_count - nsat\n                : NMEA_SATINSENTENCE;\n\n            for (let isat = 0; isat < nsat; ++isat) {\n              const isi: any = (pack_index - 1) * NMEA_SATINSENTENCE + isat;\n              if (this.gpsInfo.satelliteInfo.satellites.length <= isi) {\n                this.gpsInfo.satelliteInfo.satellites.push({});\n              }\n              const isatn: any = isat * NMEA_SATINSENTENCE;\n              this.gpsInfo.satelliteInfo.satellites[isi] = {\n                id: gsv[isatn + 4], // SV PRN number\n                elevation: gsv[isatn + 5], // Elevation in degrees, 90 maximum\n                azimuth: gsv[isatn + 6], // Azimuth, degrees from true north, 000 to 359\n                snr: gsv[isatn + 7], // SNR, 00-99 dB (null when not tracking)\n                inUse: false,\n              };\n            }\n            this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPGSV);\n          }\n        }\n      }\n      if (editedData.GPGSA) {\n        const gsa: any = editedData.GPGSA;\n        let nuse: any = 0;\n        this.gpsInfo.fixMode = parseFloat(gsa[2]); // Fix Mode: 1=Fix not available, 2=2D, 3=3D\n        this.gpsInfo.pdop = parseFloat(gsa[15]); // PDOP: Position Dilution of Precision\n        this.gpsInfo.hdop = parseFloat(gsa[16]); // HDOP: Horizontal Dilution of Precision\n        this.gpsInfo.vdop = parseFloat(gsa[17]); // VDOP: Vertical Dilution of Position\n        for (let i = 0; i < NMEA_MAXSAT; ++i) {\n          for (let j = 0; j < this.gpsInfo.satelliteInfo.inView; ++j) {\n            if (\n              this.gpsInfo.satelliteInfo.satellites[j] &&\n              gsa[i + 3] === this.gpsInfo.satelliteInfo.satellites[j].id\n            ) {\n              this.gpsInfo.satelliteInfo.satellites[j].inUse = true;\n              nuse++;\n            }\n          }\n        }\n        this.gpsInfo.satelliteInfo.inUse = nuse;\n        this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPGSA);\n      }\n      if (editedData.GPRMC) {\n        const rmc: any = editedData.GPRMC;\n        this.gpsInfo.status = rmc[2]; // Status Active or Void\n        const latitude: any = this.nmea2dd(parseFloat(rmc[3]));\n        this.gpsInfo.latitude = rmc[4] === \"N\" ? latitude : -latitude;\n        const longitude: any = this.nmea2dd(parseFloat(rmc[5]));\n        this.gpsInfo.longitude = rmc[6] === \"E\" ? longitude : -longitude;\n        const NMEA_TUD_KNOTS: any = 1.852; // 1knot=1.852km/h\n        this.gpsInfo.speed = parseFloat(rmc[7]) * NMEA_TUD_KNOTS; // unit: km/h\n        this.gpsInfo.direction = rmc[8];\n        this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPRMC);\n      }\n      if (editedData.GPVTG) {\n        const vtg: any = editedData.GPVTG;\n        this.gpsInfo.direction = parseFloat(vtg[1]);\n        this.gpsInfo.declination = parseFloat(vtg[3]);\n        this.gpsInfo.speed = parseFloat(vtg[7]);\n        this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPVTG);\n      }\n      if (editedData.GPZDA) {\n        this.gpsInfo.utc = editedData.timestamp;\n        this.gpsInfo.sentences.add(this.gpsInfo._sentenceType.GPZDA);\n      }\n    }\n    return this.gpsInfo;\n  }\n\n  public _mneaTo(format: any, value: any) {\n    let result: any = this.nmea2dd(value);\n    if (typeof format === \"string\") {\n      switch (format.toUpperCase()) {\n        case \"DMS\":\n          result = this.nmea2dms(value);\n          break;\n        case \"DM\":\n          result = this.nmea2dm(value);\n          break;\n        case \"S\":\n          result = this.nmea2s(value);\n          break;\n        default:\n      }\n    }\n    return result;\n  }\n\n  public latitudeTo(format: any) {\n    return this._mneaTo(format, this._latitude);\n  }\n\n  public longitudeTo(format: any) {\n    return this._mneaTo(format, this._longitude);\n  }\n\n  public status2string(status: any) {\n    status = status || this.status;\n    if (status === \"A\") {\n      return \"Active\";\n    }\n    if (status === \"V\") {\n      return \"Void\";\n    }\n    return status;\n  }\n\n  public fixMode2string(fixMode: any) {\n    fixMode = fixMode || this.fixMode;\n    if (fixMode === 1) {\n      return \"Fix not available\";\n    }\n    if (fixMode === 2) {\n      return \"2D\";\n    }\n    if (fixMode === 3) {\n      return \"3D\";\n    }\n    return fixMode;\n  }\n\n  public gpsQuality2string(gpsQuality: any) {\n    gpsQuality = gpsQuality || this.gpsQuality;\n    if (gpsQuality === 0) {\n      return \"Invalid\";\n    }\n    if (gpsQuality === 1) {\n      return \"GPS fix\";\n    }\n    if (gpsQuality === 2) {\n      return \"DGPS fix\";\n    }\n    return gpsQuality;\n  }\n\n  // --- latitude/longitude MNEA format change to each unit\n  public nmea2dms(val: any): string {\n    // NMEA format to DMS format string (999° 99'99.9\")\n    val = parseFloat(val);\n    const d: any = Math.floor(val / 100);\n    const m: any = Math.floor((val / 100.0 - d) * 100.0);\n    const s: any = ((val / 100.0 - d) * 100.0 - m) * 60;\n    return d + \"°\" + m + \"'\" + s.toFixed(1) + '\"';\n  }\n\n  public nmea2dm(val: any): string {\n    // NMEA format to DM format string (999° 99.9999')\n    val = parseFloat(val);\n    const d: any = Math.floor(val / 100.0);\n    const m: any = (val / 100.0 - d) * 100.0;\n    return d + \"°\" + m.toFixed(4) + \"'\";\n  }\n\n  public nmea2dd(val: any): number {\n    // NMEA format to DD format decimal (999.999999)\n    val = parseFloat(val);\n    const d: any = Math.floor(val / 100.0);\n    const m: any = Math.floor(((val / 100.0 - d) * 100.0) / 60);\n    const s: any = (((val / 100.0 - d) * 100.0 - m) * 60) / (60 * 60);\n    return parseFloat((d + m + s).toFixed(6));\n  }\n\n  public nmea2s(val: any): number {\n    // NMEA format to S format decimal (99999.9999)\n    val = parseFloat(val);\n    const d: any = Math.floor(val / 100.0);\n    const m: any = Math.floor(((val / 100.0 - d) * 100.0) / 60);\n    const s: any = (((val / 100.0 - d) * 100.0 - m) * 60) / (60 * 60);\n    return (d + m + s) / (1.0 / 60.0 / 60.0);\n  }\n}\n"]}