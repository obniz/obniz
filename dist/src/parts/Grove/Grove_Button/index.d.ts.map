{"version":3,"sources":["../src/parts/Grove/Grove_Button/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAEnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,mBAAmB;IAClC,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,YAAa,YAAW,mBAAmB;WAEhD,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,SAAS,EAAE,OAAO,GAAG,IAAI,CAAQ;IACjC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,CAAQ;IAE5D,OAAO,CAAC,MAAM,CAAgB;IAC9B,OAAO,CAAC,SAAS,CAAgB;IACjC,OAAO,CAAC,SAAS,CAAC,CAAe;;IAM1B,oBAAoB,6BAA4B;IAEhD,KAAK,CAAC,KAAK,EAAE,KAAK;IAwBZ,aAAa,IAAI,OAAO,CAAC,OAAO,CAAC;IAIvC,SAAS,CAAC,SAAS,EAAE,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;CAWpD","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface Grove_ButtonOptions {\r\n  signal: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class Grove_Button implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"Grove_Button\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public isPressed: boolean | null = null;\r\n  public onchange: ((pressed: boolean) => void) | null = null;\r\n\r\n  private io_vcc!: PeripheralIO;\r\n  private io_signal!: PeripheralIO;\r\n  private io_supply?: PeripheralIO;\r\n\r\n  constructor() {\r\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\r\n    this.requiredKeys = [\"signal\"];\r\n  }\r\n  public onChangeForStateWait = (pressed: boolean) => {};\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.io_signal = obniz.getIO(this.params.signal);\r\n\r\n    if (obniz.isValidIO(this.params.vcc)) {\r\n      this.io_vcc = obniz.getIO(this.params.vcc);\r\n      this.io_vcc.output(true);\r\n    }\r\n\r\n    if (obniz.isValidIO(this.params.gnd)) {\r\n      this.io_supply = obniz.getIO(this.params.gnd);\r\n      this.io_supply.output(false);\r\n    }\r\n\r\n    this.io_signal.pull(\"5v\");\r\n\r\n    this.io_signal.input((value: boolean) => {\r\n      this.isPressed = value;\r\n      if (this.onchange) {\r\n        this.onchange(value);\r\n      }\r\n      this.onChangeForStateWait(value);\r\n    });\r\n  }\r\n\r\n  public async isPressedWait(): Promise<boolean> {\r\n    return await this.io_signal.inputWait();\r\n  }\r\n\r\n  public stateWait(isPressed: boolean): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.onChangeForStateWait = (pressed: any) => {\r\n        if (isPressed === pressed) {\r\n          this.onChangeForStateWait = () => {\r\n          };\r\n          resolve();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n"]}