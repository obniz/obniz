{"version":3,"sources":["../src/parts/Grove/Grove_Buzzer/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAEnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,mBAAmB;IAClC,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,YAAa,YAAW,mBAAmB;WAEhD,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEnB,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IAExB,OAAO,CAAC,GAAG,CAAiB;;IAOrB,KAAK,CAAC,KAAK,EAAE,KAAK;IAOlB,IAAI,CAAC,IAAI,EAAE,MAAM;IAajB,IAAI;CAGZ","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralPWM from \"../../../obniz/libs/io_peripherals/pwm\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Grove_BuzzerOptions {\n  signal: number;\n  gnd?: number;\n  vcc?: number;\n}\n\nexport default class Grove_Buzzer implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_Buzzer\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  protected obniz!: Obniz;\n\n  private pwm!: PeripheralPWM;\n\n  constructor() {\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\n    this.requiredKeys = [\"signal\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.pwm = obniz.getFreePwm();\n    this.pwm.start({io: this.params.signal});\n  }\n\n  public play(freq: number) {\n    if (typeof freq !== \"number\") {\n      throw new Error(\"freq must be a number\");\n    }\n    freq = Math.floor(freq);\n    if (freq > 0) {\n      this.pwm.freq(freq);\n      this.pwm.pulse((1 / freq / 2) * 1000);\n    } else {\n      this.pwm.pulse(0);\n    }\n  }\n\n  public stop() {\n    this.play(0);\n  }\n}\n"]}