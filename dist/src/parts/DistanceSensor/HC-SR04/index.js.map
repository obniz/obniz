{"version":3,"sources":["../src/parts/DistanceSensor/HC-SR04/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface HCSR04Options {\n  gnd?: number;\n  echo: number;\n  trigger: number;\n  vcc: number;\n}\n\nexport type HCSR04UnitType = \"mm\" | \"inch\";\n\nexport default class HCSR04 implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"HC-SR04\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public _unit: HCSR04UnitType = \"mm\";\n  public reset_alltime = false;\n  public temp = 15;\n  public obniz!: Obniz;\n  public params: any;\n  public vccIO!: PeripheralIO;\n  public trigger!: number;\n  public echo!: number;\n\n  constructor() {\n    this.keys = [\"vcc\", \"trigger\", \"echo\", \"gnd\"];\n    this.requiredKeys = [\"vcc\", \"trigger\", \"echo\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(null, this.params.gnd, \"5v\");\n\n    this.vccIO = obniz.getIO(this.params.vcc);\n    if (obniz.isValidIO(this.params.trigger) === false) {\n      throw new Error(`trigger ${this.params.trigger} is invalid io`);\n    }\n    if (obniz.isValidIO(this.params.echo) === false) {\n      throw new Error(`echo ${this.params.echo} is invalid io`);\n    }\n    this.trigger = this.params.trigger;\n    this.echo = this.params.echo;\n\n    this.vccIO.drive(\"5v\");\n    this.vccIO.output(true);\n    this.obniz.wait(100);\n  }\n\n  public measure(callback: (distance: number) => void) {\n\n    this.obniz.measure!.echo({\n      io_pulse: this.trigger,\n      io_echo: this.echo,\n      pulse: \"positive\",\n      pulse_width: 0.011,\n      measure_edges: 3,\n      timeout: (10 / 340) * 1000,\n      callback: async (edges: any) => {\n        if (this.reset_alltime) {\n          this.vccIO.output(false);\n          this.obniz.wait(100);\n          this.vccIO.output(true);\n          this.obniz.wait(100);\n        }\n        let distance: any;\n        for (let i = 0; i < edges.length - 1; i++) {\n          // HCSR04's output of io_echo is initially high when trigger is finshed\n          if (edges[i].edge === true) {\n            const time: any = (edges[i + 1].timing - edges[i].timing) / 1000; // (1/4000 * 8) + is needed??\n            distance =\n              (time / 2) * 20.055 * Math.sqrt(this.temp + 273.15) * 1000;\n            if (this._unit === \"inch\") {\n              distance = distance * 0.0393701;\n            }\n          }\n        }\n        if (typeof callback === \"function\") {\n          callback(distance);\n        }\n      },\n    });\n  }\n\n  public async measureWait() {\n    return new Promise((resolve: any) => {\n      this.measure((distance: number) => {\n        resolve(distance);\n      });\n    });\n  }\n\n  public unit(unit: HCSR04UnitType) {\n    if (unit === \"mm\") {\n      this._unit = \"mm\";\n    } else if (unit === \"inch\") {\n      this._unit = \"inch\";\n    } else {\n      throw new Error(\"HCSR04: unknown unit \" + unit);\n    }\n  }\n}\n"]}