{"version":3,"sources":["../src/parts/Magnet/CT10/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,YAAY,MAAM,uCAAuC,CAAC;AACjE,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,WAAW;IAC1B,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,IAAK,YAAW,mBAAmB;WAExC,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,oBAAoB,EAAE,GAAG,CAAC;IAC1B,SAAS,EAAG,YAAY,CAAC;IACzB,MAAM,CAAC,EAAE,YAAY,CAAC;IACtB,SAAS,CAAC,EAAE,YAAY,CAAC;IACzB,MAAM,EAAE,OAAO,GAAG,IAAI,CAAQ;IAC9B,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,CAAQ;;IAUlD,KAAK,CAAC,KAAK,EAAE,KAAK;IAwBZ,UAAU,IAAI,OAAO,CAAC,OAAO,CAAC;IAIpC,SAAS,CAAC,MAAM,EAAE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;CAWhD","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface CT10Options {\r\n  signal: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class CT10 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"CT10\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public onChangeForStateWait: any;\r\n  public io_signal!: PeripheralIO;\r\n  public io_vcc?: PeripheralIO;\r\n  public io_supply?: PeripheralIO;\r\n  public isNear: boolean | null = null;\r\n  public onchange: ((near: boolean) => void) | null = null;\r\n\r\n  constructor() {\r\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\r\n    this.requiredKeys = [\"signal\"];\r\n\r\n    this.onChangeForStateWait = () => {\r\n    };\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.io_signal = obniz.getIO(this.params.signal);\r\n\r\n    if (obniz.isValidIO(this.params.vcc)) {\r\n      this.io_vcc = obniz.getIO(this.params.vcc);\r\n      this.io_vcc.output(true);\r\n    }\r\n\r\n    if (obniz.isValidIO(this.params.gnd)) {\r\n      this.io_supply = obniz.getIO(this.params.gnd);\r\n      this.io_supply.output(false);\r\n    }\r\n\r\n    this.io_signal.pull(\"0v\");\r\n\r\n    this.io_signal.input((value: boolean) => {\r\n      this.isNear = value;\r\n      if (this.onchange) {\r\n        this.onchange(value);\r\n      }\r\n      this.onChangeForStateWait(value);\r\n    });\r\n  }\r\n\r\n  public async isNearWait(): Promise<boolean> {\r\n    return await this.io_signal.inputWait();\r\n  }\r\n\r\n  public stateWait(isNear: boolean): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      this.onChangeForStateWait = (near: boolean) => {\r\n          if (isNear === near) {\r\n            this.onChangeForStateWait = () => {\r\n          };\r\n            resolve();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n"]}