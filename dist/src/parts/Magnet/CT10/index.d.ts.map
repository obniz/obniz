{"version":3,"sources":["../src/parts/Magnet/CT10/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,YAAY,MAAM,uCAAuC,CAAC;AACjE,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,WAAW;IAC1B,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,IAAK,YAAW,mBAAmB;WAExC,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,oBAAoB,EAAE,GAAG,CAAC;IAC1B,SAAS,EAAG,YAAY,CAAC;IACzB,MAAM,CAAC,EAAE,YAAY,CAAC;IACtB,SAAS,CAAC,EAAE,YAAY,CAAC;IACzB,MAAM,EAAE,OAAO,GAAG,IAAI,CAAQ;IAC9B,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,CAAQ;;IAUlD,KAAK,CAAC,KAAK,EAAE,KAAK;IAwBZ,UAAU,IAAI,OAAO,CAAC,OAAO,CAAC;IAIpC,SAAS,CAAC,MAAM,EAAE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;CAWhD","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface CT10Options {\n  signal: number;\n  vcc?: number;\n  gnd?: number;\n}\n\nexport default class CT10 implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"CT10\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public onChangeForStateWait: any;\n  public io_signal!: PeripheralIO;\n  public io_vcc?: PeripheralIO;\n  public io_supply?: PeripheralIO;\n  public isNear: boolean | null = null;\n  public onchange: ((near: boolean) => void) | null = null;\n\n  constructor() {\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\n    this.requiredKeys = [\"signal\"];\n\n    this.onChangeForStateWait = () => {\n    };\n  }\n\n  public wired(obniz: Obniz) {\n    this.io_signal = obniz.getIO(this.params.signal);\n\n    if (obniz.isValidIO(this.params.vcc)) {\n      this.io_vcc = obniz.getIO(this.params.vcc);\n      this.io_vcc.output(true);\n    }\n\n    if (obniz.isValidIO(this.params.gnd)) {\n      this.io_supply = obniz.getIO(this.params.gnd);\n      this.io_supply.output(false);\n    }\n\n    this.io_signal.pull(\"0v\");\n\n    this.io_signal.input((value: boolean) => {\n      this.isNear = value;\n      if (this.onchange) {\n        this.onchange(value);\n      }\n      this.onChangeForStateWait(value);\n    });\n  }\n\n  public async isNearWait(): Promise<boolean> {\n    return await this.io_signal.inputWait();\n  }\n\n  public stateWait(isNear: boolean): Promise<any> {\n    return new Promise((resolve) => {\n      this.onChangeForStateWait = (near: boolean) => {\n          if (isNear === near) {\n            this.onChangeForStateWait = () => {\n          };\n            resolve();\n        }\n      };\n    });\n  }\n}\n"]}