{"version":3,"sources":["../src/parts/MovementSensor/M5StickC_JoyStick/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAYA,MAAqB,iBAAiB;IAelC;QACI,IAAI,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAhBM,MAAM,CAAC,IAAI;QACd,OAAO;YACH,IAAI,EAAE,mBAAmB;SAC5B,CAAC;IACN,CAAC;IAcM,KAAK,CAAC,KAAY;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,kCAAkC;QACxD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACX,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG;YACpB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG;YACpB,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI;SACb,CAAC,CAAC;IACP,CAAC;IAEY,QAAQ;;YACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IAEY,QAAQ;;YACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IAEY,aAAa;;YACtB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;KAAA;CACJ;AAnDD,oCAmDC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface M5StickC_JoyStickOptions {\n    vcc?: number;\n    gnd?: number;\n    sda: number;\n    scl: number;\n}\n\nexport default class M5StickC_JoyStick implements ObnizPartsInterface {\n\n    public static info(): ObnizPartsInfo {\n        return {\n            name: \"M5StickC_JoyStick\",\n        };\n    }\n\n    public requiredKeys: string[];\n    public keys: string[];\n    public params: any;\n\n    protected obniz!: Obniz;\n    protected i2c!: PeripheralI2C;\n\n    constructor() {\n        this.requiredKeys = [\"sda\", \"scl\"];\n        this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\"];\n    }\n\n    public wired(obniz: Obniz) {\n        this.obniz = obniz;\n        this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n        this.obniz.wait(100); // wait for booting of STM32F030F4\n        this.i2c = this.obniz.getFreeI2C();\n        this.i2c.start({\n            mode: \"master\",\n            sda: this.params.sda,\n            scl: this.params.scl,\n            clock: 100000,\n            pull: \"5v\",\n        });\n    }\n\n    public async getXWait(): Promise<number> {\n        this.i2c.write(0x38, [0x02]);\n        const ret = await this.i2c.readWait(0x38, 3);\n        return ret[0];\n    }\n\n    public async getYWait(): Promise<number> {\n        this.i2c.write(0x38, [0x02]);\n        const ret = await this.i2c.readWait(0x38, 3);\n        return ret[1];\n    }\n\n    public async isPressedWait(): Promise<boolean> {\n        this.i2c.write(0x38, [0x02]);\n        const ret = await this.i2c.readWait(0x38, 3);\n        return !Boolean(ret[2]);\n    }\n}\n"]}