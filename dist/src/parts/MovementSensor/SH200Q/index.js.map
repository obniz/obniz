{"version":3,"sources":["../src/parts/MovementSensor/SH200Q/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import i2cParts, {I2cPartsAbstructOptions} from \"../../i2cParts\";\n\nimport Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface SH200QOptions extends I2cPartsAbstructOptions {\n}\n\nexport default class SH200Q extends i2cParts implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"SH200Q\",\n    };\n  }\n\n  public commands: any;\n  public writeFlagWait: any;\n  public clearFlagWait: any;\n  public write: any;\n  public char2short: any;\n\n  protected obniz!: Obniz;\n\n  private _accel_range: any;\n  private _gyro_range: any;\n\n  constructor() {\n    super();\n    this.commands = {};\n    this.commands.whoami = 0x30;\n\n    this.commands.accConfig = 0x0e;\n    this.commands.gyroConfig = 0x0f;\n    this.commands.gyroDlpf = 0x11;\n    this.commands.fifoConfig = 0x12;\n    this.commands.accRange = 0x16;\n    this.commands.gyroRange = 0x2b;\n    this.commands.outputAcc = 0x00;\n    this.commands.outputGyro = 0x06;\n    this.commands.outputTemp = 0x0c;\n    this.commands.regSet1 = 0xba;\n    this.commands.regSet2 = 0xca;\n    this.commands.adcReset = 0xc2;\n    this.commands.softReset = 0x7f;\n    this.commands.reset = 0x75;\n  }\n\n  public wired(obniz: Obniz) {\n    super.wired(obniz);\n  }\n\n  public i2cInfo() {\n    return {\n      address: 0x6c,\n      clock: 100000,\n      voltage: \"3v\",\n    };\n  }\n\n  public async whoamiWait(): Promise<number> {\n    const result = await this.readWait(this.commands.whoami, 1);\n    return result[0];\n  }\n\n  public async initWait() {\n    await this.resetAdcWait();\n\n    await this.writeFlagWait(0xd8, 7);\n    await this.obniz.wait(1);\n    await this.clearFlagWait(0xd8, 7);\n\n    await this.write(0x78, 0x61);\n    await this.obniz.wait(1);\n    await this.write(0x78, 0x00);\n\n    // set acc odr 256hz\n    await this.write(this.commands.accConfig, 0x91);\n\n    // set gyro odr 500hz\n    await this.write(this.commands.gyroConfig, 0x13);\n\n    // set gyro dlpf 50hz\n    await this.write(this.commands.gyroDlpf, 0x03);\n\n    // set no buffer mode\n    await this.write(this.commands.fifoConfig, 0x00);\n\n    this.setConfig(8, 2000);\n\n    await this.write(this.commands.regSet1, 0xc0);\n\n    // ADC Reset\n    await this.writeFlagWait(this.commands.regSet2, 4);\n    await this.obniz.wait(1);\n    await this.clearFlagWait(this.commands.regSet2, 4);\n    await this.obniz.wait(10);\n  }\n\n  public setConfig(accelerometer_range: number, gyroscope_range: number) {\n    // accel range set (0x00:2g, 0x08:4g, 0x10:8g, 0x18:16g)\n    switch (accelerometer_range) {\n      case 4:\n        this.write(this.commands.accRange, 0x00);\n        break;\n      case 8:\n        this.write(this.commands.accRange, 0x01);\n        break;\n      case 16:\n        this.write(this.commands.accRange, 0x10);\n        break;\n      default:\n        throw new Error(\"accel_range variable 4,8,16 setting\");\n    }\n    // gyro range & LPF set (0x00:250, 0x08:500, 0x10:1000, 0x18:2000[deg/s])\n    switch (gyroscope_range) {\n      case 125:\n        this.write(this.commands.gyroRange, 0x04);\n        break;\n      case 250:\n        this.write(this.commands.gyroRange, 0x03);\n        break;\n      case 500:\n        this.write(this.commands.gyroRange, 0x02);\n        break;\n      case 1000:\n        this.write(this.commands.gyroRange, 0x01);\n        break;\n      case 2000:\n        this.write(this.commands.gyroRange, 0x00);\n        break;\n      default:\n        throw new Error(\n          \"gyroscope_range variable 125,250,500,1000,2000 setting\",\n        );\n    }\n    this._accel_range = accelerometer_range;\n    this._gyro_range = gyroscope_range;\n  }\n\n  public async resetAdcWait() {\n    // set 0xC2 bit2 1-->0\n    const tempdata: any = await this.readWait(this.commands.adcReset, 1);\n    tempdata[0] = tempdata[0] | 0x04; // tempdata[0] = 0x0E; //CC\n    this.write(this.commands.adcReset, tempdata);\n    await this.obniz.wait(1);\n    tempdata[0] = tempdata[0] & 0xfb; // tempdata[0] = 0x0A; //C8\n    this.write(this.commands.adcReset, tempdata);\n  }\n\n  public async getAllDataWait(): Promise<{\n    accelerometer: {\n      x: number,\n      y: number,\n      z: number,\n    },\n    temperature: number,\n    gyroscope: {\n      x: number,\n      y: number,\n      z: number,\n    },\n  }> {\n    const raw_data: any = await this.readWait(this.commands.outputAcc, 14); // request all data\n    const ac_scale: any = this._accel_range / 32768;\n    const gy_scale: any = this._gyro_range / 32768;\n\n    const accelerometer: any = {\n      x: this.char2short(raw_data[0], raw_data[1]) * ac_scale,\n      y: this.char2short(raw_data[2], raw_data[3]) * ac_scale,\n      z: this.char2short(raw_data[4], raw_data[5]) * ac_scale,\n    };\n    const gyroscope: any = {\n      x: this.char2short(raw_data[6], raw_data[7]) * gy_scale,\n      y: this.char2short(raw_data[8], raw_data[9]) * gy_scale,\n      z: this.char2short(raw_data[10], raw_data[11]) * gy_scale,\n    };\n\n    const temperature: any =\n      this.char2short(raw_data[12], raw_data[13]) / 333.87 + 21.0;\n\n    return {\n      accelerometer,\n      temperature,\n      gyroscope,\n    };\n  }\n\n  public async getTempWait(): Promise<number> {\n    const raw_data: any = await this.readWait(this.commands.outputTemp, 2); // request all data\n    return this.char2short(raw_data[1], raw_data[0]) / 333.87 + 21.0;\n  }\n\n  public async getAccelWait(): Promise<{\n    x: number,\n    y: number,\n    z: number,\n}> {\n    return (await this.getAllDataWait()).accelerometer;\n  }\n\n  public async getGyroWait(): Promise<{\n    x: number,\n    y: number,\n    z: number,\n  }> {\n    return (await this.getAllDataWait()).gyroscope;\n  }\n}\n"]}