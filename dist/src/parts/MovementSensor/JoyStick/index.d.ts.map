{"version":3,"sources":["../src/parts/MovementSensor/JoyStick/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAInC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,eAAe;IAC9B,EAAE,EAAE,MAAM,CAAC;IACX,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,QAAS,YAAW,mBAAmB;WAE5C,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IAEf,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK,IAAI,CAAC;IAClC,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK,IAAI,CAAC;IAClC,SAAS,EAAE,GAAG,CAAC;IACf,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,KAAK,IAAI,CAAC;IAE/C,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IAExB,OAAO,CAAC,SAAS,CAAgB;IACjC,OAAO,CAAC,IAAI,CAAgB;IAC5B,OAAO,CAAC,IAAI,CAAgB;;IAUrB,KAAK,CAAC,KAAK,EAAE,KAAK;IAiCZ,aAAa,IAAI,OAAO,CAAC,OAAO,CAAC;IAKjC,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;IAM3B,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;CAKzC","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface JoyStickOptions {\n  sw: number;\n  x: number;\n  y: number;\n  vcc?: number;\n  gnd?: number;\n}\n\nexport default class JoyStick implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"JoyStick\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public pins: any;\n  public pinname: any;\n  public shortName: any;\n  public positionX: any;\n  public positionY: any;\n\n  public onchangex?: (val: number) => void;\n  public onchangey?: (val: number) => void;\n  public isPressed: any;\n  public onchangesw?: (pressed: boolean) => void;\n\n  protected obniz!: Obniz;\n\n  private io_sig_sw!: PeripheralIO;\n  private ad_x!: PeripheralAD;\n  private ad_y!: PeripheralAD;\n\n  constructor() {\n    this.keys = [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\", \"i2c\"];\n    this.requiredKeys = [\"sw\", \"y\", \"x\"];\n    this.pins = this.keys || [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\"];\n    this.pinname = {sw: \"sw12\"};\n    this.shortName = \"joyS\";\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    this.io_sig_sw = obniz.getIO(this.params.sw);\n    this.ad_x = obniz.getAD(this.params.x);\n    this.ad_y = obniz.getAD(this.params.y);\n\n    this.io_sig_sw.pull(\"5v\");\n\n    this.ad_x.start((value: number) => {\n      this.positionX = value / 5.0;\n      if (this.onchangex) {\n        this.onchangex(this.positionX * 2 - 1);\n      }\n    });\n\n    this.ad_y.start((value: number) => {\n      this.positionY = value / 5.0;\n      if (this.onchangey) {\n        this.onchangey(this.positionY * 2 - 1);\n      }\n    });\n\n    this.io_sig_sw.input((value: boolean) => {\n      this.isPressed = value === false;\n      if (this.onchangesw) {\n        this.onchangesw(value === false);\n      }\n    });\n  }\n\n  public async isPressedWait(): Promise<boolean> {\n    const ret = await this.io_sig_sw.inputWait();\n    return ret === false;\n  }\n\n  public async getXWait(): Promise<number> {\n    const value = await this.ad_x.getWait();\n    this.positionX = value / 5.0;\n    return this.positionX * 2 - 1;\n  }\n\n  public async getYWait(): Promise<number> {\n    const value = await this.ad_y.getWait();\n    this.positionY = value / 5.0;\n    return this.positionY * 2 - 1;\n  }\n}\n"]}