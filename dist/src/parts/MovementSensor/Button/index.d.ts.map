{"version":3,"sources":["../src/parts/MovementSensor/Button/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAEnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,aAAa;IAC5B,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,MAAO,YAAW,mBAAmB;WAE1C,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,oBAAoB,EAAE,GAAG,CAAC;IAC1B,SAAS,EAAE,OAAO,GAAG,IAAI,CAAQ;IACjC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,CAAQ;IAE5D,OAAO,CAAC,SAAS,CAAgB;IACjC,OAAO,CAAC,SAAS,CAAC,CAAe;;IAU1B,KAAK,CAAC,KAAK,EAAE,KAAK;IA0BZ,aAAa;IAKnB,SAAS,CAAC,SAAS,EAAE,OAAO;CAWpC","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface ButtonOptions {\r\n  signal: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class Button implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"Button\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public onChangeForStateWait: any;\r\n  public isPressed: boolean | null = null;\r\n  public onchange: ((pressed: boolean) => void) | null = null;\r\n\r\n  private io_signal!: PeripheralIO;\r\n  private io_supply?: PeripheralIO;\r\n\r\n  constructor() {\r\n    this.keys = [\"signal\", \"gnd\", \"pull\"];\r\n    this.requiredKeys = [\"signal\"];\r\n\r\n    this.onChangeForStateWait = () => {\r\n    };\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.io_signal = obniz.getIO(this.params.signal);\r\n\r\n    if (obniz.isValidIO(this.params.gnd)) {\r\n      this.io_supply = obniz.getIO(this.params.gnd);\r\n      this.io_supply.output(false);\r\n    }\r\n\r\n    // start input\r\n    if (this.params.pull === \"3v\") {\r\n      this.io_signal.pull(\"3v\");\r\n    } else if (this.params.pull === \"0v\") {\r\n      this.io_signal.pull(\"0v\");\r\n    } else {\r\n      this.io_signal.pull(\"5v\");\r\n    }\r\n\r\n    this.io_signal.input((value: any) => {\r\n      this.isPressed = value === false;\r\n      if (this.onchange) {\r\n        this.onchange(value === false);\r\n      }\r\n      this.onChangeForStateWait(value === false);\r\n    });\r\n  }\r\n\r\n  public async isPressedWait() {\r\n    const ret = await this.io_signal.inputWait();\r\n    return ret === false;\r\n  }\r\n\r\n  public stateWait(isPressed: boolean) {\r\n    return new Promise((resolve, reject) => {\r\n      this.onChangeForStateWait = (pressed: any) => {\r\n        if (isPressed === pressed) {\r\n          this.onChangeForStateWait = () => {\r\n          };\r\n          resolve();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n"]}