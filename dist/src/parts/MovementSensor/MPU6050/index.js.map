{"version":3,"sources":["../src/parts/MovementSensor/MPU6050/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface MPU6050Options {\r\n  gnd?: number;\r\n  vcc?: number;\r\n  sda?: number;\r\n  scl?: number;\r\n  i2c?: PeripheralI2C;\r\n  address?: number;\r\n  accelerometer_range?: number;\r\n  gyroscope_range?: number;\r\n}\r\n\r\nexport default class MPU6050 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"MPU6050\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private i2c!: PeripheralI2C;\r\n\r\n  private _address = 0x68;\r\n  private _accel_range: any;\r\n  private _gyro_range: any;\r\n\r\n  constructor() {\r\n    this.keys = [\r\n      \"gnd\",\r\n      \"vcc\",\r\n      \"sda\",\r\n      \"scl\",\r\n      \"i2c\",\r\n      \"address\",\r\n      \"accelerometer_range\",\r\n      \"gyroscope_range\",\r\n    ];\r\n    this.requiredKeys = [];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n    this.params.clock = 100000;\r\n    this.params.pull = \"3v\";\r\n    this.params.mode = \"master\";\r\n    if (typeof this.params.address === \"number\") {\r\n      this._address = this.params.address;\r\n    }\r\n    this.i2c = obniz.getI2CWithConfig(this.params);\r\n    this.setConfig(\r\n      this.params.accelerometer_range || 2,\r\n      this.params.gyroscope_range || 250,\r\n    );\r\n  }\r\n\r\n  public setConfig(accelerometer_range: number, gyroscope_range: number) {\r\n    // accel range set (0x00:2g, 0x08:4g, 0x10:8g, 0x18:16g)\r\n    switch (accelerometer_range) {\r\n      case 2:\r\n        this.i2c.write(this._address, [0x1c, 0x00]);\r\n        break;\r\n      case 4:\r\n        this.i2c.write(this._address, [0x1c, 0x08]);\r\n        break;\r\n      case 8:\r\n        this.i2c.write(this._address, [0x1c, 0x10]);\r\n        break;\r\n      case 16:\r\n        this.i2c.write(this._address, [0x1c, 0x18]);\r\n        break;\r\n      default:\r\n        throw new Error(\"accel_range variable 2,4,8,16 setting\");\r\n    }\r\n    // gyro range & LPF set (0x00:250, 0x08:500, 0x10:1000, 0x18:2000[deg/s])\r\n    switch (gyroscope_range) {\r\n      case 250:\r\n        this.i2c.write(this._address, [0x1b, 0x00]);\r\n        break;\r\n      case 500:\r\n        this.i2c.write(this._address, [0x1b, 0x08]);\r\n        break;\r\n      case 1000:\r\n        this.i2c.write(this._address, [0x1b, 0x10]);\r\n        break;\r\n      case 2000:\r\n        this.i2c.write(this._address, [0x1b, 0x18]);\r\n        break;\r\n      default:\r\n        throw new Error(\"accel_range variable 250,500,1000,2000 setting\");\r\n    }\r\n    this._accel_range = accelerometer_range;\r\n    this._gyro_range = gyroscope_range;\r\n  }\r\n\r\n  public async getWait(): Promise<{\r\n    accelerometer: {\r\n      x: number,\r\n      y: number,\r\n      z: number,\r\n    },\r\n    temp: number,\r\n    gyroscope: {\r\n      x: number,\r\n      y: number,\r\n      z: number,\r\n    },\r\n  }> {\r\n    this.i2c.write(this._address, [0x3b]); // request MPU6050 data\r\n    const raw_data_MPU6050 = await this.i2c.readWait(this._address, 14); // read 14byte\r\n    const ac_scale = this._accel_range / 32768;\r\n    const gy_scale = this._gyro_range / 32768;\r\n    return {\r\n      accelerometer: {\r\n        x: this.char2short(raw_data_MPU6050[0], raw_data_MPU6050[1]) * ac_scale,\r\n        y: this.char2short(raw_data_MPU6050[2], raw_data_MPU6050[3]) * ac_scale,\r\n        z: this.char2short(raw_data_MPU6050[4], raw_data_MPU6050[5]) * ac_scale,\r\n      },\r\n      temp:\r\n        this.char2short(raw_data_MPU6050[6], raw_data_MPU6050[7]) / 333.87 + 21,\r\n      gyroscope: {\r\n        x: this.char2short(raw_data_MPU6050[8], raw_data_MPU6050[9]) * gy_scale,\r\n        y:\r\n          this.char2short(raw_data_MPU6050[10], raw_data_MPU6050[11]) *\r\n          gy_scale,\r\n        z:\r\n          this.char2short(raw_data_MPU6050[12], raw_data_MPU6050[13]) *\r\n          gy_scale,\r\n      },\r\n    };\r\n  }\r\n\r\n  public char2short(valueH: number, valueL: number) {\r\n    const buffer = new ArrayBuffer(2);\r\n    const dv = new DataView(buffer);\r\n    dv.setUint8(0, valueH);\r\n    dv.setUint8(1, valueL);\r\n    return dv.getInt16(0, false);\r\n  }\r\n}\r\n"]}