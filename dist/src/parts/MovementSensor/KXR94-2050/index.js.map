{"version":3,"sources":["../src/parts/MovementSensor/KXR94-2050/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface KXR94_2050Options {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n  enable?: number;\r\n  self_test?: number;\r\n}\r\n\r\nexport default class KXR94_2050 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"KXR94-2050\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public sensitivity: any;\r\n  public offsetVoltage: any;\r\n  public onChange?: (value: { x: number; y: number; z: number }) => void;\r\n  public onChangeX?: (x: number) => void;\r\n  public onChangeY?: (y: number) => void;\r\n  public onChangeZ?: (z: number) => void;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  private ad_x!: PeripheralAD;\r\n  private ad_y!: PeripheralAD;\r\n  private ad_z!: PeripheralAD;\r\n  private _x_val: any;\r\n  private _y_val: any;\r\n  private _z_val: any;\r\n\r\n  constructor() {\r\n    this.keys = [\"x\", \"y\", \"z\", \"vcc\", \"gnd\", \"enable\", \"self_test\"];\r\n    this.requiredKeys = [\"x\", \"y\", \"z\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    this.ad_x = obniz.getAD(this.params.x);\r\n    this.ad_y = obniz.getAD(this.params.y);\r\n    this.ad_z = obniz.getAD(this.params.z);\r\n\r\n    if (obniz.isValidIO(this.params.enable)) {\r\n      obniz.getIO(this.params.enable).drive(\"5v\");\r\n      obniz.getIO(this.params.enable).output(true);\r\n\r\n    }\r\n    if (obniz.isValidIO(this.params.self_test)) {\r\n      obniz.getIO(this.params.self_test).drive(\"5v\");\r\n      obniz.getIO(this.params.self_test).output(false);\r\n    }\r\n\r\n    this.changeVccVoltage(5);\r\n\r\n    this.ad_x.start((value: any) => {\r\n      this._x_val = value;\r\n      if (this.onChangeX) {\r\n        this.onChangeX(this.voltage2gravity(value));\r\n      }\r\n      if (this.onChange) {\r\n        this.onChange(this._get());\r\n      }\r\n    });\r\n\r\n    this.ad_y.start((value: any) => {\r\n      this._y_val = value;\r\n      if (this.onChangeY) {\r\n        this.onChangeY(this.voltage2gravity(value));\r\n      }\r\n      if (this.onChange) {\r\n        this.onChange(this._get());\r\n      }\r\n    });\r\n\r\n    this.ad_z.start((value: any) => {\r\n      this._z_val = value;\r\n      if (this.onChangeZ) {\r\n        this.onChangeZ(this.voltage2gravity(value));\r\n      }\r\n      if (this.onChange) {\r\n        this.onChange(this._get());\r\n      }\r\n    });\r\n\r\n    if (this.obniz.isValidIO(this.params.vcc)) {\r\n      this.obniz.getAD(this.params.vcc).start((value: any) => {\r\n        this.changeVccVoltage(value);\r\n      });\r\n    }\r\n  }\r\n\r\n  public changeVccVoltage(pwrVoltage: number) {\r\n    this.sensitivity = pwrVoltage / 5; // Set sensitivity (unit:V)\r\n    this.offsetVoltage = pwrVoltage / 2; // Set offset voltage (Output voltage at 0g, unit:V)\r\n  }\r\n\r\n  public voltage2gravity(volt: number) {\r\n    return (volt - this.offsetVoltage) / this.sensitivity;\r\n  }\r\n\r\n  public get() {\r\n    return this._get();\r\n  }\r\n\r\n  public _get() {\r\n    return {\r\n      x: this.voltage2gravity(this._x_val),\r\n      y: this.voltage2gravity(this._y_val),\r\n      z: this.voltage2gravity(this._z_val),\r\n    };\r\n  }\r\n\r\n  public async getWait() {\r\n    this._x_val = await this.ad_x.getWait();\r\n    this._y_val = await this.ad_y.getWait();\r\n    this._z_val = await this.ad_z.getWait();\r\n\r\n    return this._get();\r\n  }\r\n}\r\n"]}