{"version":3,"sources":["../src/parts/MovementSensor/HC-SR505/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,MAAqB,OAAO;IAiB1B;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAlBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,UAAU;SACjB,CAAC;IACJ,CAAC;IAgBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEjD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAExD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAClC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEY,OAAO;;YAClB,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAC1C,CAAC;KAAA;CACF;AAtCD,0BAsCC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface HCSR505Options {\r\n  signal: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class HCSR505 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"HC-SR505\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public io_signal!: PeripheralIO;\r\n  public onchange?: (value: boolean) => void;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"signal\"];\r\n    this.requiredKeys = [\"signal\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    this.io_signal = obniz.getIO(this.params.signal);\r\n\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    this.io_signal.input((value: any) => {\r\n      if (this.onchange) {\r\n        this.onchange(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  public async getWait(): Promise<boolean> {\r\n    return await this.io_signal.inputWait();\r\n  }\r\n}\r\n"]}