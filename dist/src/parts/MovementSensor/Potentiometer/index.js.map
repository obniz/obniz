{"version":3,"sources":["../src/parts/MovementSensor/Potentiometer/index.ts"],"names":[],"mappings":";;AAWA,MAAqB,aAAa;IAmBhC;QAPO,gBAAW,GAAG,GAAG,CAAC;QAElB,aAAQ,GAAG,CAAC,CAAC;QAMlB,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IApBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,eAAe;SACtB,CAAC;IACJ,CAAC;IAkBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAExC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAa,EAAE,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAvCD,gCAuCC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface PotentiometerOptions {\r\n  pin0: number;\r\n  pin1: number;\r\n  pin2: number;\r\n}\r\n\r\nexport default class Potentiometer implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"Potentiometer\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public vcc_voltage = 5.0;\r\n  public ad!: PeripheralAD;\r\n  public position = 0;\r\n  public onchange?: (position: number) => void;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  constructor() {\r\n    this.keys = [\"pin0\", \"pin1\", \"pin2\"];\r\n    this.requiredKeys = [\"pin0\", \"pin1\", \"pin2\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz.setVccGnd(this.params.pin0, this.params.pin2, \"5v\");\r\n    this.ad = obniz.getAD(this.params.pin1);\r\n\r\n    obniz.getAD(this.params.pin0).start((value: any) => {\r\n      this.vcc_voltage = value;\r\n    });\r\n\r\n    this.ad.start((value: number) => {\r\n      this.position = value / this.vcc_voltage;\r\n      if (this.onchange) {\r\n        this.onchange(this.position);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}