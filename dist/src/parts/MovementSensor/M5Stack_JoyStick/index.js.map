{"version":3,"sources":["../src/parts/MovementSensor/M5Stack_JoyStick/index.ts"],"names":[],"mappings":";;;;;;;;;;;AASA,MAAqB,gBAAgB;IAejC;QACI,IAAI,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAhBM,MAAM,CAAC,IAAI;QACd,OAAO;YACH,IAAI,EAAE,kBAAkB;SAC3B,CAAC;IACN,CAAC;IAcM,KAAK,CAAC,KAAY;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,8BAA8B;QACpD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAEY,QAAQ;;YACjB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IAEY,QAAQ;;YACjB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IAEY,aAAa;;YACtB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC7C,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;KAAA;CACJ;AA5CD,mCA4CC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\nimport {I2cPartsAbstructOptions} from \"../../i2cParts\";\n\nexport interface M5Stack_JoyStickOptions extends I2cPartsAbstructOptions {\n}\n\nexport default class M5Stack_JoyStick implements ObnizPartsInterface {\n\n    public static info(): ObnizPartsInfo {\n        return {\n            name: \"M5Stack_JoyStick\",\n        };\n    }\n\n    public requiredKeys: string[];\n    public keys: string[];\n    public params: any;\n\n    protected obniz!: Obniz;\n    protected i2c!: PeripheralI2C;\n\n    constructor() {\n        this.requiredKeys = [\"sda\", \"scl\"];\n        this.keys = [\"vcc\", \"gnd\", \"sda\", \"scl\", \"i2c\"];\n    }\n\n    public wired(obniz: Obniz) {\n        this.obniz = obniz;\n        this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n        this.obniz.wait(100); // wait for booting of MEGA328\n        this.params.mode = \"master\";\n        this.params.clock = 400000;\n        this.params.pull = \"5v\";\n        this.i2c = this.obniz.getI2CWithConfig(this.params);\n    }\n\n    public async getXWait(): Promise<number> {\n        const ret = await this.i2c.readWait(0x52, 3);\n        return ret[0];\n    }\n\n    public async getYWait(): Promise<number> {\n        const ret = await this.i2c.readWait(0x52, 3);\n        return ret[1];\n    }\n\n    public async isPressedWait(): Promise<boolean> {\n        const ret = await this.i2c.readWait(0x52, 3);\n        return Boolean(ret[2]);\n    }\n}\n"]}