{"version":3,"sources":["../src/parts/PressureSensor/BMP280/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralI2C from \"../../../obniz/libs/io_peripherals/i2c\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\n\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface BMP280Options {\r\n  vio?: number;\r\n  vcore?: number;\r\n  gnd?: number;\r\n  csb?: number;\r\n  sdi?: number;\r\n  sck?: number;\r\n  sdo?: number;\r\n  address?: number;\r\n  i2c?: PeripheralI2C;\r\n }\r\n\r\nexport default class BMP280 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"BMP280\",\r\n      datasheet: \"https://www.bosch-sensortec.com/media/boschsensortec/downloads/datasheets/bst-bmp280-ds001.pdf\",\r\n    };\r\n  }\r\n\r\n  public requiredKeys: string[];\r\n  public keys: string[];\r\n  public ioKeys: string[];\r\n  public configration: any;\r\n  public commands: any;\r\n  public params: any;\r\n  public io_csb?: PeripheralIO;\r\n  public address: any;\r\n  public io_sdo?: PeripheralIO;\r\n\r\n  protected obniz!: Obniz;\r\n  protected i2c!: PeripheralI2C;\r\n\r\n  private _calibrated: any;\r\n  private _t_fine: any;\r\n\r\n  constructor() {\r\n    this.requiredKeys = [];\r\n    this.keys = [\r\n      \"vcore\",\r\n      \"vio\",\r\n      \"gnd\",\r\n      \"csb\",\r\n      \"sdi\",\r\n      \"sck\",\r\n      \"sdo\",\r\n      \"i2c\",\r\n      \"address\",\r\n    ];\r\n\r\n    this.ioKeys = [\"vcore\", \"vio\", \"gnd\", \"csb\", \"sdi\", \"sdo\", \"sck\"];\r\n\r\n    this.configration = {\r\n      sampling: {\r\n        temp: 1, // 0 never. 0b001 to 0b101\r\n        pres: 1,\r\n      },\r\n      interval: 5, // 0b000 to 0b111\r\n      iir_strength: 0, // 000 to 100 (0=disable)\r\n      mode: 3,\r\n\r\n      Modes: {\r\n        sleep: 0,\r\n        forced: 1, // or 2\r\n        normal: 3,\r\n      },\r\n    };\r\n\r\n    this.commands = {};\r\n\r\n    this.commands.addresses = {\r\n      config: 0xf5,\r\n      ctrl_meas: 0xf4,\r\n    };\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    if (obniz.isValidIO(this.params.csb)) {\r\n      // selecting I2C mode before powerup\r\n      this.io_csb = obniz.getIO(this.params.csb);\r\n      this.io_csb.drive(\"3v\");\r\n      this.io_csb.output(true);\r\n    }\r\n\r\n    this.obniz.setVccGnd(this.params.vio, null, \"3v\");\r\n    this.obniz.setVccGnd(this.params.vcore, null, \"3v\");\r\n    this.obniz.setVccGnd(null, this.params.gnd, \"5v\");\r\n    this.obniz.wait(10);\r\n\r\n    this.address = 0x76;\r\n    if (this.params.address === 0x76) {\r\n      this.address = 0x76;\r\n    } else if (this.params.address === 0x77) {\r\n      this.address = 0x77;\r\n    } else if (this.params.address !== undefined) {\r\n      throw new Error(\"address must be 0x76 or 0x77\");\r\n    }\r\n\r\n    if (obniz.isValidIO(this.params.sdo)) {\r\n      this.io_sdo = obniz.getIO(this.params.sdo);\r\n      this.io_sdo.drive(\"3v\");\r\n      this.io_sdo.output(this.address === 0x76 ? false : true);\r\n    }\r\n\r\n    this.params.sda = this.params.sda || this.params.sdi;\r\n    this.params.scl = this.params.scl || this.params.sck;\r\n    this.params.clock = this.params.clock || 100 * 1000;\r\n    this.params.mode = \"master\";\r\n    this.params.pull = \"3v\";\r\n    this.i2c = obniz.getI2CWithConfig(this.params);\r\n\r\n    this.obniz.wait(10);\r\n\r\n    this.config();\r\n\r\n    this.obniz.wait(10);\r\n  }\r\n\r\n  public async setIIRStrength(strengh: any) {\r\n    this.configration.iir_strength = strengh;\r\n    this.config();\r\n  }\r\n\r\n  public async applyCalibration() {\r\n    this.i2c.write(this.address, [0x88]);\r\n    const data: any = await this.i2c.readWait(this.address, 24);\r\n    this._calibrated = {\r\n      dig_T1: (data[1] << 8) | data[0],\r\n      dig_T2: this._readSigned16((data[3] << 8) | data[2]),\r\n      dig_T3: this._readSigned16((data[5] << 8) | data[4]),\r\n      dig_P1: (data[7] << 8) | data[6],\r\n      dig_P2: this._readSigned16((data[9] << 8) | data[8]),\r\n      dig_P3: this._readSigned16((data[11] << 8) | data[10]),\r\n      dig_P4: this._readSigned16((data[13] << 8) | data[12]),\r\n      dig_P5: this._readSigned16((data[15] << 8) | data[14]),\r\n      dig_P6: this._readSigned16((data[17] << 8) | data[16]),\r\n      dig_P7: this._readSigned16((data[19] << 8) | data[18]),\r\n      dig_P8: this._readSigned16((data[21] << 8) | data[20]),\r\n      dig_P9: this._readSigned16((data[23] << 8) | data[22]),\r\n    };\r\n    this._t_fine = 0;\r\n  }\r\n\r\n  public async getAllWait(): Promise<{ temperature: number; pressure: number }> {\r\n    const data = await this.getData();\r\n\r\n    const press_raw = (data[0] << 12) | (data[1] << 4) | (data[2] >> 4);\r\n    const temp_raw = (data[3] << 12) | (data[4] << 4) | (data[5] >> 4);\r\n\r\n    const temperature = this.calibration_T(temp_raw) / 100.0;\r\n    const pressure = this.calibration_P(press_raw) / 100.0;\r\n\r\n    return {temperature, pressure};\r\n  }\r\n\r\n  public async getTempWait(): Promise<number> {\r\n    return (await this.getAllWait()).temperature;\r\n  }\r\n\r\n  public async getPressureWait(): Promise<number> {\r\n    return (await this.getAllWait()).pressure;\r\n  }\r\n\r\n  public async getAltitudeWait() {\r\n    const pressure: any = await this.getPressureWait();\r\n    return this.calcAltitude(pressure);\r\n  }\r\n\r\n  public calcAltitude(pressure: number, seaPressure?: number): number {\r\n    if (typeof seaPressure !== \"number\") {\r\n      seaPressure = 1013.25;\r\n    }\r\n    return (\r\n      (1.0 - Math.pow(pressure / seaPressure, 1 / 5.2553)) * 145366.45 * 0.3048\r\n    );\r\n  }\r\n\r\n  private async config() {\r\n    this.write([\r\n      this.commands.addresses.config,\r\n      (this.configration.interval << 5) |\r\n      (this.configration.iir_strength << 2) |\r\n      0,\r\n    ]);\r\n    this.write([\r\n      this.commands.addresses.ctrl_meas,\r\n      (this.configration.sampling.temp << 5) |\r\n      (this.configration.sampling.pres << 2) |\r\n      this.configration.mode,\r\n    ]);\r\n  }\r\n\r\n  private _readSigned16(value: number) {\r\n    if (value >= 0x8000) {\r\n      value = value - 0x10000;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private _readSigned8(value: number) {\r\n    if (value >= 0x80) {\r\n      value = value - 0x100;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private write(data: any) {\r\n    this.i2c.write(this.address, data);\r\n  }\r\n\r\n  private async getData() {\r\n    this.i2c.write(this.address, [0xf7]);\r\n    return await this.i2c.readWait(this.address, 6);\r\n  }\r\n\r\n  private calibration_T(adc_T: any) {\r\n    let var1: any;\r\n    let var2: any;\r\n    let T: any;\r\n    var1 =\r\n      (((adc_T >> 3) - (this._calibrated.dig_T1 << 1)) *\r\n        this._calibrated.dig_T2) >>\r\n      11;\r\n    var2 =\r\n      (((((adc_T >> 4) - this._calibrated.dig_T1) *\r\n        ((adc_T >> 4) - this._calibrated.dig_T1)) >>\r\n        12) *\r\n        this._calibrated.dig_T3) >>\r\n      14;\r\n\r\n    this._t_fine = var1 + var2;\r\n    T = (this._t_fine * 5 + 128) >> 8;\r\n    return T;\r\n  }\r\n\r\n  private calibration_P(adc_P: any) {\r\n    let pvar1: any = this._t_fine / 2 - 64000;\r\n    let pvar2: any = (pvar1 * pvar1 * this._calibrated.dig_P6) / 32768;\r\n    pvar2 = pvar2 + pvar1 * this._calibrated.dig_P5 * 2;\r\n    pvar2 = pvar2 / 4 + this._calibrated.dig_P4 * 65536;\r\n    pvar1 =\r\n      ((this._calibrated.dig_P3 * pvar1 * pvar1) / 524288 +\r\n        this._calibrated.dig_P2 * pvar1) /\r\n      524288;\r\n    pvar1 = (1 + pvar1 / 32768) * this._calibrated.dig_P1;\r\n\r\n    if (pvar1 !== 0) {\r\n      let p: any = 1048576 - adc_P;\r\n      p = ((p - pvar2 / 4096) * 6250) / pvar1;\r\n      pvar1 = (this._calibrated.dig_P9 * p * p) / 2147483648;\r\n      pvar2 = (p * this._calibrated.dig_P8) / 32768;\r\n      p = p + (pvar1 + pvar2 + this._calibrated.dig_P7) / 16;\r\n      return p;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n"]}