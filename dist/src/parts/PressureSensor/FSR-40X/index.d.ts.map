{"version":3,"sources":["../src/parts/PressureSensor/FSR-40X/index.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAInC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,aAAa;IAC5B,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,MAAO,YAAW,mBAAmB;WAE1C,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,QAAQ,SAAK;IACb,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK,IAAI,CAAC;IAEzC,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IAExB,OAAO,CAAC,MAAM,CAAgB;IAC9B,OAAO,CAAC,EAAE,CAAgB;;IAOnB,KAAK,CAAC,KAAK,EAAE,KAAK;IAkBZ,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;CAMxC","file":"index.d.ts","sourcesContent":["// Todo: add weight and calc pressure(kg)\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface FSR40XOptions {\n  pin0: number;\n  pin1: number;\n}\n\nexport default class FSR40X implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"FSR40X\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public pressure = 0;\n  public onchange?: (temp: number) => void;\n\n  protected obniz!: Obniz;\n\n  private io_pwr!: PeripheralIO;\n  private ad!: PeripheralAD;\n\n  constructor() {\n    this.keys = [\"pin0\", \"pin1\"];\n    this.requiredKeys = [\"pin0\", \"pin1\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    this.io_pwr = obniz.getIO(this.params.pin0);\n    this.ad = obniz.getAD(this.params.pin1);\n\n    this.io_pwr.drive(\"5v\");\n    this.io_pwr.output(true);\n\n    this.ad.start((value: number) => {\n      const pressure: any = value * 100;\n      this.pressure = pressure;\n      if (this.onchange) {\n        this.onchange(this.pressure);\n      }\n    });\n  }\n\n  public async getWait(): Promise<number> {\n    const value = await this.ad.getWait();\n    const pressure = value * 100;\n    this.pressure = pressure;\n    return this.pressure;\n  }\n}\n"]}