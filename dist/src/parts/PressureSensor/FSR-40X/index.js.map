{"version":3,"sources":["../src/parts/PressureSensor/FSR-40X/index.ts"],"names":[],"mappings":";AAAA,yCAAyC;;;;;;;;;;;AAazC,MAAqB,MAAM;IAoBzB;QARO,aAAQ,GAAG,CAAC,CAAC;QASlB,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IArBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,QAAQ;SACf,CAAC;IACJ,CAAC;IAmBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAa,EAAE,EAAE;YAC9B,MAAM,QAAQ,GAAQ,KAAK,GAAG,GAAG,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEY,OAAO;;YAClB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACtC,MAAM,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;KAAA;CACF;AAjDD,yBAiDC","file":"index.js","sourcesContent":["// Todo: add weight and calc pressure(kg)\n\nimport Obniz from \"../../../obniz\";\nimport PeripheralAD from \"../../../obniz/libs/io_peripherals/ad\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\n\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface FSR40XOptions {\n  pin0: number;\n  pin1: number;\n}\n\nexport default class FSR40X implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"FSR40X\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public params: any;\n\n  public pressure = 0;\n  public onchange?: (temp: number) => void;\n\n  protected obniz!: Obniz;\n\n  private io_pwr!: PeripheralIO;\n  private ad!: PeripheralAD;\n\n  constructor() {\n    this.keys = [\"pin0\", \"pin1\"];\n    this.requiredKeys = [\"pin0\", \"pin1\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    this.io_pwr = obniz.getIO(this.params.pin0);\n    this.ad = obniz.getAD(this.params.pin1);\n\n    this.io_pwr.drive(\"5v\");\n    this.io_pwr.output(true);\n\n    this.ad.start((value: number) => {\n      const pressure: any = value * 100;\n      this.pressure = pressure;\n      if (this.onchange) {\n        this.onchange(this.pressure);\n      }\n    });\n  }\n\n  public async getWait(): Promise<number> {\n    const value = await this.ad.getWait();\n    const pressure = value * 100;\n    this.pressure = pressure;\n    return this.pressure;\n  }\n}\n"]}