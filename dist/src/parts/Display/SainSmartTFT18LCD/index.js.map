{"version":3,"sources":["../src/parts/Display/SainSmartTFT18LCD/index.ts"],"names":[],"mappings":"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I;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;CACL,CAAC","file":"index.js","sourcesContent":["// SainSmart ST7735 1.8\" TFT LCD 128x160 pixel\r\nimport Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface SainSmartTFT18LCDOptions {\r\n  scl: number;\r\n  sda: number;\r\n  dc: number;\r\n  res: number;\r\n  cs: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport type RGB16 = number;\r\nexport type RGB24 = number;\r\nexport interface PresetColor {\r\n  AliceBlue: RGB16;\r\n  AntiqueWhite: RGB16;\r\n  Aqua: RGB16;\r\n  Aquamarine: RGB16;\r\n  Azure: RGB16;\r\n  Beige: RGB16;\r\n  Bisque: RGB16;\r\n  Black: RGB16;\r\n  BlanchedAlmond: RGB16;\r\n  Blue: RGB16;\r\n  BlueViolet: RGB16;\r\n  Brown: RGB16;\r\n  BurlyWood: RGB16;\r\n  CadetBlue: RGB16;\r\n  Chartreuse: RGB16;\r\n  Chocolate: RGB16;\r\n  Coral: RGB16;\r\n  CornflowerBlue: RGB16;\r\n  Cornsilk: RGB16;\r\n  Crimson: RGB16;\r\n  Cyan: RGB16;\r\n  DarkBlue: RGB16;\r\n  DarkCyan: RGB16;\r\n  DarkGoldenRod: RGB16;\r\n  DarkGray: RGB16;\r\n  DarkGreen: RGB16;\r\n  DarkKhaki: RGB16;\r\n  DarkMagenta: RGB16;\r\n  DarkOliveGreen: RGB16;\r\n  DarkOrange: RGB16;\r\n  DarkOrchid: RGB16;\r\n  DarkRed: RGB16;\r\n  DarkSalmon: RGB16;\r\n  DarkSeaGreen: RGB16;\r\n  DarkSlateBlue: RGB16;\r\n  DarkSlateGray: RGB16;\r\n  DarkTurquoise: RGB16;\r\n  DarkViolet: RGB16;\r\n  DeepPink: RGB16;\r\n  DeepSkyBlue: RGB16;\r\n  DimGray: RGB16;\r\n  DodgerBlue: RGB16;\r\n  FireBrick: RGB16;\r\n  FloralWhite: RGB16;\r\n  ForestGreen: RGB16;\r\n  Fuchsia: RGB16;\r\n  Gainsboro: RGB16;\r\n  GhostWhite: RGB16;\r\n  Gold: RGB16;\r\n  GoldenRod: RGB16;\r\n  Gray: RGB16;\r\n  Green: RGB16;\r\n  GreenYellow: RGB16;\r\n  HoneyDew: RGB16;\r\n  HotPink: RGB16;\r\n  IndianRed: RGB16;\r\n  Indigo: RGB16;\r\n  Ivory: RGB16;\r\n  Khaki: RGB16;\r\n  Lavender: RGB16;\r\n  LavenderBlush: RGB16;\r\n  LawnGreen: RGB16;\r\n  LemonChiffon: RGB16;\r\n  LightBlue: RGB16;\r\n  LightCoral: RGB16;\r\n  LightCyan: RGB16;\r\n  LightGoldenRodYellow: RGB16;\r\n  LightGray: RGB16;\r\n  LightGreen: RGB16;\r\n  LightPink: RGB16;\r\n  LightSalmon: RGB16;\r\n  LightSeaGreen: RGB16;\r\n  LightSkyBlue: RGB16;\r\n  LightSlateGray: RGB16;\r\n  LightSteelBlue: RGB16;\r\n  LightYellow: RGB16;\r\n  Lime: RGB16;\r\n  LimeGreen: RGB16;\r\n  Linen: RGB16;\r\n  Magenta: RGB16;\r\n  Maroon: RGB16;\r\n  MediumAquaMarine: RGB16;\r\n  MediumBlue: RGB16;\r\n  MediumOrchid: RGB16;\r\n  MediumPurple: RGB16;\r\n  MediumSeaGreen: RGB16;\r\n  MediumSlateBlue: RGB16;\r\n  MediumSpringGreen: RGB16;\r\n  MediumTurquoise: RGB16;\r\n  MediumVioletRed: RGB16;\r\n  MidnightBlue: RGB16;\r\n  MintCream: RGB16;\r\n  MistyRose: RGB16;\r\n  Moccasin: RGB16;\r\n  NavajoWhite: RGB16;\r\n  Navy: RGB16;\r\n  OldLace: RGB16;\r\n  Olive: RGB16;\r\n  OliveDrab: RGB16;\r\n  Orange: RGB16;\r\n  OrangeRed: RGB16;\r\n  Orchid: RGB16;\r\n  PaleGoldenRod: RGB16;\r\n  PaleGreen: RGB16;\r\n  PaleTurquoise: RGB16;\r\n  PaleVioletRed: RGB16;\r\n  PapayaWhip: RGB16;\r\n  PeachPuff: RGB16;\r\n  Peru: RGB16;\r\n  Pink: RGB16;\r\n  Plum: RGB16;\r\n  PowderBlue: RGB16;\r\n  Purple: RGB16;\r\n  RebeccaPurple: RGB16;\r\n  Red: RGB16;\r\n  RosyBrown: RGB16;\r\n  RoyalBlue: RGB16;\r\n  SaddleBrown: RGB16;\r\n  Salmon: RGB16;\r\n  SandyBrown: RGB16;\r\n  SeaGreen: RGB16;\r\n  SeaShell: RGB16;\r\n  Sienna: RGB16;\r\n  Silver: RGB16;\r\n  SkyBlue: RGB16;\r\n  SlateBlue: RGB16;\r\n  SlateGray: RGB16;\r\n  Snow: RGB16;\r\n  SpringGreen: RGB16;\r\n  SteelBlue: RGB16;\r\n  Tan: RGB16;\r\n  Teal: RGB16;\r\n  Thistle: RGB16;\r\n  Tomato: RGB16;\r\n  Turquoise: RGB16;\r\n  Violet: RGB16;\r\n  Wheat: RGB16;\r\n  White: RGB16;\r\n  WhiteSmoke: RGB16;\r\n  Yellow: RGB16;\r\n  YellowGreen: RGB16;\r\n}\r\n\r\nexport default class SainSmartTFT18LCD implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"SainSmartTFT18LCD\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public debugprint = false;\r\n  public obniz!: Obniz;\r\n  public io_dc!: PeripheralIO;\r\n  public params: any;\r\n  public io_res!: PeripheralIO;\r\n  public io_cs!: PeripheralIO;\r\n  public spi!: PeripheralSPI;\r\n  public width: number = 0;\r\n  public height: number = 0;\r\n  public writeBuffer: number[] = [];\r\n  public color!: PresetColor;\r\n  protected displayIoNames: {[key: string]: string};\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"scl\", \"sda\", \"dc\", \"res\", \"cs\"];\r\n    this.requiredKeys = [\"scl\", \"sda\", \"dc\", \"res\", \"cs\"];\r\n\r\n    this.displayIoNames = {\r\n      vcc: \"vcc\",\r\n      gnd: \"gnd\",\r\n      scl: \"scl\",\r\n      sda: \"sda\",\r\n      dc: \"dc\",\r\n      res: \"res\",\r\n      cs: \"cs\",\r\n    };\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.debugprint = false;\r\n    this.obniz = obniz;\r\n    this.io_dc = obniz.getIO(this.params.dc);\r\n    this.io_res = obniz.getIO(this.params.res);\r\n    this.io_cs = obniz.getIO(this.params.cs);\r\n\r\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n    this.params.frequency = 16 * 1000 * 1000; // 16MHz\r\n    this.params.mode = \"master\";\r\n    this.params.clk = this.params.scl;\r\n    this.params.mosi = this.params.sda;\r\n    this.params.drive = \"3v\";\r\n    this.spi = this.obniz.getSpiWithConfig(this.params);\r\n\r\n    this.io_dc.output(true);\r\n    this.io_cs.output(false);\r\n\r\n    this.width = ST7735_TFTWIDTH;\r\n    this.height = ST7735_TFTHEIGHT;\r\n\r\n    this.writeBuffer = []; // 1024bytes bufferring\r\n\r\n    this._setPresetColor();\r\n    this.init();\r\n  }\r\n\r\n  public print_debug(v: any) {\r\n    if (this.debugprint) {\r\n      console.log(\r\n        \"SainSmartTFT18LCD: \" + Array.prototype.slice.call(arguments).join(\"\"),\r\n      );\r\n    }\r\n  }\r\n\r\n  public _deadSleep(waitMsec: number) {\r\n    const startMsec: any = new Date();\r\n    while ((new Date() as any) - startMsec < waitMsec) {\r\n    }\r\n  }\r\n\r\n  public _reset() {\r\n    this.io_res.output(false);\r\n    this._deadSleep(10);\r\n    this.io_res.output(true);\r\n    this._deadSleep(10);\r\n  }\r\n\r\n  public writeCommand(cmd: number) {\r\n    this.io_dc.output(false);\r\n    this.io_cs.output(false);\r\n    this.spi.write([cmd]);\r\n    this.io_cs.output(true);\r\n  }\r\n\r\n  public writeData(data: number[]) {\r\n    this.io_dc.output(true);\r\n    this.io_cs.output(false);\r\n    this.spi.write(data);\r\n    this.io_cs.output(true);\r\n  }\r\n\r\n  public write(cmd: number, data: number[]) {\r\n    if (data.length === 0) {\r\n      return;\r\n    }\r\n    this.writeCommand(cmd);\r\n    this.writeData(data);\r\n  }\r\n\r\n  public async asyncwait() {\r\n    return await this.spi.writeWait([0x00]);\r\n  }\r\n\r\n  public _writeFlush() {\r\n    while (this.writeBuffer.length > 0) {\r\n      if (this.writeBuffer.length > 1024) {\r\n        const data = this.writeBuffer.slice(0, 1024);\r\n        this.writeData(data);\r\n        this.writeBuffer.splice(0, 1024);\r\n      } else {\r\n        if (this.writeBuffer.length > 0) {\r\n          this.writeData(this.writeBuffer);\r\n        }\r\n        this.writeBuffer = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  public _writeBuffer(data?: number[]) {\r\n    if (data && data.length > 0) {\r\n      this.writeBuffer = this.writeBuffer.concat(data);\r\n    } else {\r\n      this._writeFlush();\r\n    }\r\n  }\r\n\r\n  public color16(r: number, g: number, b: number): RGB16 {\r\n    //  1st byte  (r & 0xF8 | g >> 5)\r\n    //  2nd byte  (g & 0xFC << 3 | b >> 3)\r\n    return ((r & 0xf8) << 8) | ((g & 0xfc) << 3) | (b >> 3);\r\n  }\r\n\r\n  public _initG() {\r\n    // initialize for Green Tab\r\n    this.writeCommand(ST7735_SLPOUT); // Sleep out & booster on\r\n    this.obniz.wait(120);\r\n    this.write(ST7735_FRMCTR1, [0x01, 0x2c, 0x2d]);\r\n    this.write(ST7735_FRMCTR2, [0x01, 0x2c, 0x2d]);\r\n    this.write(ST7735_FRMCTR3, [0x01, 0x2c, 0x2d, 0x01, 0x2c, 0x2d]);\r\n    this.write(ST7735_INVCTR, [0x07]);\r\n    this.write(ST7735_PWCTR1, [0xa2, 0x02, 0x84]);\r\n    this.write(ST7735_PWCTR2, [0xc5]);\r\n    this.write(ST7735_PWCTR3, [0x0a, 0x00]);\r\n    this.write(ST7735_PWCTR4, [0x8a, 0x2a]);\r\n    this.write(ST7735_PWCTR5, [0x8a, 0xee]);\r\n    this.write(ST7735_VMCTR1, [0x0e]);\r\n    this.write(ST7735_GMCTRP1, [\r\n      0x02,\r\n      0x1c,\r\n      0x07,\r\n      0x12,\r\n      0x37,\r\n      0x32,\r\n      0x29,\r\n      0x2d,\r\n      0x29,\r\n      0x25,\r\n      0x2b,\r\n      0x39,\r\n      0x00,\r\n      0x01,\r\n      0x03,\r\n      0x10,\r\n    ]);\r\n    this.write(ST7735_GMCTRN1, [\r\n      0x03,\r\n      0x1d,\r\n      0x07,\r\n      0x06,\r\n      0x2e,\r\n      0x2c,\r\n      0x29,\r\n      0x2d,\r\n      0x2e,\r\n      0x2e,\r\n      0x37,\r\n      0x3f,\r\n      0x00,\r\n      0x00,\r\n      0x02,\r\n      0x10,\r\n    ]);\r\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // color format: 16bit/pixel\r\n  }\r\n\r\n  public init() {\r\n    this._reset();\r\n    this._initG();\r\n    this.setDisplayOn();\r\n    this.setRotation(0);\r\n  }\r\n\r\n  public setDisplayOn() {\r\n    this.writeCommand(ST7735_DISPON);\r\n  }\r\n\r\n  public setDisplayOff() {\r\n    this.writeCommand(ST7735_DISPOFF);\r\n  }\r\n\r\n  public setDisplay(on: boolean) {\r\n    if (on === true) {\r\n      this.setDisplayOn();\r\n    } else {\r\n      this.setDisplayOff();\r\n    }\r\n  }\r\n\r\n  public setInversionOn() {\r\n    this.writeCommand(ST7735_INVON);\r\n  }\r\n\r\n  public setInversionOff() {\r\n    this.writeCommand(ST7735_INVOFF);\r\n  }\r\n\r\n  public setInversion(inversion: boolean) {\r\n    if (inversion === true) {\r\n      this.setInversionOn();\r\n    } else {\r\n      this.setInversionOff();\r\n    }\r\n  }\r\n\r\n  public setRotation(m: number) {\r\n    const MADCTL_MY = 0x80;\r\n    const MADCTL_MX = 0x40;\r\n    const MADCTL_MV = 0x20;\r\n    // const MADCTL_ML = 0x10;\r\n    const MADCTL_RGB = 0x00; // always RGB, never BGR\r\n    // const MADCTL_MH = 0x04;\r\n\r\n    let data: any;\r\n    const rotation = m % 4; // can't be higher than 3\r\n    switch (rotation) {\r\n      case 0:\r\n        data = [MADCTL_MX | MADCTL_MY | MADCTL_RGB];\r\n        this.width = ST7735_TFTWIDTH;\r\n        this.height = ST7735_TFTHEIGHT;\r\n        break;\r\n      case 1:\r\n        data = [MADCTL_MY | MADCTL_MV | MADCTL_RGB];\r\n        this.width = ST7735_TFTHEIGHT;\r\n        this.height = ST7735_TFTWIDTH;\r\n        break;\r\n      case 2:\r\n        data = [MADCTL_RGB];\r\n        this.width = ST7735_TFTWIDTH;\r\n        this.height = ST7735_TFTHEIGHT;\r\n        break;\r\n      case 3:\r\n        data = [MADCTL_MX | MADCTL_MV | MADCTL_RGB];\r\n        this.width = ST7735_TFTHEIGHT;\r\n        this.height = ST7735_TFTWIDTH;\r\n        break;\r\n    }\r\n    this.write(ST7735_MADCTL, data);\r\n    this.setAddrWindow(0, 0, this.width - 1, this.height - 1);\r\n  }\r\n\r\n  public setAddrWindow(x0: number, y0: number, x1: number, y1: number) {\r\n    this.print_debug(\r\n      `setAddrWindow: (x0: ${x0}, y0: ${y0}) - (x1: ${x1}, y1: ${y1})`,\r\n    );\r\n\r\n    if (x0 < 0) {\r\n      x0 = 0;\r\n    }\r\n    if (y0 < 0) {\r\n      y0 = 0;\r\n    }\r\n    if (x1 < 0) {\r\n      x1 = 0;\r\n    }\r\n    if (y1 < 0) {\r\n      y1 = 0;\r\n    }\r\n\r\n    // column addr set\r\n    this.write(ST7735_CASET, [0x00, x0, 0x00, x1]); // XSTART-XEND\r\n    // row addr set\r\n    this.write(ST7735_RASET, [0x00, y0, 0x00, y1]); // YSTART-YEND\r\n    // write to RAM\r\n    this.writeCommand(ST7735_RAMWR);\r\n    this.writeBuffer = [];\r\n  }\r\n\r\n  // __swap(a, b) { let t = a; a = b; b = t; }\r\n\r\n  public fillScreen(color: RGB16) {\r\n    this.fillRect(0, 0, this.width, this.height, color);\r\n  }\r\n\r\n  public fillRect(x: number, y: number, width: number, height: number, color: RGB16) {\r\n    if (x >= this.width || y >= this.height) {\r\n      return;\r\n    }\r\n    if (x + width - 1 >= this.width) {\r\n      width = this.width - x;\r\n    }\r\n    if (y + height - 1 >= this.height) {\r\n      height = this.height - y;\r\n    }\r\n\r\n    this.setAddrWindow(x, y, x + width - 1, y + height - 1);\r\n\r\n    const hi = color >> 8;\r\n    const lo = color & 0xff;\r\n    const data = [];\r\n\r\n    for (y = height; y > 0; y--) {\r\n      for (x = width; x > 0; x--) {\r\n        data.push(hi);\r\n        data.push(lo);\r\n      }\r\n    }\r\n    this._writeBuffer(data);\r\n    this._writeBuffer(); // for flush\r\n  }\r\n\r\n  public drawRect(x: number, y: number, width: number, height: number, color: RGB16) {\r\n    this.drawHLine(x, y, width, color);\r\n    this.drawHLine(x, y + height - 1, width, color);\r\n    this.drawVLine(x, y, height, color);\r\n    this.drawVLine(x + width - 1, y, height, color);\r\n  }\r\n\r\n  public drawCircle(center_x: number, center_y: number, radius: number, color: RGB16) {\r\n    let f = 1 - radius;\r\n    let ddF_x = 1;\r\n    let ddF_y = -2 * radius;\r\n    let x = 0;\r\n    let y = radius;\r\n\r\n    this.drawPixel(center_x, center_y + radius, color);\r\n    this.drawPixel(center_x, center_y - radius, color);\r\n    this.drawPixel(center_x + radius, center_y, color);\r\n    this.drawPixel(center_x - radius, center_y, color);\r\n\r\n    while (x < y) {\r\n      if (f >= 0) {\r\n        y--;\r\n        ddF_y += 2;\r\n        f += ddF_y;\r\n      }\r\n      x++;\r\n      ddF_x += 2;\r\n      f += ddF_x;\r\n\r\n      this.drawPixel(center_x + x, center_y + y, color);\r\n      this.drawPixel(center_x - x, center_y + y, color);\r\n      this.drawPixel(center_x + x, center_y - y, color);\r\n      this.drawPixel(center_x - x, center_y - y, color);\r\n      this.drawPixel(center_x + y, center_y + x, color);\r\n      this.drawPixel(center_x - y, center_y + x, color);\r\n      this.drawPixel(center_x + y, center_y - x, color);\r\n      this.drawPixel(center_x - y, center_y - x, color);\r\n    }\r\n  }\r\n\r\n  public fillCircle(center_x: number, center_y: number, radius: number, color: RGB16) {\r\n    this.drawVLine(center_x, center_y - radius, 2 * radius + 1, color);\r\n    this._fillCircleHelper(center_x, center_y, radius, 3, 0, color);\r\n  }\r\n\r\n  public drawRoundRect(x: number, y: number, width: number, height: number, round: number, color: RGB16) {\r\n    this.drawHLine(x + round, y, width - 2 * round, color); // Top\r\n    this.drawHLine(x + round, y + height - 1, width - 2 * round, color); // Bottom\r\n    this.drawVLine(x, y + round, height - 2 * round, color); // Left\r\n    this.drawVLine(x + width - 1, y + round, height - 2 * round, color); // Right\r\n\r\n    this._drawCircleHelper(x + round, y + round, round, 1, color);\r\n    this._drawCircleHelper(x + width - round - 1, y + round, round, 2, color);\r\n    this._drawCircleHelper(x + width - round - 1, y + height - round - 1, round, 4, color);\r\n    this._drawCircleHelper(x + round, y + height - round - 1, round, 8, color);\r\n  }\r\n\r\n  public fillRoundRect(x: number, y: number, width: number, height: number, round: number, color: RGB16) {\r\n    this.fillRect(x + round, y, width - 2 * round, height, color);\r\n\r\n    this._fillCircleHelper(x + width - round - 1, y + round, round, 1, height - 2 * round - 1, color);\r\n    this._fillCircleHelper(x + round, y + round, round, 2, height - 2 * round - 1, color);\r\n  }\r\n\r\n  public drawTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, color: RGB16) {\r\n    this.drawLine(x0, y0, x1, y1, color);\r\n    this.drawLine(x1, y1, x2, y2, color);\r\n    this.drawLine(x2, y2, x0, y0, color);\r\n  }\r\n\r\n  public fillTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number, color: RGB16) {\r\n    let a = 0;\r\n    let b = 0;\r\n    let y = 0;\r\n    let last = 0;\r\n\r\n    // Sort coordinates by Y order (y2 >= y1 >= y0)\r\n    if (y0 > y1) {\r\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\r\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\r\n    }\r\n    if (y1 > y2) {\r\n      y2 = [y1, (y1 = y2)][0]; // this._swap(y2, y1);\r\n      x2 = [x1, (x1 = x2)][0]; // this._swap(x2, x1);\r\n    }\r\n    if (y0 > y1) {\r\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\r\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\r\n    }\r\n\r\n    if (y0 === y2) {\r\n      // Handle awkward all-on-same-line case as its own thing\r\n      a = b = x0;\r\n      if (x1 < a) {\r\n        a = x1;\r\n      } else if (x1 > b) {\r\n        b = x1;\r\n      }\r\n      if (x2 < a) {\r\n        a = x2;\r\n      } else if (x2 > b) {\r\n        b = x2;\r\n      }\r\n      this.drawHLine(a, y0, b - a + 1, color);\r\n      return;\r\n    }\r\n\r\n    const dx01 = x1 - x0;\r\n    const dy01 = y1 - y0;\r\n    const dx02 = x2 - x0;\r\n    const dy02 = y2 - y0;\r\n    const dx12 = x2 - x1;\r\n    const dy12 = y2 - y1;\r\n    let sa = 0;\r\n    let sb = 0;\r\n\r\n    if (y1 === y2) {\r\n      last = y1;\r\n    } else {\r\n      last = y1 - 1;\r\n    } // skip it\r\n\r\n    for (y = y0; y <= last; y++) {\r\n      a = x0 + Math.floor(sa / dy01);\r\n      b = x0 + Math.floor(sb / dy02);\r\n      sa += dx01;\r\n      sb += dx02;\r\n      if (a > b) {\r\n        b = [a, (a = b)][0];\r\n      } // this._swap(a,b);\r\n      this.drawHLine(a, y, b - a + 1, color);\r\n    }\r\n\r\n    sa = dx12 * (y - y1);\r\n    sb = dx02 * (y - y0);\r\n    for (; y <= y2; y++) {\r\n      a = x1 + Math.floor(sa / dy12);\r\n      b = x0 + Math.floor(sb / dy02);\r\n      sa += dx12;\r\n      sb += dx02;\r\n      if (a > b) {\r\n        b = [a, (a = b)][0];\r\n      } // this._swap(a,b);\r\n      this.drawHLine(a, y, b - a + 1, color);\r\n    }\r\n  }\r\n\r\n  public drawVLine(x: number, y: number, height: number, color: RGB16) {\r\n    if (x >= this.width || y >= this.height) {\r\n      return;\r\n    }\r\n    if (y + height - 1 >= this.height) {\r\n      height = this.height - y;\r\n    }\r\n\r\n    this.setAddrWindow(x, y, x, y + height - 1);\r\n\r\n    const hi = color >> 8;\r\n    const lo = color & 0xff;\r\n    const data: any = [];\r\n    while (height--) {\r\n      data.push(hi);\r\n      data.push(lo);\r\n    }\r\n    this.writeData(data);\r\n  }\r\n\r\n  public drawHLine(x: number, y: number, width: number, color: RGB16) {\r\n    if (x >= this.width || y >= this.height) {\r\n      return;\r\n    }\r\n    if (x + width - 1 >= this.width) {\r\n      width = this.width - x;\r\n    }\r\n\r\n    this.setAddrWindow(x, y, x + width - 1, y);\r\n\r\n    const hi = color >> 8;\r\n    const lo = color & 0xff;\r\n    const data: any = [];\r\n    while (width--) {\r\n      data.push(hi);\r\n      data.push(lo);\r\n    }\r\n    this.writeData(data);\r\n  }\r\n\r\n  public drawLine(x0: number, y0: number, x1: number, y1: number, color: RGB16) {\r\n    const step = Math.abs(y1 - y0) > Math.abs(x1 - x0);\r\n    if (step) {\r\n      y0 = [x0, (x0 = y0)][0]; // this._swap(x0, y0);\r\n      y1 = [x1, (x1 = y1)][0]; // this._swap(x1, y1);\r\n    }\r\n    if (x0 > x1) {\r\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\r\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\r\n    }\r\n\r\n    const dx = x1 - x0;\r\n    const dy = Math.abs(y1 - y0);\r\n\r\n    let err = dx / 2;\r\n    const ystep = y0 < y1 ? 1 : -1;\r\n\r\n    for (; x0 <= x1; x0++) {\r\n      if (step) {\r\n        this.drawPixel(y0, x0, color);\r\n      } else {\r\n        this.drawPixel(x0, y0, color);\r\n      }\r\n      err -= dy;\r\n      if (err < 0) {\r\n        y0 += ystep;\r\n        err += dx;\r\n      }\r\n    }\r\n  }\r\n\r\n  public drawPixel(x: number, y: number, color: RGB16) {\r\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\r\n      return;\r\n    }\r\n\r\n    this.setAddrWindow(x, y, x + 1, y + 1);\r\n    this.writeData([color >> 8, color & 0xff]);\r\n  }\r\n\r\n  public drawChar(x: number, y: number, char: string, color: RGB16, backgroundColor: RGB16, size?: number) {\r\n    //  bg = bg || color;\r\n    size = size || 1;\r\n    if (\r\n      x >= this.width || // Clip right\r\n      y >= this.height || // Clip bottom\r\n      x + 6 * size - 1 < 0 || // Clip left\r\n      y + 8 * size - 1 < 0\r\n    ) {\r\n      // Clip top\r\n      return;\r\n    }\r\n\r\n    if (color !== backgroundColor) {\r\n      this.drawChar2(x, y, char, color, backgroundColor, size);\r\n      return;\r\n    }\r\n\r\n    const c = char.charCodeAt(0);\r\n    for (let i = 0; i < 6; i++) {\r\n      let line = i === 5 ? 0 : font[c * 5 + i];\r\n      for (let j = 0; j < 8; j++) {\r\n        if (line & 0x1) {\r\n          if (size === 1) {\r\n            // default size\r\n            this.drawPixel(x + i, y + j, color);\r\n          } else {\r\n            // big size\r\n            this.fillRect(x + i * size, y + j * size, size, size, color);\r\n          }\r\n        } else if (backgroundColor !== color) {\r\n          if (size === 1) {\r\n            // default size\r\n            this.drawPixel(x + i, y + j, backgroundColor);\r\n          } else {\r\n            // big size\r\n            this.fillRect(x + i * size, y + j * size, size, size, backgroundColor);\r\n          }\r\n        }\r\n        line >>= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  public drawString(\r\n    x: number,\r\n    y: number,\r\n    string: string,\r\n    color: RGB16,\r\n    backgroundColor: RGB16,\r\n    size?: number,\r\n    wrap?: boolean,\r\n  ): [number, number] {\r\n    //  bg = bg || color;\r\n    size = size || 1;\r\n    //  wrap = wrap || true;\r\n    for (let n = 0; n < string.length; n++) {\r\n      const c = string.charAt(n);\r\n      if (c === \"\\n\") {\r\n        y += size * 8;\r\n        x = 0;\r\n      } else if (c === \"\\r\") {\r\n        // skip em\r\n      } else {\r\n        this.drawChar(x, y, c, color, backgroundColor, size);\r\n        x += size * 6;\r\n        if (wrap && x > this.width - size * 6) {\r\n          y += size * 8;\r\n          x = 0;\r\n        }\r\n      }\r\n    }\r\n    return [x, y];\r\n  }\r\n\r\n  public drawContextBound(\r\n    context: CanvasRenderingContext2D,\r\n    x0: number,\r\n    y0: number,\r\n    width: number,\r\n    height: number,\r\n    x1: number,\r\n    y1: number,\r\n    gray: boolean,\r\n  ) {\r\n    x0 = x0 || 0;\r\n    y0 = y0 || 0;\r\n    width = width || context.canvas.clientWidth;\r\n    height = height || context.canvas.clientHeight;\r\n    x1 = x1 || 0;\r\n    y1 = y1 || 0;\r\n    gray = gray || false;\r\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\r\n    const imageData = context.getImageData(x0, y0, width, height).data;\r\n    const rgb: number[] = [];\r\n    for (let n = 0; n < imageData.length; n += 4) {\r\n      const r = imageData[n + 0];\r\n      const g = imageData[n + 1];\r\n      const b = imageData[n + 2];\r\n      if (!gray) {\r\n        rgb.push(r);\r\n        rgb.push(g);\r\n        rgb.push(b);\r\n      } else {\r\n        const gs = Math.round(0.299 * r + 0.587 * g + 0.114 * b);\r\n        rgb.push(gs);\r\n        rgb.push(gs);\r\n        rgb.push(gs);\r\n      }\r\n    }\r\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\r\n    this.setAddrWindow(x1, y1, x1 + width - 1, y1 + height - 1);\r\n    this._writeBuffer(rgb);\r\n    this._writeBuffer(); // for flush\r\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // 16bit/pixel\r\n  }\r\n\r\n  public drawContext(context: CanvasRenderingContext2D, gray: boolean) {\r\n    gray = gray || false;\r\n    this.drawContextBound(context, 0, 0, this.width, this.height, 0, 0, gray);\r\n  }\r\n\r\n  public rawBound(x: number, y: number, width: number, height: number, pixels: RGB24[]) {\r\n    const rgb: any = [];\r\n    pixels.forEach((v: number) => {\r\n      rgb.push((v & 0xff0000) >> 16);\r\n      rgb.push((v & 0xff00) >> 8);\r\n      rgb.push(v & 0xff);\r\n    });\r\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\r\n    this.setAddrWindow(x, y, x + width - 1, y + height - 1);\r\n    this._writeBuffer(rgb);\r\n    this._writeBuffer(); // for flush\r\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // 16bit/pixel\r\n  }\r\n\r\n  public raw(pixels: RGB24[]) {\r\n    this.rawBound(0, 0, this.width, this.height, pixels);\r\n  }\r\n\r\n  public _setPresetColor() {\r\n    this.color = {\r\n      AliceBlue: 0xf7df,\r\n      AntiqueWhite: 0xff5a,\r\n      Aqua: 0x07ff,\r\n      Aquamarine: 0x7ffa,\r\n      Azure: 0xf7ff,\r\n      Beige: 0xf7bb,\r\n      Bisque: 0xff38,\r\n      Black: 0x0000,\r\n      BlanchedAlmond: 0xff59,\r\n      Blue: 0x001f,\r\n      BlueViolet: 0x895c,\r\n      Brown: 0xa145,\r\n      BurlyWood: 0xddd0,\r\n      CadetBlue: 0x5cf4,\r\n      Chartreuse: 0x7fe0,\r\n      Chocolate: 0xd343,\r\n      Coral: 0xfbea,\r\n      CornflowerBlue: 0x64bd,\r\n      Cornsilk: 0xffdb,\r\n      Crimson: 0xd8a7,\r\n      Cyan: 0x07ff,\r\n      DarkBlue: 0x0011,\r\n      DarkCyan: 0x0451,\r\n      DarkGoldenRod: 0xbc21,\r\n      DarkGray: 0xad55,\r\n      DarkGreen: 0x0320,\r\n      DarkKhaki: 0xbdad,\r\n      DarkMagenta: 0x8811,\r\n      DarkOliveGreen: 0x5345,\r\n      DarkOrange: 0xfc60,\r\n      DarkOrchid: 0x9999,\r\n      DarkRed: 0x8800,\r\n      DarkSalmon: 0xecaf,\r\n      DarkSeaGreen: 0x8df1,\r\n      DarkSlateBlue: 0x49f1,\r\n      DarkSlateGray: 0x2a69,\r\n      DarkTurquoise: 0x067a,\r\n      DarkViolet: 0x901a,\r\n      DeepPink: 0xf8b2,\r\n      DeepSkyBlue: 0x05ff,\r\n      DimGray: 0x6b4d,\r\n      DodgerBlue: 0x1c9f,\r\n      FireBrick: 0xb104,\r\n      FloralWhite: 0xffde,\r\n      ForestGreen: 0x2444,\r\n      Fuchsia: 0xf81f,\r\n      Gainsboro: 0xdefb,\r\n      GhostWhite: 0xffdf,\r\n      Gold: 0xfea0,\r\n      GoldenRod: 0xdd24,\r\n      Gray: 0x8410,\r\n      Green: 0x0400,\r\n      GreenYellow: 0xafe5,\r\n      HoneyDew: 0xf7fe,\r\n      HotPink: 0xfb56,\r\n      IndianRed: 0xcaeb,\r\n      Indigo: 0x4810,\r\n      Ivory: 0xfffe,\r\n      Khaki: 0xf731,\r\n      Lavender: 0xe73f,\r\n      LavenderBlush: 0xff9e,\r\n      LawnGreen: 0x7fe0,\r\n      LemonChiffon: 0xffd9,\r\n      LightBlue: 0xaedc,\r\n      LightCoral: 0xf410,\r\n      LightCyan: 0xe7ff,\r\n      LightGoldenRodYellow: 0xffda,\r\n      LightGray: 0xd69a,\r\n      LightGreen: 0x9772,\r\n      LightPink: 0xfdb8,\r\n      LightSalmon: 0xfd0f,\r\n      LightSeaGreen: 0x2595,\r\n      LightSkyBlue: 0x867f,\r\n      LightSlateGray: 0x7453,\r\n      LightSteelBlue: 0xb63b,\r\n      LightYellow: 0xfffc,\r\n      Lime: 0x07e0,\r\n      LimeGreen: 0x3666,\r\n      Linen: 0xff9c,\r\n      Magenta: 0xf81f,\r\n      Maroon: 0x8000,\r\n      MediumAquaMarine: 0x6675,\r\n      MediumBlue: 0x0019,\r\n      MediumOrchid: 0xbaba,\r\n      MediumPurple: 0x939b,\r\n      MediumSeaGreen: 0x3d8e,\r\n      MediumSlateBlue: 0x7b5d,\r\n      MediumSpringGreen: 0x07d3,\r\n      MediumTurquoise: 0x4e99,\r\n      MediumVioletRed: 0xc0b0,\r\n      MidnightBlue: 0x18ce,\r\n      MintCream: 0xf7ff,\r\n      MistyRose: 0xff3c,\r\n      Moccasin: 0xff36,\r\n      NavajoWhite: 0xfef5,\r\n      Navy: 0x0010,\r\n      OldLace: 0xffbc,\r\n      Olive: 0x8400,\r\n      OliveDrab: 0x6c64,\r\n      Orange: 0xfd20,\r\n      OrangeRed: 0xfa20,\r\n      Orchid: 0xdb9a,\r\n      PaleGoldenRod: 0xef55,\r\n      PaleGreen: 0x9fd3,\r\n      PaleTurquoise: 0xaf7d,\r\n      PaleVioletRed: 0xdb92,\r\n      PapayaWhip: 0xff7a,\r\n      PeachPuff: 0xfed7,\r\n      Peru: 0xcc27,\r\n      Pink: 0xfe19,\r\n      Plum: 0xdd1b,\r\n      PowderBlue: 0xb71c,\r\n      Purple: 0x8010,\r\n      RebeccaPurple: 0x6193,\r\n      Red: 0xf800,\r\n      RosyBrown: 0xbc71,\r\n      RoyalBlue: 0x435c,\r\n      SaddleBrown: 0x8a22,\r\n      Salmon: 0xfc0e,\r\n      SandyBrown: 0xf52c,\r\n      SeaGreen: 0x2c4a,\r\n      SeaShell: 0xffbd,\r\n      Sienna: 0xa285,\r\n      Silver: 0xc618,\r\n      SkyBlue: 0x867d,\r\n      SlateBlue: 0x6ad9,\r\n      SlateGray: 0x7412,\r\n      Snow: 0xffdf,\r\n      SpringGreen: 0x07ef,\r\n      SteelBlue: 0x4416,\r\n      Tan: 0xd5b1,\r\n      Teal: 0x0410,\r\n      Thistle: 0xddfb,\r\n      Tomato: 0xfb08,\r\n      Turquoise: 0x471a,\r\n      Violet: 0xec1d,\r\n      Wheat: 0xf6f6,\r\n      White: 0xffff,\r\n      WhiteSmoke: 0xf7be,\r\n      Yellow: 0xffe0,\r\n      YellowGreen: 0x9e66,\r\n    };\r\n  }\r\n\r\n  private _drawCircleHelper(x0: number, y0: number, r: number, cornername: number, color: RGB16) {\r\n    let f = 1 - r;\r\n    let ddF_x = 1;\r\n    let ddF_y = -2 * r;\r\n    let x = 0;\r\n    let y = r;\r\n\r\n    while (x < y) {\r\n      if (f >= 0) {\r\n        y--;\r\n        ddF_y += 2;\r\n        f += ddF_y;\r\n      }\r\n      x++;\r\n      ddF_x += 2;\r\n      f += ddF_x;\r\n      if (cornername & 0x4) {\r\n        this.drawPixel(x0 + x, y0 + y, color);\r\n        this.drawPixel(x0 + y, y0 + x, color);\r\n      }\r\n      if (cornername & 0x2) {\r\n        this.drawPixel(x0 + x, y0 - y, color);\r\n        this.drawPixel(x0 + y, y0 - x, color);\r\n      }\r\n      if (cornername & 0x8) {\r\n        this.drawPixel(x0 - y, y0 + x, color);\r\n        this.drawPixel(x0 - x, y0 + y, color);\r\n      }\r\n      if (cornername & 0x1) {\r\n        this.drawPixel(x0 - y, y0 - x, color);\r\n        this.drawPixel(x0 - x, y0 - y, color);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _fillCircleHelper(x0: number, y0: number, r: number, cornername: number, delta: number, color: RGB16) {\r\n    let f = 1 - r;\r\n    let ddF_x = 1;\r\n    let ddF_y = -2 * r;\r\n    let x = 0;\r\n    let y = r;\r\n\r\n    while (x < y) {\r\n      if (f >= 0) {\r\n        y--;\r\n        ddF_y += 2;\r\n        f += ddF_y;\r\n      }\r\n      x++;\r\n      ddF_x += 2;\r\n      f += ddF_x;\r\n\r\n      if (cornername & 0x1) {\r\n        this.drawVLine(x0 + x, y0 - y, 2 * y + 1 + delta, color);\r\n        this.drawVLine(x0 + y, y0 - x, 2 * x + 1 + delta, color);\r\n      }\r\n      if (cornername & 0x2) {\r\n        this.drawVLine(x0 - x, y0 - y, 2 * y + 1 + delta, color);\r\n        this.drawVLine(x0 - y, y0 - x, 2 * x + 1 + delta, color);\r\n      }\r\n    }\r\n  }\r\n\r\n  private drawChar2(x: number, y: number, ch: string, color: RGB16, bg: RGB16, size: number) {\r\n    //  bg = bg || color;\r\n    size = size || 1;\r\n    if (\r\n      x >= this.width || // Clip right\r\n      y >= this.height || // Clip bottom\r\n      x + 6 * size - 1 < 0 || // Clip left\r\n      y + 8 * size - 1 < 0 // Clip top\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const pixels = new Array(6 * 8 * size * size);\r\n    const c = ch.charCodeAt(0);\r\n    for (let i = 0; i < 6; i++) {\r\n      let line = i === 5 ? 0 : font[c * 5 + i];\r\n      for (let j = 0; j < 8; j++) {\r\n        const cl = line & 0x1 ? color : bg;\r\n        for (let w = 0; w < size; w++) {\r\n          for (let h = 0; h < size; h++) {\r\n            pixels[\r\n            i * (1 * size) + w + (j * (6 * size * size) + h * (6 * size))\r\n              ] = cl;\r\n          }\r\n        }\r\n        line >>= 1;\r\n      }\r\n    }\r\n    this.rawBound16(x, y, 6 * size, 8 * size, pixels);\r\n  }\r\n\r\n  private rawBound16(x: number, y: number, width: number, height: number, pixels: number[]) {\r\n    const rgb: number[] = [];\r\n    pixels.forEach((v: number) => {\r\n      rgb.push((v & 0xff00) >> 8);\r\n      rgb.push(v & 0xff);\r\n    });\r\n    this.setAddrWindow(x, y, x + width - 1, y + height - 1);\r\n    this._writeBuffer(rgb);\r\n    this._writeBuffer(); // for flush\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------------\r\n\r\n// commands\r\n// const INITR_GREENTAB = 0x0;\r\n// const INITR_REDTAB = 0x1;\r\n// const INITR_BLACKTAB = 0x2;\r\n\r\nconst ST7735_TFTWIDTH = 128;\r\nconst ST7735_TFTHEIGHT = 160;\r\n\r\n// const ST7735_NOP = 0x00;\r\n// const ST7735_SWRESET = 0x01;\r\n// const ST7735_RDDID = 0x04;\r\n// const ST7735_RDDST = 0x09;\r\n// const ST7735_RDDPM = 0x0a;\r\n\r\n// const ST7735_SLPIN = 0x10;\r\nconst ST7735_SLPOUT = 0x11;\r\n// const ST7735_PTLON = 0x12;\r\n// const ST7735_NORON = 0x13;\r\n\r\nconst ST7735_INVOFF = 0x20;\r\nconst ST7735_INVON = 0x21;\r\nconst ST7735_DISPOFF = 0x28;\r\nconst ST7735_DISPON = 0x29;\r\nconst ST7735_CASET = 0x2a;\r\nconst ST7735_RASET = 0x2b;\r\nconst ST7735_RAMWR = 0x2c;\r\n// const ST7735_RAMRD = 0x2e;\r\n\r\n// const ST7735_PTLAR = 0x30;\r\nconst ST7735_COLMOD = 0x3a;\r\nconst ST7735_MADCTL = 0x36;\r\n\r\nconst ST7735_FRMCTR1 = 0xb1;\r\nconst ST7735_FRMCTR2 = 0xb2;\r\nconst ST7735_FRMCTR3 = 0xb3;\r\nconst ST7735_INVCTR = 0xb4;\r\n// const ST7735_DISSET5 = 0xb6;\r\n\r\nconst ST7735_PWCTR1 = 0xc0;\r\nconst ST7735_PWCTR2 = 0xc1;\r\nconst ST7735_PWCTR3 = 0xc2;\r\nconst ST7735_PWCTR4 = 0xc3;\r\nconst ST7735_PWCTR5 = 0xc4;\r\nconst ST7735_VMCTR1 = 0xc5;\r\n\r\n// const ST7735_RDID1 = 0xda;\r\n// const ST7735_RDID2 = 0xdb;\r\n// const ST7735_RDID3 = 0xdc;\r\n// const ST7735_RDID4 = 0xdd;\r\n\r\n// const ST7735_PWCTR6 = 0xfc;\r\n\r\nconst ST7735_GMCTRP1 = 0xe0;\r\nconst ST7735_GMCTRN1 = 0xe1;\r\n\r\n// Color definitions\r\n// const ST7735_BLACK = 0x0000;\r\n// const ST7735_BLUE = 0x001f;\r\n// const ST7735_RED = 0xf800;\r\n// const ST7735_GREEN = 0x07e0;\r\n// const ST7735_CYAN = 0x07ff;\r\n// const ST7735_MAGENTA = 0xf81f;\r\n// const ST7735_YELLOW = 0xffe0;\r\n// const ST7735_WHITE = 0xffff;\r\n\r\nconst ST7735_18bit = 0x06; // 18bit/pixel\r\nconst ST7735_16bit = 0x05; // 16bit/pixel\r\n\r\n// standard ascii 5x7 font\r\nconst font = [\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x3e,\r\n  0x5b,\r\n  0x4f,\r\n  0x5b,\r\n  0x3e,\r\n  0x3e,\r\n  0x6b,\r\n  0x4f,\r\n  0x6b,\r\n  0x3e,\r\n  0x1c,\r\n  0x3e,\r\n  0x7c,\r\n  0x3e,\r\n  0x1c,\r\n  0x18,\r\n  0x3c,\r\n  0x7e,\r\n  0x3c,\r\n  0x18,\r\n  0x1c,\r\n  0x57,\r\n  0x7d,\r\n  0x57,\r\n  0x1c,\r\n  0x1c,\r\n  0x5e,\r\n  0x7f,\r\n  0x5e,\r\n  0x1c,\r\n  0x00,\r\n  0x18,\r\n  0x3c,\r\n  0x18,\r\n  0x00,\r\n  0xff,\r\n  0xe7,\r\n  0xc3,\r\n  0xe7,\r\n  0xff,\r\n  0x00,\r\n  0x18,\r\n  0x24,\r\n  0x18,\r\n  0x00,\r\n  0xff,\r\n  0xe7,\r\n  0xdb,\r\n  0xe7,\r\n  0xff,\r\n  0x30,\r\n  0x48,\r\n  0x3a,\r\n  0x06,\r\n  0x0e,\r\n  0x26,\r\n  0x29,\r\n  0x79,\r\n  0x29,\r\n  0x26,\r\n  0x40,\r\n  0x7f,\r\n  0x05,\r\n  0x05,\r\n  0x07,\r\n  0x40,\r\n  0x7f,\r\n  0x05,\r\n  0x25,\r\n  0x3f,\r\n  0x5a,\r\n  0x3c,\r\n  0xe7,\r\n  0x3c,\r\n  0x5a,\r\n  0x7f,\r\n  0x3e,\r\n  0x1c,\r\n  0x1c,\r\n  0x08,\r\n  0x08,\r\n  0x1c,\r\n  0x1c,\r\n  0x3e,\r\n  0x7f,\r\n  0x14,\r\n  0x22,\r\n  0x7f,\r\n  0x22,\r\n  0x14,\r\n  0x5f,\r\n  0x5f,\r\n  0x00,\r\n  0x5f,\r\n  0x5f,\r\n  0x06,\r\n  0x09,\r\n  0x7f,\r\n  0x01,\r\n  0x7f,\r\n  0x00,\r\n  0x66,\r\n  0x89,\r\n  0x95,\r\n  0x6a,\r\n  0x60,\r\n  0x60,\r\n  0x60,\r\n  0x60,\r\n  0x60,\r\n  0x94,\r\n  0xa2,\r\n  0xff,\r\n  0xa2,\r\n  0x94,\r\n  0x08,\r\n  0x04,\r\n  0x7e,\r\n  0x04,\r\n  0x08,\r\n  0x10,\r\n  0x20,\r\n  0x7e,\r\n  0x20,\r\n  0x10,\r\n  0x08,\r\n  0x08,\r\n  0x2a,\r\n  0x1c,\r\n  0x08,\r\n  0x08,\r\n  0x1c,\r\n  0x2a,\r\n  0x08,\r\n  0x08,\r\n  0x1e,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x0c,\r\n  0x1e,\r\n  0x0c,\r\n  0x1e,\r\n  0x0c,\r\n  0x30,\r\n  0x38,\r\n  0x3e,\r\n  0x38,\r\n  0x30,\r\n  0x06,\r\n  0x0e,\r\n  0x3e,\r\n  0x0e,\r\n  0x06,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x5f,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x07,\r\n  0x00,\r\n  0x07,\r\n  0x00,\r\n  0x14,\r\n  0x7f,\r\n  0x14,\r\n  0x7f,\r\n  0x14,\r\n  0x24,\r\n  0x2a,\r\n  0x7f,\r\n  0x2a,\r\n  0x12,\r\n  0x23,\r\n  0x13,\r\n  0x08,\r\n  0x64,\r\n  0x62,\r\n  0x36,\r\n  0x49,\r\n  0x56,\r\n  0x20,\r\n  0x50,\r\n  0x00,\r\n  0x08,\r\n  0x07,\r\n  0x03,\r\n  0x00,\r\n  0x00,\r\n  0x1c,\r\n  0x22,\r\n  0x41,\r\n  0x00,\r\n  0x00,\r\n  0x41,\r\n  0x22,\r\n  0x1c,\r\n  0x00,\r\n  0x2a,\r\n  0x1c,\r\n  0x7f,\r\n  0x1c,\r\n  0x2a,\r\n  0x08,\r\n  0x08,\r\n  0x3e,\r\n  0x08,\r\n  0x08,\r\n  0x00,\r\n  0x80,\r\n  0x70,\r\n  0x30,\r\n  0x00,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x00,\r\n  0x00,\r\n  0x60,\r\n  0x60,\r\n  0x00,\r\n  0x20,\r\n  0x10,\r\n  0x08,\r\n  0x04,\r\n  0x02,\r\n  0x3e,\r\n  0x51,\r\n  0x49,\r\n  0x45,\r\n  0x3e,\r\n  0x00,\r\n  0x42,\r\n  0x7f,\r\n  0x40,\r\n  0x00,\r\n  0x72,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x46,\r\n  0x21,\r\n  0x41,\r\n  0x49,\r\n  0x4d,\r\n  0x33,\r\n  0x18,\r\n  0x14,\r\n  0x12,\r\n  0x7f,\r\n  0x10,\r\n  0x27,\r\n  0x45,\r\n  0x45,\r\n  0x45,\r\n  0x39,\r\n  0x3c,\r\n  0x4a,\r\n  0x49,\r\n  0x49,\r\n  0x31,\r\n  0x41,\r\n  0x21,\r\n  0x11,\r\n  0x09,\r\n  0x07,\r\n  0x36,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x36,\r\n  0x46,\r\n  0x49,\r\n  0x49,\r\n  0x29,\r\n  0x1e,\r\n  0x00,\r\n  0x00,\r\n  0x14,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x40,\r\n  0x34,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x08,\r\n  0x14,\r\n  0x22,\r\n  0x41,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x00,\r\n  0x41,\r\n  0x22,\r\n  0x14,\r\n  0x08,\r\n  0x02,\r\n  0x01,\r\n  0x59,\r\n  0x09,\r\n  0x06,\r\n  0x3e,\r\n  0x41,\r\n  0x5d,\r\n  0x59,\r\n  0x4e,\r\n  0x7c,\r\n  0x12,\r\n  0x11,\r\n  0x12,\r\n  0x7c,\r\n  0x7f,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x36,\r\n  0x3e,\r\n  0x41,\r\n  0x41,\r\n  0x41,\r\n  0x22,\r\n  0x7f,\r\n  0x41,\r\n  0x41,\r\n  0x41,\r\n  0x3e,\r\n  0x7f,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x41,\r\n  0x7f,\r\n  0x09,\r\n  0x09,\r\n  0x09,\r\n  0x01,\r\n  0x3e,\r\n  0x41,\r\n  0x41,\r\n  0x51,\r\n  0x73,\r\n  0x7f,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x7f,\r\n  0x00,\r\n  0x41,\r\n  0x7f,\r\n  0x41,\r\n  0x00,\r\n  0x20,\r\n  0x40,\r\n  0x41,\r\n  0x3f,\r\n  0x01,\r\n  0x7f,\r\n  0x08,\r\n  0x14,\r\n  0x22,\r\n  0x41,\r\n  0x7f,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x7f,\r\n  0x02,\r\n  0x1c,\r\n  0x02,\r\n  0x7f,\r\n  0x7f,\r\n  0x04,\r\n  0x08,\r\n  0x10,\r\n  0x7f,\r\n  0x3e,\r\n  0x41,\r\n  0x41,\r\n  0x41,\r\n  0x3e,\r\n  0x7f,\r\n  0x09,\r\n  0x09,\r\n  0x09,\r\n  0x06,\r\n  0x3e,\r\n  0x41,\r\n  0x51,\r\n  0x21,\r\n  0x5e,\r\n  0x7f,\r\n  0x09,\r\n  0x19,\r\n  0x29,\r\n  0x46,\r\n  0x26,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x32,\r\n  0x03,\r\n  0x01,\r\n  0x7f,\r\n  0x01,\r\n  0x03,\r\n  0x3f,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x3f,\r\n  0x1f,\r\n  0x20,\r\n  0x40,\r\n  0x20,\r\n  0x1f,\r\n  0x3f,\r\n  0x40,\r\n  0x38,\r\n  0x40,\r\n  0x3f,\r\n  0x63,\r\n  0x14,\r\n  0x08,\r\n  0x14,\r\n  0x63,\r\n  0x03,\r\n  0x04,\r\n  0x78,\r\n  0x04,\r\n  0x03,\r\n  0x61,\r\n  0x59,\r\n  0x49,\r\n  0x4d,\r\n  0x43,\r\n  0x00,\r\n  0x7f,\r\n  0x41,\r\n  0x41,\r\n  0x41,\r\n  0x02,\r\n  0x04,\r\n  0x08,\r\n  0x10,\r\n  0x20,\r\n  0x00,\r\n  0x41,\r\n  0x41,\r\n  0x41,\r\n  0x7f,\r\n  0x04,\r\n  0x02,\r\n  0x01,\r\n  0x02,\r\n  0x04,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x00,\r\n  0x03,\r\n  0x07,\r\n  0x08,\r\n  0x00,\r\n  0x20,\r\n  0x54,\r\n  0x54,\r\n  0x78,\r\n  0x40,\r\n  0x7f,\r\n  0x28,\r\n  0x44,\r\n  0x44,\r\n  0x38,\r\n  0x38,\r\n  0x44,\r\n  0x44,\r\n  0x44,\r\n  0x28,\r\n  0x38,\r\n  0x44,\r\n  0x44,\r\n  0x28,\r\n  0x7f,\r\n  0x38,\r\n  0x54,\r\n  0x54,\r\n  0x54,\r\n  0x18,\r\n  0x00,\r\n  0x08,\r\n  0x7e,\r\n  0x09,\r\n  0x02,\r\n  0x18,\r\n  0xa4,\r\n  0xa4,\r\n  0x9c,\r\n  0x78,\r\n  0x7f,\r\n  0x08,\r\n  0x04,\r\n  0x04,\r\n  0x78,\r\n  0x00,\r\n  0x44,\r\n  0x7d,\r\n  0x40,\r\n  0x00,\r\n  0x20,\r\n  0x40,\r\n  0x40,\r\n  0x3d,\r\n  0x00,\r\n  0x7f,\r\n  0x10,\r\n  0x28,\r\n  0x44,\r\n  0x00,\r\n  0x00,\r\n  0x41,\r\n  0x7f,\r\n  0x40,\r\n  0x00,\r\n  0x7c,\r\n  0x04,\r\n  0x78,\r\n  0x04,\r\n  0x78,\r\n  0x7c,\r\n  0x08,\r\n  0x04,\r\n  0x04,\r\n  0x78,\r\n  0x38,\r\n  0x44,\r\n  0x44,\r\n  0x44,\r\n  0x38,\r\n  0xfc,\r\n  0x18,\r\n  0x24,\r\n  0x24,\r\n  0x18,\r\n  0x18,\r\n  0x24,\r\n  0x24,\r\n  0x18,\r\n  0xfc,\r\n  0x7c,\r\n  0x08,\r\n  0x04,\r\n  0x04,\r\n  0x08,\r\n  0x48,\r\n  0x54,\r\n  0x54,\r\n  0x54,\r\n  0x24,\r\n  0x04,\r\n  0x04,\r\n  0x3f,\r\n  0x44,\r\n  0x24,\r\n  0x3c,\r\n  0x40,\r\n  0x40,\r\n  0x20,\r\n  0x7c,\r\n  0x1c,\r\n  0x20,\r\n  0x40,\r\n  0x20,\r\n  0x1c,\r\n  0x3c,\r\n  0x40,\r\n  0x30,\r\n  0x40,\r\n  0x3c,\r\n  0x44,\r\n  0x28,\r\n  0x10,\r\n  0x28,\r\n  0x44,\r\n  0x4c,\r\n  0x90,\r\n  0x90,\r\n  0x90,\r\n  0x7c,\r\n  0x44,\r\n  0x64,\r\n  0x54,\r\n  0x4c,\r\n  0x44,\r\n  0x00,\r\n  0x08,\r\n  0x36,\r\n  0x41,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x77,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x41,\r\n  0x36,\r\n  0x08,\r\n  0x00,\r\n  0x02,\r\n  0x01,\r\n  0x02,\r\n  0x04,\r\n  0x02,\r\n  0x3c,\r\n  0x26,\r\n  0x23,\r\n  0x26,\r\n  0x3c,\r\n  0x1e,\r\n  0xa1,\r\n  0xa1,\r\n  0x61,\r\n  0x12,\r\n  0x3a,\r\n  0x40,\r\n  0x40,\r\n  0x20,\r\n  0x7a,\r\n  0x38,\r\n  0x54,\r\n  0x54,\r\n  0x55,\r\n  0x59,\r\n  0x21,\r\n  0x55,\r\n  0x55,\r\n  0x79,\r\n  0x41,\r\n  0x21,\r\n  0x54,\r\n  0x54,\r\n  0x78,\r\n  0x41,\r\n  0x21,\r\n  0x55,\r\n  0x54,\r\n  0x78,\r\n  0x40,\r\n  0x20,\r\n  0x54,\r\n  0x55,\r\n  0x79,\r\n  0x40,\r\n  0x0c,\r\n  0x1e,\r\n  0x52,\r\n  0x72,\r\n  0x12,\r\n  0x39,\r\n  0x55,\r\n  0x55,\r\n  0x55,\r\n  0x59,\r\n  0x39,\r\n  0x54,\r\n  0x54,\r\n  0x54,\r\n  0x59,\r\n  0x39,\r\n  0x55,\r\n  0x54,\r\n  0x54,\r\n  0x58,\r\n  0x00,\r\n  0x00,\r\n  0x45,\r\n  0x7c,\r\n  0x41,\r\n  0x00,\r\n  0x02,\r\n  0x45,\r\n  0x7d,\r\n  0x42,\r\n  0x00,\r\n  0x01,\r\n  0x45,\r\n  0x7c,\r\n  0x40,\r\n  0xf0,\r\n  0x29,\r\n  0x24,\r\n  0x29,\r\n  0xf0,\r\n  0xf0,\r\n  0x28,\r\n  0x25,\r\n  0x28,\r\n  0xf0,\r\n  0x7c,\r\n  0x54,\r\n  0x55,\r\n  0x45,\r\n  0x00,\r\n  0x20,\r\n  0x54,\r\n  0x54,\r\n  0x7c,\r\n  0x54,\r\n  0x7c,\r\n  0x0a,\r\n  0x09,\r\n  0x7f,\r\n  0x49,\r\n  0x32,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x32,\r\n  0x32,\r\n  0x48,\r\n  0x48,\r\n  0x48,\r\n  0x32,\r\n  0x32,\r\n  0x4a,\r\n  0x48,\r\n  0x48,\r\n  0x30,\r\n  0x3a,\r\n  0x41,\r\n  0x41,\r\n  0x21,\r\n  0x7a,\r\n  0x3a,\r\n  0x42,\r\n  0x40,\r\n  0x20,\r\n  0x78,\r\n  0x00,\r\n  0x9d,\r\n  0xa0,\r\n  0xa0,\r\n  0x7d,\r\n  0x39,\r\n  0x44,\r\n  0x44,\r\n  0x44,\r\n  0x39,\r\n  0x3d,\r\n  0x40,\r\n  0x40,\r\n  0x40,\r\n  0x3d,\r\n  0x3c,\r\n  0x24,\r\n  0xff,\r\n  0x24,\r\n  0x24,\r\n  0x48,\r\n  0x7e,\r\n  0x49,\r\n  0x43,\r\n  0x66,\r\n  0x2b,\r\n  0x2f,\r\n  0xfc,\r\n  0x2f,\r\n  0x2b,\r\n  0xff,\r\n  0x09,\r\n  0x29,\r\n  0xf6,\r\n  0x20,\r\n  0xc0,\r\n  0x88,\r\n  0x7e,\r\n  0x09,\r\n  0x03,\r\n  0x20,\r\n  0x54,\r\n  0x54,\r\n  0x79,\r\n  0x41,\r\n  0x00,\r\n  0x00,\r\n  0x44,\r\n  0x7d,\r\n  0x41,\r\n  0x30,\r\n  0x48,\r\n  0x48,\r\n  0x4a,\r\n  0x32,\r\n  0x38,\r\n  0x40,\r\n  0x40,\r\n  0x22,\r\n  0x7a,\r\n  0x00,\r\n  0x7a,\r\n  0x0a,\r\n  0x0a,\r\n  0x72,\r\n  0x7d,\r\n  0x0d,\r\n  0x19,\r\n  0x31,\r\n  0x7d,\r\n  0x26,\r\n  0x29,\r\n  0x29,\r\n  0x2f,\r\n  0x28,\r\n  0x26,\r\n  0x29,\r\n  0x29,\r\n  0x29,\r\n  0x26,\r\n  0x30,\r\n  0x48,\r\n  0x4d,\r\n  0x40,\r\n  0x20,\r\n  0x38,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x08,\r\n  0x38,\r\n  0x2f,\r\n  0x10,\r\n  0xc8,\r\n  0xac,\r\n  0xba,\r\n  0x2f,\r\n  0x10,\r\n  0x28,\r\n  0x34,\r\n  0xfa,\r\n  0x00,\r\n  0x00,\r\n  0x7b,\r\n  0x00,\r\n  0x00,\r\n  0x08,\r\n  0x14,\r\n  0x2a,\r\n  0x14,\r\n  0x22,\r\n  0x22,\r\n  0x14,\r\n  0x2a,\r\n  0x14,\r\n  0x08,\r\n  0xaa,\r\n  0x00,\r\n  0x55,\r\n  0x00,\r\n  0xaa,\r\n  0xaa,\r\n  0x55,\r\n  0xaa,\r\n  0x55,\r\n  0xaa,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0xff,\r\n  0x00,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0xff,\r\n  0x00,\r\n  0x10,\r\n  0x10,\r\n  0xff,\r\n  0x00,\r\n  0xff,\r\n  0x10,\r\n  0x10,\r\n  0xf0,\r\n  0x10,\r\n  0xf0,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0xfc,\r\n  0x00,\r\n  0x14,\r\n  0x14,\r\n  0xf7,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0xff,\r\n  0x14,\r\n  0x14,\r\n  0xf4,\r\n  0x04,\r\n  0xfc,\r\n  0x14,\r\n  0x14,\r\n  0x17,\r\n  0x10,\r\n  0x1f,\r\n  0x10,\r\n  0x10,\r\n  0x1f,\r\n  0x10,\r\n  0x1f,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x1f,\r\n  0x00,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0xf0,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x1f,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x1f,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0xf0,\r\n  0x10,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0xff,\r\n  0x10,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x14,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0x00,\r\n  0x1f,\r\n  0x10,\r\n  0x17,\r\n  0x00,\r\n  0x00,\r\n  0xfc,\r\n  0x04,\r\n  0xf4,\r\n  0x14,\r\n  0x14,\r\n  0x17,\r\n  0x10,\r\n  0x17,\r\n  0x14,\r\n  0x14,\r\n  0xf4,\r\n  0x04,\r\n  0xf4,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x00,\r\n  0xf7,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0xf7,\r\n  0x00,\r\n  0xf7,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0x17,\r\n  0x14,\r\n  0x10,\r\n  0x10,\r\n  0x1f,\r\n  0x10,\r\n  0x1f,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0xf4,\r\n  0x14,\r\n  0x10,\r\n  0x10,\r\n  0xf0,\r\n  0x10,\r\n  0xf0,\r\n  0x00,\r\n  0x00,\r\n  0x1f,\r\n  0x10,\r\n  0x1f,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x1f,\r\n  0x14,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xfc,\r\n  0x14,\r\n  0x00,\r\n  0x00,\r\n  0xf0,\r\n  0x10,\r\n  0xf0,\r\n  0x10,\r\n  0x10,\r\n  0xff,\r\n  0x10,\r\n  0xff,\r\n  0x14,\r\n  0x14,\r\n  0x14,\r\n  0xff,\r\n  0x14,\r\n  0x10,\r\n  0x10,\r\n  0x10,\r\n  0x1f,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xf0,\r\n  0x10,\r\n  0xff,\r\n  0xff,\r\n  0xff,\r\n  0xff,\r\n  0xff,\r\n  0xf0,\r\n  0xf0,\r\n  0xf0,\r\n  0xf0,\r\n  0xf0,\r\n  0xff,\r\n  0xff,\r\n  0xff,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0xff,\r\n  0x0f,\r\n  0x0f,\r\n  0x0f,\r\n  0x0f,\r\n  0x0f,\r\n  0x38,\r\n  0x44,\r\n  0x44,\r\n  0x38,\r\n  0x44,\r\n  0x7c,\r\n  0x2a,\r\n  0x2a,\r\n  0x3e,\r\n  0x14,\r\n  0x7e,\r\n  0x02,\r\n  0x02,\r\n  0x06,\r\n  0x06,\r\n  0x02,\r\n  0x7e,\r\n  0x02,\r\n  0x7e,\r\n  0x02,\r\n  0x63,\r\n  0x55,\r\n  0x49,\r\n  0x41,\r\n  0x63,\r\n  0x38,\r\n  0x44,\r\n  0x44,\r\n  0x3c,\r\n  0x04,\r\n  0x40,\r\n  0x7e,\r\n  0x20,\r\n  0x1e,\r\n  0x20,\r\n  0x06,\r\n  0x02,\r\n  0x7e,\r\n  0x02,\r\n  0x02,\r\n  0x99,\r\n  0xa5,\r\n  0xe7,\r\n  0xa5,\r\n  0x99,\r\n  0x1c,\r\n  0x2a,\r\n  0x49,\r\n  0x2a,\r\n  0x1c,\r\n  0x4c,\r\n  0x72,\r\n  0x01,\r\n  0x72,\r\n  0x4c,\r\n  0x30,\r\n  0x4a,\r\n  0x4d,\r\n  0x4d,\r\n  0x30,\r\n  0x30,\r\n  0x48,\r\n  0x78,\r\n  0x48,\r\n  0x30,\r\n  0xbc,\r\n  0x62,\r\n  0x5a,\r\n  0x46,\r\n  0x3d,\r\n  0x3e,\r\n  0x49,\r\n  0x49,\r\n  0x49,\r\n  0x00,\r\n  0x7e,\r\n  0x01,\r\n  0x01,\r\n  0x01,\r\n  0x7e,\r\n  0x2a,\r\n  0x2a,\r\n  0x2a,\r\n  0x2a,\r\n  0x2a,\r\n  0x44,\r\n  0x44,\r\n  0x5f,\r\n  0x44,\r\n  0x44,\r\n  0x40,\r\n  0x51,\r\n  0x4a,\r\n  0x44,\r\n  0x40,\r\n  0x40,\r\n  0x44,\r\n  0x4a,\r\n  0x51,\r\n  0x40,\r\n  0x00,\r\n  0x00,\r\n  0xff,\r\n  0x01,\r\n  0x03,\r\n  0xe0,\r\n  0x80,\r\n  0xff,\r\n  0x00,\r\n  0x00,\r\n  0x08,\r\n  0x08,\r\n  0x6b,\r\n  0x6b,\r\n  0x08,\r\n  0x36,\r\n  0x12,\r\n  0x36,\r\n  0x24,\r\n  0x36,\r\n  0x06,\r\n  0x0f,\r\n  0x09,\r\n  0x0f,\r\n  0x06,\r\n  0x00,\r\n  0x00,\r\n  0x18,\r\n  0x18,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x10,\r\n  0x10,\r\n  0x00,\r\n  0x30,\r\n  0x40,\r\n  0xff,\r\n  0x01,\r\n  0x01,\r\n  0x00,\r\n  0x1f,\r\n  0x01,\r\n  0x01,\r\n  0x1e,\r\n  0x00,\r\n  0x19,\r\n  0x1d,\r\n  0x17,\r\n  0x12,\r\n  0x00,\r\n  0x3c,\r\n  0x3c,\r\n  0x3c,\r\n  0x3c,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n  0x00,\r\n];\r\n"]}