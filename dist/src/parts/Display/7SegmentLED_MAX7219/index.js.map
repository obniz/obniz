{"version":3,"sources":["../src/parts/Display/7SegmentLED_MAX7219/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface _7SegmentLED_MAX7219Options {\r\n  clk: number;\r\n  cs: number;\r\n  din: number;\r\n  gnd?: number;\r\n  vcc?: number;\r\n}\r\n\r\nexport type MAX7219NumberType = \"on\" | \"off\" | \"-\" | \"e\" | \"h\" | \"l\" | \"p\";\r\n\r\nexport default class _7SegmentLED_MAX7219 implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"7SegmentLED_MAX7219\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public cs!: PeripheralIO;\r\n  public params: any;\r\n  public spi!: PeripheralSPI;\r\n  public obniz!: Obniz;\r\n  public numOfDisp!: number;\r\n  public digits!: number;\r\n\r\n  constructor() {\r\n    this.keys = [\"vcc\", \"gnd\", \"din\", \"cs\", \"clk\"];\r\n    this.requiredKeys = [\"din\", \"cs\", \"clk\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.cs = obniz.getIO(this.params.cs);\r\n    // logich high must 3.5v <=\r\n    if (obniz.isValidIO(this.params.vcc)) {\r\n      obniz.getIO(this.params.vcc).output(true);\r\n    }\r\n    if (obniz.isValidIO(this.params.gnd)) {\r\n      obniz.getIO(this.params.gnd).output(false);\r\n    }\r\n\r\n    // max 10Mhz but motor driver can't\r\n    this.params.frequency = this.params.frequency || 10 * 1000 * 1000;\r\n    this.params.mode = \"master\";\r\n    this.params.mosi = this.params.din;\r\n    this.params.drive = \"3v\";\r\n    this.spi = this.obniz.getSpiWithConfig(this.params);\r\n\r\n    // reset a onece\r\n    this.cs.output(true);\r\n    this.cs.output(false);\r\n    this.cs.output(true);\r\n  }\r\n\r\n  public init(numberOfDisplays: number, digits: number) {\r\n    this.numOfDisp = numberOfDisplays;\r\n    this.digits = digits;\r\n    this.writeAllDisp([0x09, 0xff]); // Code B decode for digits 7-0\r\n    this.writeAllDisp([0x0a, 0x05]); // brightness 11/32 0 to f\r\n    this.writeAllDisp([0x0b, digits - 1]);\r\n    this.writeAllDisp([0x0c, 0x01]); // Shutdown to normal operation\r\n    this.writeAllDisp([0x0f, 0x00]);\r\n    this.obniz.wait(10);\r\n  }\r\n\r\n  public clear(disp: number) {\r\n    for (let i = 0; i < this.digits; i++) {\r\n      this.writeOneDisp(disp, [i + 1, 0x0f]);\r\n    }\r\n  }\r\n\r\n  public clearAll() {\r\n    for (let i = 0; i < this.numOfDisp; i++) {\r\n      for (let j = 0; j < this.digits; j++) {\r\n        this.writeAllDisp([j + 1, 0x0f]);\r\n      }\r\n    }\r\n  }\r\n\r\n  public test() {\r\n    this.writeAllDisp([0x0f, 0x00]); // test command\r\n  }\r\n\r\n  public brightness(display: number, value: number) {\r\n    this.writeOneDisp(display, [0x0a, value]); // 0 to 15;\r\n  }\r\n\r\n  public brightnessAll(value: number) {\r\n    this.writeAllDisp([0x0a, value]); // 0 to 15;\r\n  }\r\n\r\n  public writeAllDisp(data: number[]) {\r\n    for (let i = 0; i < this.numOfDisp; i++) {\r\n      this.writeOneDisp(i, data);\r\n    }\r\n  }\r\n\r\n  public writeOneDisp(disp: number, data: number[]) {\r\n    this.cs.output(false);\r\n    for (let i = 0; i < disp; i++) {\r\n      this.spi.write([0x00, 0x00]);\r\n    }\r\n    this.spi.write(data);\r\n    for (let i = 0; i < this.numOfDisp - (disp + 1); i++) {\r\n      this.spi.write([0x00, 0x00]);\r\n    }\r\n    this.cs.output(true);\r\n  }\r\n\r\n  public setNumber(display: number, digit: number, number: number | MAX7219NumberType, dp: boolean) {\r\n    if (digit >= 0 && digit <= this.digits - 1) {\r\n      this.writeOneDisp(display, [digit + 1, this.encodeBCD(number, dp)]);\r\n    }\r\n  }\r\n\r\n  public encodeBCD(decimal: number | string, dp: any): number {\r\n    const dpreg = (dp === true) ? 0x80 : 0x00;\r\n\r\n    if (decimal >= 0 && decimal <= 9) {\r\n      return (decimal as number) | dpreg;\r\n    } else if (decimal === \"-\" || decimal === 10) {\r\n      return 0x0a | dpreg;\r\n    } else if (decimal === \"e\" || decimal === 11) {\r\n      return 0x0b | dpreg;\r\n    } else if (decimal === \"h\" || decimal === 12) {\r\n      return 0x0c | dpreg;\r\n    } else if (decimal === \"l\" || decimal === 13) {\r\n      return 0x0d | dpreg;\r\n    } else if (decimal === \"p\" || decimal === 14) {\r\n      return 0x0e | dpreg;\r\n    } else if (decimal === \"on\") {\r\n      // light all segments\r\n      return 0x88;\r\n    } else if (decimal === \"off\") {\r\n      return 0x0f | dpreg;\r\n    } else {\r\n      return 0x0f | dpreg;\r\n    }\r\n  }\r\n}\r\n"]}