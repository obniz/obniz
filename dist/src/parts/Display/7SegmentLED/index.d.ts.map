{"version":3,"sources":["../src/parts/Display/7SegmentLED/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,YAAY,MAAM,uCAAuC,CAAC;AACjE,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,mBAAmB;IAClC,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,EAAE,CAAC,EAAE,MAAM,CAAC;IACZ,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,UAAU,CAAC,EAAE,MAAM,CAAC;CACrB;AAED,cAAM,YAAa,YAAW,mBAAmB;WAEjC,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,MAAM,EAAE,CAAC;IACjB,cAAc,EAAE;QAAC,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAC,CAAC;IACxC,KAAK,EAAG,KAAK,CAAC;IACd,GAAG,EAAE,YAAY,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,CAAC;IACZ,eAAe,EAAE,OAAO,CAAC;IACzB,EAAE,CAAC,EAAE,YAAY,CAAC;IAClB,MAAM,CAAC,EAAE,YAAY,CAAC;;IA8CtB,KAAK,CAAC,KAAK,EAAE,KAAK;IA8ClB,KAAK,CAAC,IAAI,EAAE,MAAM;IAkBlB,QAAQ,CAAC,IAAI,EAAE,MAAM;IAerB,OAAO,CAAC,IAAI,EAAE,OAAO;IAMrB,EAAE;IAMF,GAAG;CAKX;AAED,eAAe,YAAY,CAAC","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nexport interface _7SegmentLEDOptions {\r\n  a: number;\r\n  b: number;\r\n  c: number;\r\n  d: number;\r\n  e: number;\r\n  f: number;\r\n  g: number;\r\n  dp?: number;\r\n  common?: number;\r\n  commonType?: string;\r\n}\r\n\r\nclass _7SegmentLED implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"7SegmentLED\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public digits: number[];\r\n  public displayIoNames: {[key: string]: string};\r\n  public obniz!: Obniz;\r\n  public ios: PeripheralIO[];\r\n  public params: any;\r\n  public isCathodeCommon: boolean;\r\n  public dp?: PeripheralIO;\r\n  public common?: PeripheralIO;\r\n\r\n  constructor() {\r\n    this.keys = [\r\n      \"a\",\r\n      \"b\",\r\n      \"c\",\r\n      \"d\",\r\n      \"e\",\r\n      \"f\",\r\n      \"g\",\r\n      \"dp\",\r\n      \"common\",\r\n      \"commonType\",\r\n    ];\r\n    this.requiredKeys = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"];\r\n\r\n    this.digits = [\r\n      0x3f,\r\n      0x06,\r\n      0x5b,\r\n      0x4f,\r\n      0x66,\r\n      0x6d,\r\n      0x7d,\r\n      0x07,\r\n      0x7f,\r\n      0x6f,\r\n      0x6f,\r\n    ];\r\n\r\n    this.displayIoNames = {\r\n      a: \"a\",\r\n      b: \"b\",\r\n      c: \"c\",\r\n      d: \"d\",\r\n      e: \"e\",\r\n      f: \"f\",\r\n      g: \"g\",\r\n      dp: \"dp\",\r\n      common: \"com\",\r\n    };\r\n    this.ios = [];\r\n    this.isCathodeCommon = false;\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    function getIO(io: any) {\r\n      if (io && typeof io === \"object\") {\r\n        if (typeof io.output === \"function\") {\r\n          return io;\r\n        }\r\n      }\r\n      return obniz.getIO(io);\r\n    }\r\n\r\n    function isValidIO(io: any) {\r\n      if (io && typeof io === \"object\") {\r\n        if (typeof io.output === \"function\") {\r\n          return true;\r\n        }\r\n      }\r\n      return obniz.isValidIO(io);\r\n    }\r\n\r\n    this.obniz = obniz;\r\n    this.ios = [];\r\n    this.ios.push(getIO(this.params.a));\r\n    this.ios.push(getIO(this.params.b));\r\n    this.ios.push(getIO(this.params.c));\r\n    this.ios.push(getIO(this.params.d));\r\n    this.ios.push(getIO(this.params.e));\r\n    this.ios.push(getIO(this.params.f));\r\n    this.ios.push(getIO(this.params.g));\r\n\r\n    this.isCathodeCommon = this.params.commonType === \"anode\" ? false : true;\r\n\r\n    for (let i = 0; i < this.ios.length; i++) {\r\n      this.ios[i].output(this.isCathodeCommon ? false : true);\r\n    }\r\n\r\n    if (isValidIO(this.params.dp)) {\r\n      const dp = getIO(this.params.dp);\r\n      dp.output(false);\r\n      this.dp = dp;\r\n    }\r\n    if (isValidIO(this.params.common)) {\r\n      this.common = getIO(this.params.common);\r\n      this.on();\r\n    }\r\n  }\r\n\r\n  public print(data: number) {\r\n    if (typeof data === \"number\") {\r\n      data = Math.floor(data);\r\n      data = data % 10;\r\n\r\n      for (let i = 0; i < 7; i++) {\r\n        if (this.ios[i]) {\r\n          let val: any = this.digits[data] & (1 << i) ? true : false;\r\n          if (!this.isCathodeCommon) {\r\n            val = !val;\r\n          }\r\n          this.ios[i].output(val);\r\n        }\r\n      }\r\n      this.on();\r\n    }\r\n  }\r\n\r\n  public printRaw(data: number) {\r\n    if (typeof data === \"number\") {\r\n      for (let i = 0; i < 7; i++) {\r\n        if (this.ios[i]) {\r\n          let val: any = data & (1 << i) ? true : false;\r\n          if (!this.isCathodeCommon) {\r\n            val = !val;\r\n          }\r\n          this.ios[i].output(val);\r\n        }\r\n      }\r\n      this.on();\r\n    }\r\n  }\r\n\r\n  public dpState(show: boolean) {\r\n    if (this.dp) {\r\n      this.dp.output(this.isCathodeCommon ? show : !show);\r\n    }\r\n  }\r\n\r\n  public on() {\r\n    if (this.common) {\r\n      this.common.output(this.isCathodeCommon ? false : true);\r\n    }\r\n  }\r\n\r\n  public off() {\r\n    if (this.common) {\r\n      this.common.output(this.isCathodeCommon ? true : false);\r\n    }\r\n  }\r\n}\r\n\r\nexport default _7SegmentLED;\r\n"]}