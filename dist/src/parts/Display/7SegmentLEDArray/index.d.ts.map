{"version":3,"sources":["../src/parts/Display/7SegmentLEDArray/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AACvF,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAE1C,MAAM,WAAW,wBAAwB;IACvC,QAAQ,EAAE,YAAY,EAAE,CAAC;CAC1B;AAED,MAAM,CAAC,OAAO,OAAO,iBAAkB,YAAW,mBAAmB;WAErD,IAAI,IAAI,cAAc;IAM7B,UAAU,EAAE,MAAM,CAAC;IACnB,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,KAAK,EAAG,KAAK,CAAC;IACd,QAAQ,EAAG,YAAY,EAAE,CAAC;IAC1B,MAAM,EAAE,GAAG,CAAC;;IASZ,KAAK,CAAC,KAAK,EAAE,KAAK;IAMlB,KAAK,CAAC,IAAI,EAAE,MAAM;IA6BlB,EAAE;IAIF,GAAG;CAMX","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\nimport _7SegmentLED from \"../7SegmentLED\";\n\nexport interface _7SegmentLEDArrayOptions {\n  segments: _7SegmentLED[];\n}\n\nexport default class _7SegmentLEDArray implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"7SegmentLEDArray\",\n    };\n  }\n\n  public identifier: string;\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public segments!: _7SegmentLED[];\n  public params: any;\n\n  constructor() {\n    this.identifier = \"\" + new Date().getTime();\n\n    this.keys = [\"segments\"];\n    this.requiredKeys = this.keys;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    this.segments = this.params.segments;\n  }\n\n  public print(data: number) {\n    if (typeof data === \"number\") {\n      data = Math.floor(data);\n\n      const print: any = (index: number) => {\n        let val: any = data;\n\n        for (let i = 0; i < this.segments.length; i++) {\n          if (index === i) {\n            this.segments[i].print(val % 10);\n          } else {\n            this.segments[i].off();\n          }\n          val = val / 10;\n        }\n      };\n\n      const animations: any = [];\n      for (let i = 0; i < this.segments.length; i++) {\n        animations.push({\n          duration: 3,\n          state: print,\n        });\n      }\n\n      this.obniz.io!.animation(this.identifier, \"loop\", animations);\n    }\n  }\n\n  public on() {\n    this.obniz.io!.animation(this.identifier, \"resume\");\n  }\n\n  public off() {\n    this.obniz.io!.animation(this.identifier, \"pause\");\n    for (let i = 0; i < this.segments.length; i++) {\n      this.segments[i].off();\n    }\n  }\n}\n"]}