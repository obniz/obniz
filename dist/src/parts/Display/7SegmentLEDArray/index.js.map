{"version":3,"sources":["../src/parts/Display/7SegmentLEDArray/index.ts"],"names":[],"mappings":";;AAQA,MAAqB,iBAAiB;IAepC;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5C,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;IAChC,CAAC;IAlBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,kBAAkB;SACzB,CAAC;IACJ,CAAC;IAgBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IACvC,CAAC;IAEM,KAAK,CAAC,IAAY;QACvB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAExB,MAAM,KAAK,GAAQ,CAAC,KAAa,EAAE,EAAE;gBACnC,IAAI,GAAG,GAAQ,IAAI,CAAC;gBAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;wBACf,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;qBAClC;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;qBACxB;oBACD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;iBAChB;YACH,CAAC,CAAC;YAEF,MAAM,UAAU,GAAQ,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,UAAU,CAAC,IAAI,CAAC;oBACd,QAAQ,EAAE,CAAC;oBACX,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SAC/D;IACH,CAAC;IAEM,EAAE;QACP,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACxB;IACH,CAAC;CACF;AAnED,oCAmEC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\nimport _7SegmentLED from \"../7SegmentLED\";\r\n\r\nexport interface _7SegmentLEDArrayOptions {\r\n  segments: _7SegmentLED[];\r\n}\r\n\r\nexport default class _7SegmentLEDArray implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"7SegmentLEDArray\",\r\n    };\r\n  }\r\n\r\n  public identifier: string;\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public obniz!: Obniz;\r\n  public segments!: _7SegmentLED[];\r\n  public params: any;\r\n\r\n  constructor() {\r\n    this.identifier = \"\" + new Date().getTime();\r\n\r\n    this.keys = [\"segments\"];\r\n    this.requiredKeys = this.keys;\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n\r\n    this.segments = this.params.segments;\r\n  }\r\n\r\n  public print(data: number) {\r\n    if (typeof data === \"number\") {\r\n      data = Math.floor(data);\r\n\r\n      const print: any = (index: number) => {\r\n        let val: any = data;\r\n\r\n        for (let i = 0; i < this.segments.length; i++) {\r\n          if (index === i) {\r\n            this.segments[i].print(val % 10);\r\n          } else {\r\n            this.segments[i].off();\r\n          }\r\n          val = val / 10;\r\n        }\r\n      };\r\n\r\n      const animations: any = [];\r\n      for (let i = 0; i < this.segments.length; i++) {\r\n        animations.push({\r\n          duration: 3,\r\n          state: print,\r\n        });\r\n      }\r\n\r\n      this.obniz.io!.animation(this.identifier, \"loop\", animations);\r\n    }\r\n  }\r\n\r\n  public on() {\r\n    this.obniz.io!.animation(this.identifier, \"resume\");\r\n  }\r\n\r\n  public off() {\r\n    this.obniz.io!.animation(this.identifier, \"pause\");\r\n    for (let i = 0; i < this.segments.length; i++) {\r\n      this.segments[i].off();\r\n    }\r\n  }\r\n}\r\n"]}