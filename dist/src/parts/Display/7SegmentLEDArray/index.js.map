{"version":3,"sources":["../src/parts/Display/7SegmentLEDArray/index.ts"],"names":[],"mappings":";;AAQA,MAAqB,iBAAiB;IAepC;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5C,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;IAChC,CAAC;IAlBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,kBAAkB;SACzB,CAAC;IACJ,CAAC;IAgBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IACvC,CAAC;IAEM,KAAK,CAAC,IAAY;QACvB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAExB,MAAM,KAAK,GAAQ,CAAC,KAAa,EAAE,EAAE;gBACnC,IAAI,GAAG,GAAQ,IAAI,CAAC;gBAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;wBACf,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;qBAClC;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;qBACxB;oBACD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;iBAChB;YACH,CAAC,CAAC;YAEF,MAAM,UAAU,GAAQ,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,UAAU,CAAC,IAAI,CAAC;oBACd,QAAQ,EAAE,CAAC;oBACX,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SAC/D;IACH,CAAC;IAEM,EAAE;QACP,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACxB;IACH,CAAC;CACF;AAnED,oCAmEC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\nimport _7SegmentLED from \"../7SegmentLED\";\n\nexport interface _7SegmentLEDArrayOptions {\n  segments: _7SegmentLED[];\n}\n\nexport default class _7SegmentLEDArray implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"7SegmentLEDArray\",\n    };\n  }\n\n  public identifier: string;\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public segments!: _7SegmentLED[];\n  public params: any;\n\n  constructor() {\n    this.identifier = \"\" + new Date().getTime();\n\n    this.keys = [\"segments\"];\n    this.requiredKeys = this.keys;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    this.segments = this.params.segments;\n  }\n\n  public print(data: number) {\n    if (typeof data === \"number\") {\n      data = Math.floor(data);\n\n      const print: any = (index: number) => {\n        let val: any = data;\n\n        for (let i = 0; i < this.segments.length; i++) {\n          if (index === i) {\n            this.segments[i].print(val % 10);\n          } else {\n            this.segments[i].off();\n          }\n          val = val / 10;\n        }\n      };\n\n      const animations: any = [];\n      for (let i = 0; i < this.segments.length; i++) {\n        animations.push({\n          duration: 3,\n          state: print,\n        });\n      }\n\n      this.obniz.io!.animation(this.identifier, \"loop\", animations);\n    }\n  }\n\n  public on() {\n    this.obniz.io!.animation(this.identifier, \"resume\");\n  }\n\n  public off() {\n    this.obniz.io!.animation(this.identifier, \"pause\");\n    for (let i = 0; i < this.segments.length; i++) {\n      this.segments[i].off();\n    }\n  }\n}\n"]}