{"version":3,"sources":["../src/parts/Display/MatrixLED_MAX7219/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport PeripheralIO from \"../../../obniz/libs/io_peripherals/io\";\nimport PeripheralSPI from \"../../../obniz/libs/io_peripherals/spi\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface MatrixLED_MAX7219Options {\n  clk: number;\n  cs: number;\n  din: number;\n  gnd?: number;\n  vcc?: number;\n}\n\nexport default class MatrixLED_MAX7219 implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"MatrixLED_MAX7219\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public cs!: PeripheralIO;\n  public params: any;\n  public spi!: PeripheralSPI;\n  public obniz!: Obniz;\n  public width: number = 0;\n  public height: number = 0;\n  public vram: number[][] = [[]];\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"din\", \"cs\", \"clk\"];\n    this.requiredKeys = [\"din\", \"cs\", \"clk\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.cs = obniz.getIO(this.params.cs);\n    // logich high must 3.5v <=\n    if (obniz.isValidIO(this.params.vcc)) {\n      obniz.getIO(this.params.vcc).output(true);\n    }\n    if (obniz.isValidIO(this.params.gnd)) {\n      obniz.getIO(this.params.gnd).output(false);\n    }\n\n    // max 10Mhz but motor driver can't\n    this.params.frequency = this.params.frequency || 10 * 1000 * 1000;\n    this.params.mode = \"master\";\n    this.params.mosi = this.params.din;\n    this.params.drive = \"3v\";\n    this.spi = this.obniz.getSpiWithConfig(this.params);\n\n    // reset a onece\n    this.cs.output(true);\n    this.cs.output(false);\n    this.cs.output(true);\n  }\n\n  public init(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.preparevram(width, height);\n    this.initModule();\n  }\n\n  public initModule() {\n    this.write([0x09, 0x00]); // Code B decode for digits 3-0 No decode for digits 7-4\n    this.write([0x0a, 0x05]); // brightness 9/32 0 to f\n    this.write([0x0b, 0x07]); // Display digits 0 1 2 3 4 567\n    this.write([0x0c, 0x01]); // Shutdown to normal operation\n    this.write([0x0f, 0x00]);\n    this.passingCommands();\n    this.obniz.wait(10);\n  }\n\n  public test() {\n    this.write([0x0f, 0x00]); // test command\n    this.passingCommands();\n  }\n\n  public passingCommands() {\n    for (let i = 8; i < this.width; i += 8) {\n      // this needed for number of unit\n      this.write([0x00, 0x00]);\n    }\n  }\n\n  public brightness(val: number) {\n    this.write([0x0a, val]); // 0 to 15;\n    this.passingCommands();\n  }\n\n  public preparevram(width: number, height: number) {\n    this.vram = [];\n    for (let i = 0; i < height; i++) {\n      const dots: number[] = new Array(width / 8);\n      for (let ii = 0; ii < dots.length; ii++) {\n        dots[ii] = 0x00;\n      }\n      this.vram.push(dots);\n    }\n  }\n\n  public write(data: number[]) {\n    this.cs.output(false);\n    this.spi.write(data);\n    this.cs.output(true);\n  }\n\n  public writeVram() {\n    for (let line_num = 0; line_num < this.height; line_num++) {\n      const addr = line_num + 1;\n      const line = this.vram[line_num];\n      const data: number[] = [];\n      for (let col = 0; col < line.length; col++) {\n        data.push(addr);\n        data.push(line[col]);\n      }\n      this.write(data);\n    }\n  }\n\n  public clear() {\n    for (let line_num = 0; line_num < this.height; line_num++) {\n      const line = this.vram[line_num];\n      for (let col = 0; col < line.length; col++) {\n        this.vram[line_num][col] = 0x00;\n      }\n      this.writeVram();\n    }\n  }\n\n  public draw(ctx: CanvasRenderingContext2D) {\n    const imageData = ctx.getImageData(0, 0, this.width, this.height);\n    const data = imageData.data;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n      const index = Math.floor(i / 4);\n      const line = Math.floor(index / this.width);\n      const col = Math.floor((index - line * this.width) / 8);\n      const bits = Math.floor(index - line * this.width) % 8;\n      if (bits === 0) {\n        this.vram[line][col] = 0x00;\n      }\n      if (brightness > 0x7f) {\n        this.vram[line][col] |= 0x80 >> bits;\n      }\n    }\n\n    this.writeVram();\n  }\n}\n"]}