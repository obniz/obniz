{"version":3,"sources":["../src/parts/Infrared/IRModule/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,OAAO,WAAW,MAAM,gBAAgB,CAAC;AACzC,OAAO,QAAQ,MAAM,aAAa,CAAC;AAEnC,MAAM,WAAW,eAAe;IAC9B,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;IACb,GAAG,CAAC,EAAE,MAAM,CAAC;CACd;AAED,MAAM,CAAC,OAAO,OAAO,QAAS,YAAW,mBAAmB;WAE5C,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC;IAEZ,MAAM,EAAG,QAAQ,CAAC;IAClB,GAAG,EAAG,WAAW,CAAC;IAEzB,SAAS,CAAC,KAAK,EAAG,KAAK,CAAC;IAExB,IAAI,gBAAgB,WAEnB;IAED,IAAI,gBAAgB,CAAC,CAAC,QAAA,EAGrB;;IAOM,KAAK,CAAC,KAAK,EAAE,KAAK;IA2BlB,IAAI,CAAC,GAAG,EAAE,GAAG;IAIb,KAAK,CAAC,QAAQ,EAAE,GAAG;IAInB,eAAe,CAAC,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;CAapD","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\r\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\r\n\r\nimport InfraredLED from \"../InfraredLED\";\r\nimport IRSensor from \"../IRSensor\";\r\n\r\nexport interface IRModuleOptions {\r\n  send: number;\r\n  recv: number;\r\n  vcc?: number;\r\n  gnd?: number;\r\n}\r\n\r\nexport default class IRModule implements ObnizPartsInterface {\r\n\r\n  public static info(): ObnizPartsInfo {\r\n    return {\r\n      name: \"IRModule\",\r\n    };\r\n  }\r\n\r\n  public keys: string[];\r\n  public requiredKeys: string[];\r\n  public params: any;\r\n\r\n  public sensor!: IRSensor;\r\n  public led!: InfraredLED;\r\n\r\n  protected obniz!: Obniz;\r\n\r\n  get dataSymbolLength() {\r\n    return this.sensor.dataSymbolLength;\r\n  }\r\n\r\n  set dataSymbolLength(x) {\r\n    this.sensor.dataSymbolLength = x;\r\n    this.led.dataSymbolLength = x;\r\n  }\r\n\r\n  constructor() {\r\n    this.keys = [\"recv\", \"vcc\", \"send\", \"gnd\"];\r\n    this.requiredKeys = [\"recv\", \"send\"];\r\n  }\r\n\r\n  public wired(obniz: Obniz) {\r\n    this.obniz = obniz;\r\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\r\n\r\n    if (!obniz.isValidIO(this.params.recv)) {\r\n      throw new Error(\"recv is not valid io\");\r\n    }\r\n\r\n    if (!obniz.isValidIO(this.params.send)) {\r\n      throw new Error(\"send is not valid io\");\r\n    }\r\n\r\n    this.sensor = obniz.wired(\"IRSensor\", {\r\n      output: this.params.recv,\r\n    });\r\n    this.setGetterSetter(\"sensor\", \"duration\");\r\n    this.setGetterSetter(\"sensor\", \"dataInverted\");\r\n    this.setGetterSetter(\"sensor\", \"cutTail\");\r\n    this.setGetterSetter(\"sensor\", \"output_pullup\");\r\n    this.setGetterSetter(\"sensor\", \"ondetect\");\r\n\r\n    this.led = obniz.wired(\"InfraredLED\", {\r\n      anode: this.params.send,\r\n    });\r\n  }\r\n\r\n  // link\r\n  public send(arr: any) {\r\n    this.led.send(arr);\r\n  }\r\n\r\n  public start(callback: any) {\r\n    this.sensor.start(callback);\r\n  }\r\n\r\n  public setGetterSetter(partsName: any, varName: any) {\r\n    Object.defineProperty(this, varName, {\r\n      get() {\r\n        return this[partsName][varName];\r\n      }\r\n      ,\r\n      set(x: any) {\r\n        this[partsName][varName] = x;\r\n      }\r\n      ,\r\n    })\r\n    ;\r\n  }\r\n}\r\n"]}